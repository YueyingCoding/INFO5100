/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import static java.lang.reflect.Array.set;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashSet;
import static javax.management.Query.or;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.admin;
import model.adminset;
import model.doctor;
import model.doctorset;
import model.encounter;
import model.encounterhistory;
import model.patient;

/**
 *
 * @author chengzhishi
 */
public class DoctorLoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form DoctorLoginPanel
     */
    doctorset set;
    encounterhistory history;
    public int index;
    public DoctorLoginPanel(doctorset set) {
        initComponents();
        this.set = set;
        DoctorProfileJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        Date dl = new Date(10,10,2002);
        doctor ei = set.addNewDoctor();
        ei.setUsername("ABCD");
        ei.setPassword("1234");
        ei.setPhoneNum("9876543210");
        ei.setEmailAdd("swiau@sme.com");
        ei.setEmployeeID(2);
        ei.setGender("Male");
        ei.setName("ABCD");
        ei.setDOB(dl);
        ei.setHospital("AAA");
        ei.setMajor("BBB");
        
        this.history = new encounterhistory();
        
        populateTable();
        
        encounter eh = history.addNewEncounter();
        Date ed = new Date(99, 3, 10);
        eh.setDoctorName("ABCD");
        eh.setPatientName("ABCDE");
        eh.setEncounterDate(ed);
        eh.setBloodPressure(100);
        eh.setHeartRate(90);
        eh.setTemperature(37);
        eh.setDiagnosis("Diabetes");
        eh.setNotes("Eat Less Sugar");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        DoctorLoginJPanel = new javax.swing.JPanel();
        lblDoctorLogin = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lblNewUser = new javax.swing.JLabel();
        btnCreateAccount = new javax.swing.JButton();
        DoctorCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount = new javax.swing.JLabel();
        lblCreatePassword = new javax.swing.JLabel();
        lblCreateUsername = new javax.swing.JLabel();
        txtCreateUsername = new javax.swing.JTextField();
        txtCreatePassword = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        lblDoctorInfo = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblEmailAdd = new javax.swing.JLabel();
        txtEmailAdd = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        lblEmployeeID = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        txtDOB = new javax.swing.JFormattedTextField();
        txtHospital = new javax.swing.JTextField();
        lblHospital = new javax.swing.JLabel();
        lblMajor = new javax.swing.JLabel();
        txtMajor = new javax.swing.JTextField();
        DoctorWorkAreaJPanel = new javax.swing.JPanel();
        btnProfile = new javax.swing.JButton();
        btnEncounterHistory = new javax.swing.JButton();
        lblUpcomingEvents = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        DoctorProfileJPanel = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        lblCreatePassword1 = new javax.swing.JLabel();
        lblShowUsername = new javax.swing.JLabel();
        txtShowUsername = new javax.swing.JTextField();
        txtShowPassword = new javax.swing.JPasswordField();
        lblName1 = new javax.swing.JLabel();
        lblDOB1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        lblPhoneNum1 = new javax.swing.JLabel();
        txtPhoneNum1 = new javax.swing.JTextField();
        lblEmailAdd1 = new javax.swing.JLabel();
        txtEmailAdd1 = new javax.swing.JTextField();
        lblGender1 = new javax.swing.JLabel();
        cmbGender1 = new javax.swing.JComboBox<>();
        lblEmployeeID1 = new javax.swing.JLabel();
        txtEmployeeID1 = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtDOB1 = new javax.swing.JFormattedTextField();
        txtHospital1 = new javax.swing.JTextField();
        lblHospital1 = new javax.swing.JLabel();
        lblMajor1 = new javax.swing.JLabel();
        txtMajor1 = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        DoctorEncounterHistoryJPanel = new javax.swing.JPanel();
        lblEncounterHistory = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        cmbSearch = new javax.swing.JComboBox<>();
        btnSearch2 = new javax.swing.JButton();
        txtSearch2 = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        ViewEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblEncounterDate = new javax.swing.JLabel();
        lblDiagnosis = new javax.swing.JLabel();
        txtDiagnosis = new javax.swing.JTextField();
        lblBloodPressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        lblHeartRate = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        btnUpdate1 = new javax.swing.JButton();
        txtEncounterDate = new javax.swing.JFormattedTextField();
        txtTemperature = new javax.swing.JTextField();
        lblTemperature = new javax.swing.JLabel();
        btnEdit1 = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        txtPatientName = new javax.swing.JTextField();
        lblNotes = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        AddEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail1 = new javax.swing.JLabel();
        lblPatientName1 = new javax.swing.JLabel();
        lblDoctorName1 = new javax.swing.JLabel();
        txtDoctorName1 = new javax.swing.JTextField();
        lblEncounterDate1 = new javax.swing.JLabel();
        lblDiagnosis1 = new javax.swing.JLabel();
        txtDiagnosis1 = new javax.swing.JTextField();
        lblBloodPressure1 = new javax.swing.JLabel();
        txtBloodPressure1 = new javax.swing.JTextField();
        lblHeartRate1 = new javax.swing.JLabel();
        txtHeartRate1 = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtEncounterDate1 = new javax.swing.JFormattedTextField();
        txtTemperature1 = new javax.swing.JTextField();
        lblTemperature1 = new javax.swing.JLabel();
        btnBack3 = new javax.swing.JButton();
        txtPatientName1 = new javax.swing.JTextField();
        lblNotes1 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtNotes1 = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(153, 153, 255));
        setToolTipText("");
        setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        DoctorLoginJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblDoctorLogin.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblDoctorLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorLogin.setText("Doctor Login");

        lblUsername.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblPassword.setText("Password:");

        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Log in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblNewUser.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblNewUser.setText("New User?");

        btnCreateAccount.setText("Create Account");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorLoginJPanelLayout = new javax.swing.GroupLayout(DoctorLoginJPanel);
        DoctorLoginJPanel.setLayout(DoctorLoginJPanelLayout);
        DoctorLoginJPanelLayout.setHorizontalGroup(
            DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblDoctorLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(DoctorLoginJPanelLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin)
                    .addGroup(DoctorLoginJPanelLayout.createSequentialGroup()
                        .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword)
                            .addComponent(lblNewUser))
                        .addGap(18, 18, 18)
                        .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCreateAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(342, Short.MAX_VALUE))
        );
        DoctorLoginJPanelLayout.setVerticalGroup(
            DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorLoginJPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(lblDoctorLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnLogin)
                .addGap(34, 34, 34)
                .addGroup(DoctorLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUser)
                    .addComponent(btnCreateAccount))
                .addContainerGap(6841, Short.MAX_VALUE))
        );

        jLayeredPane1.add(DoctorLoginJPanel, "card2");

        DoctorCreateJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblCreateAccount.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount.setText("Create a Doctor Account");

        lblCreatePassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword.setText("Password:");

        lblCreateUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername.setText("Username:");

        txtCreateUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsernameActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName.setText("Name:");

        lblDoctorInfo.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblDoctorInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorInfo.setText("New Doctor Info");

        lblDOB.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB.setText("Date of Birth:");

        lblPhoneNum.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum.setText("Phone Number:");

        lblEmailAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd.setText("Email Address:");

        lblGender.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender.setText("Gender:");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblEmployeeID.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID.setText("Employee ID:");

        txtEmployeeID.setText("-1");

        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        txtDOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        lblHospital.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital.setText("Hospital:");

        lblMajor.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblMajor.setText("Major:");

        javax.swing.GroupLayout DoctorCreateJPanelLayout = new javax.swing.GroupLayout(DoctorCreateJPanel);
        DoctorCreateJPanel.setLayout(DoctorCreateJPanelLayout);
        DoctorCreateJPanelLayout.setHorizontalGroup(
            DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblDoctorInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                        .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                        .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(btnCreate)
                                .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                    .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                            .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                            .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(lblGender))
                                            .addGap(18, 18, 18)
                                            .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGap(87, 87, 87)
                                    .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                            .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                            .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                            .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtDOB))))))
                        .addContainerGap(150, Short.MAX_VALUE))))
        );
        DoctorCreateJPanelLayout.setVerticalGroup(
            DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblDoctorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6709, Short.MAX_VALUE)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addComponent(btnCreate)
                .addGap(70, 70, 70))
        );

        jLayeredPane1.add(DoctorCreateJPanel, "card3");

        DoctorWorkAreaJPanel.setBackground(new java.awt.Color(51, 255, 51));

        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        btnEncounterHistory.setText("Encounter History");
        btnEncounterHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterHistoryActionPerformed(evt);
            }
        });

        lblUpcomingEvents.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblUpcomingEvents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpcomingEvents.setText("Upcoming Events");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout DoctorWorkAreaJPanelLayout = new javax.swing.GroupLayout(DoctorWorkAreaJPanel);
        DoctorWorkAreaJPanel.setLayout(DoctorWorkAreaJPanelLayout);
        DoctorWorkAreaJPanelLayout.setHorizontalGroup(
            DoctorWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorWorkAreaJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnEncounterHistory)
                .addGap(18, 18, 18)
                .addComponent(btnProfile)
                .addGap(135, 135, 135))
            .addGroup(DoctorWorkAreaJPanelLayout.createSequentialGroup()
                .addGroup(DoctorWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUpcomingEvents, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 23, Short.MAX_VALUE))
        );
        DoctorWorkAreaJPanelLayout.setVerticalGroup(
            DoctorWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorWorkAreaJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(DoctorWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProfile)
                    .addComponent(btnEncounterHistory))
                .addGap(18, 18, 18)
                .addComponent(lblUpcomingEvents)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(6737, Short.MAX_VALUE))
        );

        jLayeredPane1.add(DoctorWorkAreaJPanel, "card4");

        DoctorProfileJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblProfile.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblProfile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfile.setText("Profile");

        lblCreatePassword1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword1.setText("Password:");

        lblShowUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblShowUsername.setText("Username:");

        txtShowUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsernameActionPerformed(evt);
            }
        });

        lblName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName1.setText("Name:");

        lblDOB1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB1.setText("Date of Birth:");

        lblPhoneNum1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum1.setText("Phone Number:");

        lblEmailAdd1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd1.setText("Email Address:");

        lblGender1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender1.setText("Gender:");

        cmbGender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblEmployeeID1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID1.setText("Employee ID:");

        txtEmployeeID1.setText("-1");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtDOB1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB1ActionPerformed(evt);
            }
        });

        lblHospital1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital1.setText("Hospital:");

        lblMajor1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblMajor1.setText("Major:");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorProfileJPanelLayout = new javax.swing.GroupLayout(DoctorProfileJPanel);
        DoctorProfileJPanel.setLayout(DoctorProfileJPanelLayout);
        DoctorProfileJPanelLayout.setHorizontalGroup(
            DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblProfile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                        .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblCreatePassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorProfileJPanelLayout.createSequentialGroup()
                                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGender1))
                                        .addGap(18, 18, 18)
                                        .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbGender1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(87, 87, 87)
                                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDOB1))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorProfileJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(btnEdit)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate))
                                    .addComponent(btnBack, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap(150, Short.MAX_VALUE))))
        );
        DoctorProfileJPanelLayout.setVerticalGroup(
            DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender1)
                    .addComponent(cmbGender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6709, Short.MAX_VALUE)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMajor1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnEdit))
                .addGap(54, 54, 54)
                .addComponent(btnBack)
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(DoctorProfileJPanel, "card5");

        DoctorEncounterHistoryJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblEncounterHistory.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterHistory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterHistory.setText("Encounters");

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Patient", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEncounters);

        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Date", "Patient", "Diagnosis" }));
        cmbSearch.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cmbSearchComponentAdded(evt);
            }
        });
        cmbSearch.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cmbSearchComponentShown(evt);
            }
        });
        cmbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchActionPerformed(evt);
            }
        });

        btnSearch2.setText("Search");
        btnSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch2ActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorEncounterHistoryJPanelLayout = new javax.swing.GroupLayout(DoctorEncounterHistoryJPanel);
        DoctorEncounterHistoryJPanel.setLayout(DoctorEncounterHistoryJPanelLayout);
        DoctorEncounterHistoryJPanelLayout.setHorizontalGroup(
            DoctorEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorEncounterHistoryJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(DoctorEncounterHistoryJPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(DoctorEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(DoctorEncounterHistoryJPanelLayout.createSequentialGroup()
                        .addComponent(btnView)
                        .addGap(122, 122, 122)
                        .addComponent(btnAdd)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(108, 108, 108)
                        .addComponent(btnBack1))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, DoctorEncounterHistoryJPanelLayout.createSequentialGroup()
                        .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSearch2)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        DoctorEncounterHistoryJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnBack1, btnDelete, btnView});

        DoctorEncounterHistoryJPanelLayout.setVerticalGroup(
            DoctorEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorEncounterHistoryJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEncounterHistory)
                .addGap(20, 20, 20)
                .addGroup(DoctorEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch2)
                    .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DoctorEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete)
                    .addComponent(btnBack1))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jLayeredPane1.add(DoctorEncounterHistoryJPanel, "card6");

        ViewEncounterJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblEncounterDetail.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail.setText("Encounter Detail");

        lblPatientName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName.setText("Patient:");

        lblDoctorName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName.setText("Doctor:");

        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });

        lblEncounterDate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate.setText("Encounter Date:");

        lblDiagnosis.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis.setText("Diagnosis:");

        lblBloodPressure.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure.setText("Blood Pressure:");

        lblHeartRate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate.setText("Heart Rate:");

        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        txtEncounterDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtEncounterDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDateActionPerformed(evt);
            }
        });

        lblTemperature.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature.setText("Temperature:");

        btnEdit1.setText("Edit");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        lblNotes.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes.setText("Notes:");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane3.setViewportView(txtNotes);

        javax.swing.GroupLayout ViewEncounterJPanelLayout = new javax.swing.GroupLayout(ViewEncounterJPanel);
        ViewEncounterJPanel.setLayout(ViewEncounterJPanelLayout);
        ViewEncounterJPanelLayout.setHorizontalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEncounterDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87))
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEncounterDate)
                                        .addGap(86, 86, 86)))
                                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblNotes)
                                .addGap(77, 77, 77)
                                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnEdit1)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUpdate1))
                                    .addComponent(btnBack2, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addContainerGap(136, Short.MAX_VALUE))
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        ViewEncounterJPanelLayout.setVerticalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblNotes)
                        .addGap(58, 58, 58)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate1)
                            .addComponent(btnEdit1)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(btnBack2)
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(ViewEncounterJPanel, "card7");

        AddEncounterJPanel.setBackground(new java.awt.Color(51, 255, 51));

        lblEncounterDetail1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail1.setText("Encounter Detail");

        lblPatientName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName1.setText("Patient:");

        lblDoctorName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName1.setText("Doctor:");

        txtDoctorName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName1ActionPerformed(evt);
            }
        });

        lblEncounterDate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate1.setText("Encounter Date:");

        lblDiagnosis1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis1.setText("Diagnosis:");

        lblBloodPressure1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure1.setText("Blood Pressure:");

        lblHeartRate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate1.setText("Heart Rate:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtEncounterDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtEncounterDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDate1ActionPerformed(evt);
            }
        });

        lblTemperature1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature1.setText("Temperature:");

        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        txtPatientName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName1ActionPerformed(evt);
            }
        });

        lblNotes1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes1.setText("Notes:");

        txtNotes1.setColumns(20);
        txtNotes1.setRows(5);
        jScrollPane4.setViewportView(txtNotes1);

        javax.swing.GroupLayout AddEncounterJPanelLayout = new javax.swing.GroupLayout(AddEncounterJPanel);
        AddEncounterJPanel.setLayout(AddEncounterJPanelLayout);
        AddEncounterJPanelLayout.setHorizontalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEncounterDate1)
                                        .addGap(86, 86, 86)))
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack3)))
                        .addContainerGap(136, Short.MAX_VALUE))
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotes1))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        AddEncounterJPanelLayout.setVerticalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotes1)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack3)
                    .addComponent(btnSave))
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(AddEncounterJPanel, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdPasswordActionPerformed

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
        // TODO add your handling code here:
        DoctorEncounterHistoryJPanel.setVisible(false);
        DoctorLoginJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(true);
        
    }//GEN-LAST:event_btnCreateAccountActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID.getText().contains("[a-zA-Z]+")){
            txtEmployeeID.setText("-1");
        }
        
//        Date nonedate = new Date();

//        if (!txtDOB.getValue().equals(nonedate)){
//            Date DOB = (Date)txtDOB.getValue();
//
//        }
        String Username = txtCreateUsername.getText();
        String Password = txtCreatePassword.getText();
        String Name = txtName.getText();
        Date DOB = (Date)txtDOB.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID.getText());
        String Gender = cmbGender.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum.getText();
        String EmailAdd = txtEmailAdd.getText();
        String Hospital = txtHospital.getText();
        String Major = txtMajor.getText();
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (Hospital.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Hospital.");
            saveflag = 0;
        }
        if (Major.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Major.");
            saveflag = 0;
        }
        
        else if (saveflag == 1){
        doctor ei = set.addNewDoctor();
        ei.setUsername(Username);
        ei.setPassword(Password);
        ei.setPhoneNum(PhoneNum);
        ei.setEmailAdd(EmailAdd);
        ei.setEmployeeID(EmployeeID);
        ei.setGender(Gender);
        ei.setName(Name);
        ei.setDOB((Date)txtDOB.getValue());
        JOptionPane.showMessageDialog(this, "Doctor Account Created.");
        
        txtCreateUsername.setText("");
        txtCreatePassword.setText("");
        txtName.setText("");
        txtDOB.setText("");
        txtEmployeeID.setText("");
        cmbGender.setSelectedIndex(0);
        txtPhoneNum.setText("");
        txtEmailAdd.setText("");
        txtEmployeeID.setText("-1");
        txtHospital.setText("");
        txtMajor.setText("");
        
        DoctorWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorLoginJPanel.setVisible(true);
        }
        
        
        
        
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String password = pwdPassword.getText();
        int flag = 0;
//        public int index;
        int i = 0;
        for (doctor ei : set.getHistory()){
            if (ei.getUsername().equals(username) & (ei.getPassword().equals(password))){
                flag = 1;
                index = i;
                DoctorEncounterHistoryJPanel.setVisible(false);
                ViewEncounterJPanel.setVisible(false);
                DoctorCreateJPanel.setVisible(false);
                DoctorProfileJPanel.setVisible(false);
                DoctorLoginJPanel.setVisible(false);
                AddEncounterJPanel.setVisible(false);
                DoctorWorkAreaJPanel.setVisible(true);
            }
            else {
                i += 1;
            }
        }
        if(flag == 0){
            JOptionPane.showMessageDialog(this, "Wrong Username or Password.");
        }
//        admin ei = set.getHistory();
//        if (ei.getUsername().equals(username) & ei.getPassword().equals(password)){
//        
//    }
        
//        for(admin admin: this.set){
//            if (admin.getUsername().equals(username) and admin.getPassword().equals(password)){
//            
//        }
//        }
//        txtUsername.getText();
        
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtCreateUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsernameActionPerformed

    private void txtShowUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowUsernameActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID.getText().contains("[a-zA-Z]+")){
            txtEmployeeID.setText("-1");
        }
        
//        Date nonedate = new Date();

//        if (!txtDOB.getValue().equals(nonedate)){
//            Date DOB = (Date)txtDOB.getValue();
//
//        }
        String Username = txtShowUsername.getText();
        String Password = txtShowPassword.getText();
        String Name = txtName1.getText();
        Date DOB = (Date)txtDOB1.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID1.getText());
        String Gender = cmbGender1.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum1.getText();
        String EmailAdd = txtEmailAdd1.getText();
        String Hospital = txtHospital1.getText();
        String Major = txtMajor1.getText();
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (Hospital.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Hospital.");
            saveflag = 0;
        }
        if (Major.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Major.");
            saveflag = 0;
        }
        
        else if (saveflag == 1){
//        doctor ei = set.addNewDoctor();
        doctor ei = set.getHistory().get(index);
        ei.setUsername(Username);
        ei.setPassword(Password);
        ei.setPhoneNum(PhoneNum);
        ei.setEmailAdd(EmailAdd);
        ei.setEmployeeID(EmployeeID);
        ei.setGender(Gender);
        ei.setName(Name);
        ei.setDOB((Date)txtDOB.getValue());
        JOptionPane.showMessageDialog(this, "Doctor Profile Updated.");
        
//        txtCreateUsername.setText("");
//        txtCreatePassword.setText("");
//        txtName.setText("");
//        txtDOB.setText("");
//        txtEmployeeID.setText("");
//        cmbGender.setSelectedIndex(0);
//        txtPhoneNum.setText("");
//        txtEmailAdd.setText("");
//        txtEmployeeID.setText("-1");
//        txtHospital.setText("");
//        txtMajor.setText("");
//        
//        DoctorCreateJPanel.setVisible(false);
//        DoctorLoginJPanel.setVisible(true);
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnEncounterHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterHistoryActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(true);
        
        populateTable();
//        doctor ei = set.getHistory().get(index);
//        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
//        for (encounter eh : history.getHistory()) {
//            if (eh.getDoctorName().equals(ei.getName())){
//                DateFormat dateFormat = new SimpleDateFormat("yyyy/mm/dd");  
//                String strDate = dateFormat.format(eh.getEncounterDate());  
//                model.addRow(new Object[]{strDate, eh.getPatientName(), eh.getDiagnosis()});
//            }
//        }
        
    }//GEN-LAST:event_btnEncounterHistoryActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(true);
        doctor dr = set.getHistory().get(index);
//        
        txtShowUsername.setText(dr.getName());
        txtShowUsername.setEditable(false);
//        
        txtShowPassword.setText(dr.getPassword());
        txtShowPassword.setEditable(false);
//        
        txtName1.setText(dr.getName());
        txtName1.setEditable(false);
//        
        txtDOB1.setValue(dr.getDOB());
        txtDOB1.setEditable(false);
//        
        txtPhoneNum1.setText(dr.getPhoneNum());
        txtPhoneNum1.setEditable(false);
//        
        txtEmailAdd1.setText(dr.getEmailAdd());
        txtEmailAdd1.setEditable(false);
//        
        cmbGender1.setSelectedItem(dr.getGender());
        cmbGender1.setEnabled(false);
//        
        txtEmployeeID1.setText(String.valueOf(dr.getEmployeeID()));
        txtEmployeeID1.setEditable(false);
//        
        txtHospital1.setText(dr.getHospital());
        txtHospital1.setEditable(false);
//        
        txtMajor1.setText(dr.getMajor());
        txtMajor1.setEditable(false);
//        
//        txtPostalCode.setText(cp.getPostalCode());
//        txtPostalCode.setEditable(false);
//    }             
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        txtShowUsername.setEditable(true);
        txtShowPassword.setEditable(true);
        txtName1.setEditable(true);
        txtDOB1.setEditable(true);
        txtPhoneNum1.setEditable(true);
        txtEmailAdd1.setEditable(true);
        cmbGender1.setEnabled(true);
        txtEmployeeID1.setEditable(true);
        txtHospital1.setEditable(true);
        txtMajor1.setEditable(true);
//        txtPostalCode.setEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbSearchComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cmbSearchComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchComponentAdded

    private void cmbSearchComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmbSearchComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchComponentShown

    private void cmbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchActionPerformed

    private void btnSearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch2ActionPerformed
        // TODO add your handling code here:
        //        System.out.println(cmbSearch.getSelectedItem().toString());
        if (cmbSearch.getSelectedItem().toString().matches("All")) {
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim()));
        }
//
        else if (cmbSearch.getSelectedItem().toString().matches("Date")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 0));
        }
//
        else if (cmbSearch.getSelectedItem().toString().matches("Patient")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 1));
        }

        else if (cmbSearch.getSelectedItem().toString().matches("Diagnosis")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 2));
        }
        
        
//
//        else if (cmbSearch.getSelectedItem().toString().matches("Level")) {
//
//            DefaultTableModel model = (DefaultTableModel) tblOverview.getModel();
//            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
//            tblOverview.setRowSorter(tr);
//            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 3));
//        }
        ////            Vector rowVector = (Vector) rows;
        //            for (int j = 0; j < tblOverview.getColumnCount(); j++){
            //            }
        //            }
        //        }
        //
        //        if(cmbSearch.getSelectedItem().toString() != "All" && txtSearch2.getText().isBlank()){
            //            JOptionPane.showMessageDialog(null, "Please enter a keyword or select All items");
            //        }else{
            //            for(int i = 0; i < tblOverview.getRowCount(); i++){//For each row
                //                for(int j = 0; j < tblOverview.getColumnCount(); j++){//For each column in that row
                    //                    if(tblOverview.getModel().getValueAt(i, j).equals(txtSearch2.getText())){//Search the model
                        //                        System.out.println(tblOverview.getModel().getValueAt(i, j));//Print if found string
                        //                    }
                    //                }//For loop inner
                //}//For loop outer
            ////            List<EmployeeInfo> filteredList = history.Search(cmbSearch.getSelectedItem().toString(), txtSearch2.getText());
            ////            displayTable(filteredList);
            //        }
    }//GEN-LAST:event_btnSearch2ActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0); 
        
        history.deleteEncounter(selectedEncounter); 
        
        JOptionPane.showMessageDialog(this, "Successfully Deleted.");
        
        populateTable();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:
        
        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(true);
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0); 
        
        
        txtDoctorName.setText(selectedEncounter.getDoctorName());
        txtDoctorName.setEditable(false);
        
        txtPatientName.setText(selectedEncounter.getPatientName());
        txtPatientName.setEditable(false);
        
        txtEncounterDate.setValue(selectedEncounter.getEncounterDate());
        txtEncounterDate.setEditable(false);
        
        txtDiagnosis.setText(selectedEncounter.getDiagnosis());
        txtDiagnosis.setEditable(false);
        
        txtBloodPressure.setText(String.valueOf(selectedEncounter.getBloodPressure()));
        txtBloodPressure.setEditable(false);
        
        txtHeartRate.setText(String.valueOf(selectedEncounter.getHeartRate()));
        txtHeartRate.setEditable(false);
        
        txtTemperature.setText(String.valueOf(selectedEncounter.getTemperature()));
        txtTemperature.setEditable(false);
        
        txtNotes.setText(selectedEncounter.getNotes());
        txtNotes.setEditable(false);
//        txtAge.setText(String.valueOf(selectedEmployee.getAge()));
//        txtCellNum.setText(selectedEmployee.getCellNum());
//        cmbGender.setSelectedItem(selectedEmployee.getGender());
//        txtEmailAdd.setText(selectedEmployee.getEmailAdd());
//        txtEmployeeID.setText(String.valueOf(selectedEmployee.getEmployeeID()));
//        txtStartDate.setValue(selectedEmployee.getStartDate());
//        txtLevel.setText(String.valueOf(selectedEmployee.getLevel()));
//        txtTeamInfo.setText(selectedEmployee.getTeaminfo());
//        txtPosTitle.setText(selectedEmployee.getPositionTitle());
//        lblPicture.setIcon(selectedEmployee.getImage());
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void txtEncounterDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDateActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(true);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void txtDOB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB1ActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        String DoctorName = txtDoctorName.getText();
        String PatientName = txtPatientName.getText();
        Date EncounterDate = (Date)txtEncounterDate.getValue();
        String Diagnosis = txtDiagnosis.getText();
        int BloodPressure = Integer.parseInt(txtBloodPressure.getText());
        int HeartRate = Integer.parseInt(txtHeartRate.getText());
        int Temperature = Integer.parseInt(txtTemperature.getText());
        String Notes = txtNotes.getText();

        int docnameflag = 0;
        char[] doccharArray = DoctorName.toCharArray();
        for(char c:doccharArray)
        {
            if (!Character.isLetter(c))
            docnameflag = 1;
        }

        int ptnameflag = 0;
        char[] ptcharArray = PatientName.toCharArray();
        for(char c:ptcharArray)
        {
            if (!Character.isLetter(c))
            ptnameflag = 1;
        }

        int saveflag = 1;
        if (DoctorName.equals("") || docnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Doctor Name.");
            saveflag = 0;
        }
        if (PatientName.equals("") || ptnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Patient Name.");
            saveflag = 0;
        }
        if (EncounterDate == null){
            JOptionPane.showMessageDialog(this, "Invalid Encounter Date.");
            saveflag = 0;
        }
        if (Diagnosis.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Diagnosis.");
            saveflag = 0;
        }
        if (BloodPressure < 0){
            JOptionPane.showMessageDialog(this, "Invalid Blood Pressure.");
            saveflag = 0;
        }
        if (HeartRate < 0){
            JOptionPane.showMessageDialog(this, "Invalid Heart Rate.");
            saveflag = 0;
        }
        if (Temperature < 0){
            JOptionPane.showMessageDialog(this, "Invalid Temperature.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            int selectedRowIndex = tblEncounters.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
                return;
            }
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

            selectedEncounter.setDoctorName(DoctorName);
            selectedEncounter.setPatientName(PatientName);
            selectedEncounter.setEncounterDate(EncounterDate);
            selectedEncounter.setDiagnosis(Diagnosis);
            selectedEncounter.setNotes(Notes);
            selectedEncounter.setBloodPressure(BloodPressure);
            selectedEncounter.setHeartRate(HeartRate);
            selectedEncounter.setTemperature(Temperature);

            JOptionPane.showMessageDialog(this, "Encounter Detail Updated.");
        }

        //        doctor ei = set.addNewDoctor();
        //        doctor ei = set.getHistory().get(index);
        //        ei.setUsername(Username);
        //        ei.setPassword(Password);
        //        ei.setPhoneNum(PhoneNum);
        //        ei.setEmailAdd(EmailAdd);
        //        ei.setEmployeeID(EmployeeID);
        //        ei.setGender(Gender);
        //        ei.setName(Name);
        //        ei.setDOB((Date)txtDOB.getValue());
        //        JOptionPane.showMessageDialog(this, "Doctor Profile Updated.");
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        txtDoctorName.setEditable(true);
        txtPatientName.setEditable(true);
        txtEncounterDate.setEditable(true);
        txtDiagnosis.setEditable(true);
        txtBloodPressure.setEditable(true);
        txtHeartRate.setEditable(true);
        txtTemperature.setEditable(true);
        txtNotes.setEditable(true);
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void txtDoctorName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        encounter ce = history.addNewEncounter();
//        Date ed = new Date(99, 3, 10);
        ce.setDoctorName(txtDoctorName1.getText());
        ce.setPatientName(txtPatientName1.getText());
        ce.setEncounterDate((Date)txtEncounterDate1.getValue());
        ce.setBloodPressure(Integer.parseInt(txtBloodPressure1.getText()));
        ce.setHeartRate(Integer.parseInt(txtHeartRate1.getText()));
        ce.setTemperature(Integer.parseInt(txtTemperature1.getText()));
        ce.setDiagnosis(txtDiagnosis1.getText());
        ce.setNotes(txtNotes1.getText());
        
        populateTable();
        
        JOptionPane.showMessageDialog(this, "New Encounter Saved.");
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtEncounterDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDate1ActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(true);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void txtPatientName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName1ActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        DoctorLoginJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        DoctorEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        DoctorWorkAreaJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddEncounterJPanel;
    private javax.swing.JPanel DoctorCreateJPanel;
    private javax.swing.JPanel DoctorEncounterHistoryJPanel;
    private javax.swing.JPanel DoctorLoginJPanel;
    private javax.swing.JPanel DoctorProfileJPanel;
    private javax.swing.JPanel DoctorWorkAreaJPanel;
    private javax.swing.JPanel ViewEncounterJPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnEncounterHistory;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnView;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbGender1;
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBloodPressure1;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JLabel lblCreatePassword;
    private javax.swing.JLabel lblCreatePassword1;
    private javax.swing.JLabel lblCreateUsername;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDOB1;
    private javax.swing.JLabel lblDiagnosis;
    private javax.swing.JLabel lblDiagnosis1;
    private javax.swing.JLabel lblDoctorInfo;
    private javax.swing.JLabel lblDoctorLogin;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorName1;
    private javax.swing.JLabel lblEmailAdd;
    private javax.swing.JLabel lblEmailAdd1;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblEmployeeID1;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblEncounterDate1;
    private javax.swing.JLabel lblEncounterDetail;
    private javax.swing.JLabel lblEncounterDetail1;
    private javax.swing.JLabel lblEncounterHistory;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHeartRate1;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblHospital1;
    private javax.swing.JLabel lblMajor;
    private javax.swing.JLabel lblMajor1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblNewUser;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblNotes1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientName1;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblPhoneNum1;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblShowUsername;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTemperature1;
    private javax.swing.JLabel lblUpcomingEvents;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtBloodPressure1;
    private javax.swing.JPasswordField txtCreatePassword;
    private javax.swing.JTextField txtCreateUsername;
    private javax.swing.JFormattedTextField txtDOB;
    private javax.swing.JFormattedTextField txtDOB1;
    private javax.swing.JTextField txtDiagnosis;
    private javax.swing.JTextField txtDiagnosis1;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorName1;
    private javax.swing.JTextField txtEmailAdd;
    private javax.swing.JTextField txtEmailAdd1;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeID1;
    private javax.swing.JFormattedTextField txtEncounterDate;
    private javax.swing.JFormattedTextField txtEncounterDate1;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHeartRate1;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtHospital1;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtMajor1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextArea txtNotes1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtPhoneNum1;
    private javax.swing.JTextField txtSearch2;
    private javax.swing.JPasswordField txtShowPassword;
    private javax.swing.JTextField txtShowUsername;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTemperature1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        model.setRowCount(0);
        doctor ei = set.getHistory().get(index);
        
        for (encounter eh : history.getHistory()){
            if (eh.getDoctorName().equals(ei.getName())) {
                Object[] row = new Object[3];
                row[0] = eh;
                row[1] = eh.getPatientName();
                row[2] = eh.getDiagnosis();

                model.addRow(row); 
            }
        }
        
    }
}
