/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.awt.geom.Area;
import static java.lang.reflect.Array.set;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.ResolverStyle;
import java.util.ArrayList;
import java.util.Date;
import static javax.management.Query.or;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Action;
import model.ActionHistory;
import model.VitalSigns;
import model.admin;
import model.adminset;
import model.appointmentlist;
import model.city;
import model.citylist;
import model.community;
import model.communityadminset;
import model.doctorset;
import model.encounter;
import model.encounterhistory;
import model.hospitaladminset;
import model.hospitallist;
import model.house;
import model.patientset;
import model.person;
import model.personset;

/**
 *
 * @author yueyingliang
 */
public class CommunityAdminLoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminLoginPanel
     */
    adminset systemadminset;
    communityadminset communityadminset;
    hospitaladminset hospitaladminset;
    appointmentlist appointmentlist;
    doctorset doctorset;
    encounterhistory encounterhistory;
    hospitallist hospitallist;
    patientset patientset;
    personset personset;
    ActionHistory actionhistory;
    community community;
    city city;
    citylist citylist;
    public int index;
    public CommunityAdminLoginPanel(adminset systemadminset, communityadminset communityadminset, 
            hospitaladminset hospitaladminset, appointmentlist appointmentlist, doctorset doctorset,
            encounterhistory encounterhistory, hospitallist hospitallist, patientset patientset, 
            personset personset, ActionHistory actionhistory, community community, city city, citylist citylist) {
        initComponents();
        this.systemadminset = systemadminset;
        this.communityadminset = communityadminset;
        this.hospitaladminset = hospitaladminset;
        this.appointmentlist = appointmentlist;
        this.doctorset = doctorset;
        this.encounterhistory = encounterhistory;
        this.hospitallist = hospitallist;
        this.patientset = patientset;
        this.personset = personset;
        this.actionhistory = actionhistory;
        this.community = community;
        this.city = city;
        this.citylist = citylist;
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(true);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        CommunityAdminLoginJPanel = new javax.swing.JPanel();
        lblAdminLogin = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        CommunityAdminCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount = new javax.swing.JLabel();
        lblCreatePassword = new javax.swing.JLabel();
        lblCreateUsername = new javax.swing.JLabel();
        txtCreateUsername = new javax.swing.JTextField();
        txtCreatePassword = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        lblAdminInfo = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblEmailAdd = new javax.swing.JLabel();
        txtEmailAdd = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        lblEmployeeID = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        txtDOB = new javax.swing.JFormattedTextField();
        lblDepartment = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JTextField();
        lblLevel = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        CommunityAdminWorkAreaJPanel = new javax.swing.JPanel();
        btnProfile = new javax.swing.JButton();
        lblResidents = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblResidents = new javax.swing.JTable();
        btnDeleteResident = new javax.swing.JButton();
        btnAddResident = new javax.swing.JButton();
        btnViewResident = new javax.swing.JButton();
        btnAddCity = new javax.swing.JButton();
        btnAddCommunity = new javax.swing.JButton();
        btnAddHouse = new javax.swing.JButton();
        CommunityAdminProfileJPanel = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        lblShowPassword = new javax.swing.JLabel();
        lblShowUsername = new javax.swing.JLabel();
        txtShowUsername = new javax.swing.JTextField();
        txtShowPassword = new javax.swing.JPasswordField();
        lblName1 = new javax.swing.JLabel();
        lblDOB1 = new javax.swing.JLabel();
        txtName1 = new javax.swing.JTextField();
        lblPhoneNum1 = new javax.swing.JLabel();
        txtPhoneNum1 = new javax.swing.JTextField();
        lblEmailAdd1 = new javax.swing.JLabel();
        txtEmailAdd1 = new javax.swing.JTextField();
        lblGender1 = new javax.swing.JLabel();
        cmbGender1 = new javax.swing.JComboBox<>();
        lblEmployeeID1 = new javax.swing.JLabel();
        txtEmployeeID1 = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtDOB1 = new javax.swing.JFormattedTextField();
        lblDepartment1 = new javax.swing.JLabel();
        txtDepartment1 = new javax.swing.JTextField();
        lblLevel1 = new javax.swing.JLabel();
        txtLevel1 = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        ResidentProfileJPanel = new javax.swing.JPanel();
        lblProfile1 = new javax.swing.JLabel();
        lblName2 = new javax.swing.JLabel();
        lblDOB2 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblPhoneNum2 = new javax.swing.JLabel();
        txtPhoneNum2 = new javax.swing.JTextField();
        lblEmailAdd2 = new javax.swing.JLabel();
        txtEmailAdd2 = new javax.swing.JTextField();
        lblGender2 = new javax.swing.JLabel();
        cmbGender2 = new javax.swing.JComboBox<>();
        lblHomeAdd = new javax.swing.JLabel();
        txtHomeAdd = new javax.swing.JTextField();
        btnUpdate1 = new javax.swing.JButton();
        txtDOB2 = new javax.swing.JFormattedTextField();
        btnEdit1 = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        AddHouseJPanel = new javax.swing.JPanel();
        lbladdhouse = new javax.swing.JLabel();
        lblAddress = new javax.swing.JLabel();
        lblArea = new javax.swing.JLabel();
        txtAddress = new javax.swing.JTextField();
        lblPostalCode = new javax.swing.JLabel();
        txtPostalCode = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        txtArea = new javax.swing.JTextField();
        lbladdhouse3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblViewHouses = new javax.swing.JTable();
        AddCommunityJPanel = new javax.swing.JPanel();
        lbladdhouse1 = new javax.swing.JLabel();
        lblCommunityName = new javax.swing.JLabel();
        lblArea1 = new javax.swing.JLabel();
        txtCommunityName = new javax.swing.JTextField();
        lblPopulation = new javax.swing.JLabel();
        txtPopulation = new javax.swing.JTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        btnSave1 = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        txtCommunityArea = new javax.swing.JTextField();
        lbladdhouse4 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblViewCommunity = new javax.swing.JTable();
        AddCityJPanel = new javax.swing.JPanel();
        lbladdhouse2 = new javax.swing.JLabel();
        lblCityName = new javax.swing.JLabel();
        lblArea2 = new javax.swing.JLabel();
        txtCityName = new javax.swing.JTextField();
        lblPopulation1 = new javax.swing.JLabel();
        txtPopulation1 = new javax.swing.JTextField();
        lblState = new javax.swing.JLabel();
        txtState = new javax.swing.JTextField();
        btnSave2 = new javax.swing.JButton();
        btnBack4 = new javax.swing.JButton();
        txtCityArea = new javax.swing.JTextField();
        lbladdhouse5 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblViewCity = new javax.swing.JTable();
        AddResidentJPanel = new javax.swing.JPanel();
        lblProfile2 = new javax.swing.JLabel();
        lblName3 = new javax.swing.JLabel();
        lblDOB3 = new javax.swing.JLabel();
        txtName3 = new javax.swing.JTextField();
        lblPhoneNum3 = new javax.swing.JLabel();
        txtPhoneNum3 = new javax.swing.JTextField();
        lblEmailAdd3 = new javax.swing.JLabel();
        txtEmailAdd3 = new javax.swing.JTextField();
        lblGender3 = new javax.swing.JLabel();
        cmbGender3 = new javax.swing.JComboBox<>();
        lblHomeAdd1 = new javax.swing.JLabel();
        txtHomeAdd1 = new javax.swing.JTextField();
        btnUpdate2 = new javax.swing.JButton();
        txtDOB3 = new javax.swing.JFormattedTextField();
        btnBack5 = new javax.swing.JButton();

        setBackground(new java.awt.Color(153, 153, 255));
        setToolTipText("");
        setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(800, 600));
        jLayeredPane1.setLayout(new java.awt.CardLayout());

        CommunityAdminLoginJPanel.setBackground(new java.awt.Color(102, 102, 255));

        lblAdminLogin.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminLogin.setText("Community Admin Login");

        lblUsername.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblPassword.setText("Password:");

        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Log in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CommunityAdminLoginJPanelLayout = new javax.swing.GroupLayout(CommunityAdminLoginJPanel);
        CommunityAdminLoginJPanel.setLayout(CommunityAdminLoginJPanelLayout);
        CommunityAdminLoginJPanelLayout.setHorizontalGroup(
            CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminLoginJPanelLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin)
                    .addGroup(CommunityAdminLoginJPanelLayout.createSequentialGroup()
                        .addGroup(CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(19, 19, 19)
                        .addGroup(CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(CommunityAdminLoginJPanelLayout.createSequentialGroup()
                .addComponent(lblAdminLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 801, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 199, Short.MAX_VALUE))
        );
        CommunityAdminLoginJPanelLayout.setVerticalGroup(
            CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminLoginJPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(lblAdminLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(CommunityAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnLogin)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        jLayeredPane1.add(CommunityAdminLoginJPanel, "card2");

        CommunityAdminCreateJPanel.setBackground(new java.awt.Color(102, 102, 255));

        lblCreateAccount.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount.setText("Create an Admin Account");
        lblCreateAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblCreateAccount.setPreferredSize(new java.awt.Dimension(1000, 37));

        lblCreatePassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword.setText("Password:");

        lblCreateUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername.setText("Username:");

        txtCreateUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsernameActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName.setText("Name:");

        lblAdminInfo.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminInfo.setText("New Admin Info");
        lblAdminInfo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblDOB.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB.setText("Date of Birth:");

        lblPhoneNum.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum.setText("Phone Number:");

        lblEmailAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd.setText("Email Address:");

        lblGender.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender.setText("Gender:");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblEmployeeID.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID.setText("Employee ID:");

        txtEmployeeID.setText("-1");

        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        txtDOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        lblDepartment.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDepartment.setText("Department:");

        lblLevel.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblLevel.setText("Level:");

        txtLevel.setText("-1");

        javax.swing.GroupLayout CommunityAdminCreateJPanelLayout = new javax.swing.GroupLayout(CommunityAdminCreateJPanel);
        CommunityAdminCreateJPanel.setLayout(CommunityAdminCreateJPanelLayout);
        CommunityAdminCreateJPanelLayout.setHorizontalGroup(
            CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                        .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnCreate)
                        .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                            .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                                    .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblGender))
                                    .addGap(18, 18, 18)
                                    .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(87, 87, 87)
                            .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDOB))
                                .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                            .addComponent(lblDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(336, Short.MAX_VALUE))
            .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblCreateAccount, javax.swing.GroupLayout.DEFAULT_SIZE, 800, Short.MAX_VALUE)
                    .addComponent(lblAdminInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        CommunityAdminCreateJPanelLayout.setVerticalGroup(
            CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblAdminInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(CommunityAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(53, 53, 53))
        );

        jLayeredPane1.add(CommunityAdminCreateJPanel, "card3");

        CommunityAdminWorkAreaJPanel.setBackground(new java.awt.Color(102, 102, 255));
        CommunityAdminWorkAreaJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        lblResidents.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblResidents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblResidents.setText("Residents");

        tblResidents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date of Birth", "Name", "Home Address", "Gender"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblResidents);

        btnDeleteResident.setText("Delete");
        btnDeleteResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteResidentActionPerformed(evt);
            }
        });

        btnAddResident.setText("Add");
        btnAddResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddResidentActionPerformed(evt);
            }
        });

        btnViewResident.setText("View");
        btnViewResident.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewResidentActionPerformed(evt);
            }
        });

        btnAddCity.setText("Add City");
        btnAddCity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCityActionPerformed(evt);
            }
        });

        btnAddCommunity.setText("Add Community");
        btnAddCommunity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCommunityActionPerformed(evt);
            }
        });

        btnAddHouse.setText("Add House");
        btnAddHouse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddHouseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CommunityAdminWorkAreaJPanelLayout = new javax.swing.GroupLayout(CommunityAdminWorkAreaJPanel);
        CommunityAdminWorkAreaJPanel.setLayout(CommunityAdminWorkAreaJPanelLayout);
        CommunityAdminWorkAreaJPanelLayout.setHorizontalGroup(
            CommunityAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CommunityAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addComponent(btnAddHouse)
                .addGap(18, 18, 18)
                .addComponent(btnAddCommunity)
                .addGap(18, 18, 18)
                .addComponent(btnAddCity)
                .addGap(18, 18, 18)
                .addComponent(btnProfile)
                .addGap(35, 35, 35))
            .addComponent(lblResidents, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(CommunityAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addGroup(CommunityAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CommunityAdminWorkAreaJPanelLayout.createSequentialGroup()
                        .addComponent(btnViewResident)
                        .addGap(18, 18, 18)
                        .addComponent(btnAddResident)
                        .addGap(18, 18, 18)
                        .addComponent(btnDeleteResident))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 726, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        CommunityAdminWorkAreaJPanelLayout.setVerticalGroup(
            CommunityAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(CommunityAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProfile)
                    .addComponent(btnAddCity)
                    .addComponent(btnAddCommunity)
                    .addComponent(btnAddHouse))
                .addGap(52, 52, 52)
                .addComponent(lblResidents)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CommunityAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteResident)
                    .addComponent(btnAddResident)
                    .addComponent(btnViewResident))
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLayeredPane1.add(CommunityAdminWorkAreaJPanel, "card4");

        CommunityAdminProfileJPanel.setBackground(new java.awt.Color(102, 102, 255));
        CommunityAdminProfileJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        CommunityAdminProfileJPanel.setRequestFocusEnabled(false);

        lblProfile.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblProfile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfile.setText("System Administrator Profile");
        lblProfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblShowPassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblShowPassword.setText("Password:");

        lblShowUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblShowUsername.setText("Username:");

        txtShowUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsernameActionPerformed(evt);
            }
        });

        lblName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName1.setText("Name:");

        lblDOB1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB1.setText("Date of Birth:");

        lblPhoneNum1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum1.setText("Phone Number:");

        lblEmailAdd1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd1.setText("Email Address:");

        lblGender1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender1.setText("Gender:");

        cmbGender1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGender1ActionPerformed(evt);
            }
        });

        lblEmployeeID1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID1.setText("Employee ID:");

        txtEmployeeID1.setText("-1");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtDOB1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB1ActionPerformed(evt);
            }
        });

        lblDepartment1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDepartment1.setText("Department:");

        lblLevel1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblLevel1.setText("Level:");

        txtLevel1.setText("-1");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CommunityAdminProfileJPanelLayout = new javax.swing.GroupLayout(CommunityAdminProfileJPanel);
        CommunityAdminProfileJPanel.setLayout(CommunityAdminProfileJPanelLayout);
        CommunityAdminProfileJPanelLayout.setHorizontalGroup(
            CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, CommunityAdminProfileJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack))
                    .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                        .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender1))
                                .addGap(18, 18, 18)
                                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGender1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(338, 338, 338))
        );

        CommunityAdminProfileJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnEdit, btnUpdate});

        CommunityAdminProfileJPanelLayout.setVerticalGroup(
            CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CommunityAdminProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender1)
                    .addComponent(cmbGender1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartment1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLevel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 150, Short.MAX_VALUE)
                .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CommunityAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate)
                        .addComponent(btnEdit))
                    .addComponent(btnBack))
                .addGap(36, 36, 36))
        );

        jLayeredPane1.add(CommunityAdminProfileJPanel, "card3");

        ResidentProfileJPanel.setBackground(new java.awt.Color(102, 102, 255));
        ResidentProfileJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        ResidentProfileJPanel.setRequestFocusEnabled(false);

        lblProfile1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblProfile1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfile1.setText("Resident Profile");
        lblProfile1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblName2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName2.setText("Name:");

        lblDOB2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB2.setText("Date of Birth:");

        lblPhoneNum2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum2.setText("Phone Number:");

        txtPhoneNum2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNum2ActionPerformed(evt);
            }
        });

        lblEmailAdd2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd2.setText("Email Address:");

        lblGender2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender2.setText("Gender:");

        cmbGender2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGender2ActionPerformed(evt);
            }
        });

        lblHomeAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd.setText("Home Address:");

        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        txtDOB2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB2ActionPerformed(evt);
            }
        });

        btnEdit1.setText("Edit");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ResidentProfileJPanelLayout = new javax.swing.GroupLayout(ResidentProfileJPanel);
        ResidentProfileJPanel.setLayout(ResidentProfileJPanelLayout);
        ResidentProfileJPanelLayout.setHorizontalGroup(
            ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ResidentProfileJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                        .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblName2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender2))
                                .addGap(18, 18, 18)
                                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGender2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit1)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate1)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack1)))
                .addGap(338, 338, 338))
        );
        ResidentProfileJPanelLayout.setVerticalGroup(
            ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ResidentProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender2)
                    .addComponent(cmbGender2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(176, 176, 176)
                .addGroup(ResidentProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate1)
                    .addComponent(btnEdit1)
                    .addComponent(btnBack1))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jLayeredPane1.add(ResidentProfileJPanel, "card3");

        AddHouseJPanel.setBackground(new java.awt.Color(102, 102, 255));
        AddHouseJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        AddHouseJPanel.setRequestFocusEnabled(false);

        lbladdhouse.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse.setText("Add New House");
        lbladdhouse.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblAddress.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblAddress.setText("Address:");

        lblArea.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblArea.setText("Area:");

        lblPostalCode.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPostalCode.setText("Postal Code:");

        txtPostalCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPostalCodeActionPerformed(evt);
            }
        });

        lblCommunity.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunity.setText("Community:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        lbladdhouse3.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse3.setText("View Houses");
        lbladdhouse3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblViewHouses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "House Address", "Area", "Postal Code", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblViewHouses);

        javax.swing.GroupLayout AddHouseJPanelLayout = new javax.swing.GroupLayout(AddHouseJPanel);
        AddHouseJPanel.setLayout(AddHouseJPanelLayout);
        AddHouseJPanelLayout.setHorizontalGroup(
            AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddHouseJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                        .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                                .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                                .addComponent(lblPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(87, 87, 87)
                        .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                                .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                                .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack2)))
                .addGap(338, 338, 338))
            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbladdhouse, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbladdhouse3, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
        );
        AddHouseJPanelLayout.setVerticalGroup(
            AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddHouseJPanelLayout.createSequentialGroup()
                .addComponent(lbladdhouse, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArea, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(AddHouseJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnBack2))
                .addGap(18, 18, 18)
                .addComponent(lbladdhouse3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(56, Short.MAX_VALUE))
        );

        jLayeredPane1.add(AddHouseJPanel, "card3");

        AddCommunityJPanel.setBackground(new java.awt.Color(102, 102, 255));
        AddCommunityJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        AddCommunityJPanel.setRequestFocusEnabled(false);

        lbladdhouse1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse1.setText("Add New Community");
        lbladdhouse1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCommunityName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunityName.setText("Name:");

        lblArea1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblArea1.setText("Area:");

        lblPopulation.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPopulation.setText("Population:");

        txtPopulation.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPopulationActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCity.setText("City:");

        btnSave1.setText("Save");
        btnSave1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave1ActionPerformed(evt);
            }
        });

        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        lbladdhouse4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse4.setText("View Communities");
        lbladdhouse4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblViewCommunity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Area", "Population", "City"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblViewCommunity);

        javax.swing.GroupLayout AddCommunityJPanelLayout = new javax.swing.GroupLayout(AddCommunityJPanel);
        AddCommunityJPanel.setLayout(AddCommunityJPanelLayout);
        AddCommunityJPanelLayout.setHorizontalGroup(
            AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddCommunityJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                        .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                                .addComponent(lblCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                                .addComponent(lblPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(87, 87, 87)
                        .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                                .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                                .addComponent(lblArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCommunityArea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                        .addComponent(btnSave1)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack3)))
                .addGap(338, 338, 338))
            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbladdhouse1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbladdhouse4, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
        );
        AddCommunityJPanelLayout.setVerticalGroup(
            AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCommunityJPanelLayout.createSequentialGroup()
                .addComponent(lbladdhouse1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArea1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunityArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPopulation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(49, 49, 49)
                .addGroup(AddCommunityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave1)
                    .addComponent(btnBack3))
                .addGap(29, 29, 29)
                .addComponent(lbladdhouse4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jLayeredPane1.add(AddCommunityJPanel, "card3");

        AddCityJPanel.setBackground(new java.awt.Color(102, 102, 255));
        AddCityJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        AddCityJPanel.setRequestFocusEnabled(false);

        lbladdhouse2.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse2.setText("Add New City");
        lbladdhouse2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCityName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCityName.setText("Name:");

        lblArea2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblArea2.setText("Area:");

        lblPopulation1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPopulation1.setText("Population:");

        txtPopulation1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPopulation1ActionPerformed(evt);
            }
        });

        lblState.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblState.setText("State:");

        btnSave2.setText("Save");
        btnSave2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSave2ActionPerformed(evt);
            }
        });

        btnBack4.setText("Back");
        btnBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack4ActionPerformed(evt);
            }
        });

        lbladdhouse5.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lbladdhouse5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbladdhouse5.setText("View Cities");
        lbladdhouse5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        tblViewCity.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Name", "Area", "Population", "State"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblViewCity);

        javax.swing.GroupLayout AddCityJPanelLayout = new javax.swing.GroupLayout(AddCityJPanel);
        AddCityJPanel.setLayout(AddCityJPanelLayout);
        AddCityJPanelLayout.setHorizontalGroup(
            AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCityJPanelLayout.createSequentialGroup()
                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbladdhouse2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                        .addComponent(lblPopulation1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPopulation1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(87, 87, 87)
                                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                        .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                        .addComponent(lblArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCityArea, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddCityJPanelLayout.createSequentialGroup()
                                .addComponent(btnSave2)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack4))))
                    .addComponent(lbladdhouse5, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(AddCityJPanelLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
        );
        AddCityJPanelLayout.setVerticalGroup(
            AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddCityJPanelLayout.createSequentialGroup()
                .addComponent(lbladdhouse2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCityName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblArea2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCityName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCityArea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPopulation1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPopulation1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblState, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(AddCityJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave2)
                    .addComponent(btnBack4))
                .addGap(32, 32, 32)
                .addComponent(lbladdhouse5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        jLayeredPane1.add(AddCityJPanel, "card3");

        AddResidentJPanel.setBackground(new java.awt.Color(102, 102, 255));
        AddResidentJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        AddResidentJPanel.setRequestFocusEnabled(false);

        lblProfile2.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblProfile2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfile2.setText("New Resident Profile");
        lblProfile2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblName3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName3.setText("Name:");

        lblDOB3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB3.setText("Date of Birth:");

        lblPhoneNum3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum3.setText("Phone Number:");

        txtPhoneNum3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneNum3ActionPerformed(evt);
            }
        });

        lblEmailAdd3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd3.setText("Email Address:");

        lblGender3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender3.setText("Gender:");

        cmbGender3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGender3ActionPerformed(evt);
            }
        });

        lblHomeAdd1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd1.setText("Home Address:");

        btnUpdate2.setText("Save");
        btnUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate2ActionPerformed(evt);
            }
        });

        txtDOB3.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB3ActionPerformed(evt);
            }
        });

        btnBack5.setText("Back");
        btnBack5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddResidentJPanelLayout = new javax.swing.GroupLayout(AddResidentJPanel);
        AddResidentJPanel.setLayout(AddResidentJPanelLayout);
        AddResidentJPanelLayout.setHorizontalGroup(
            AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile2, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddResidentJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                        .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                                .addComponent(lblName3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender3))
                                .addGap(18, 18, 18)
                                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGender3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmailAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                                .addComponent(lblHomeAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHomeAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                                .addComponent(lblDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                        .addComponent(btnUpdate2)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack5)))
                .addGap(338, 338, 338))
        );
        AddResidentJPanelLayout.setVerticalGroup(
            AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddResidentJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile2, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender3)
                    .addComponent(cmbGender3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(176, 176, 176)
                .addGroup(AddResidentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate2)
                    .addComponent(btnBack5))
                .addContainerGap(124, Short.MAX_VALUE))
        );

        jLayeredPane1.add(AddResidentJPanel, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdPasswordActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID.getText().contains("[a-zA-Z]+")){
            txtEmployeeID.setText("-1");
        }
        if (txtLevel.getText().contains("[a-zA-Z]+")){
            txtLevel.setText("-1");
        }
        
//        Date nonedate = new Date();

//        if (!txtDOB.getValue().equals(nonedate)){
//            Date DOB = (Date)txtDOB.getValue();
//
//        }
        String Username = txtCreateUsername.getText();
        String Password = txtCreatePassword.getText();
        String Name = txtName.getText();
//        LocalDate DOB = LocalDate.parse(txtDOB.getText());
        LocalDate DOB;// Define a formatting pattern to match your input string.
        DOB = LocalDate.parse(txtDOB.getText(),// Input string.
                DateTimeFormatter.ofPattern("yyyy-mm-dd").withResolverStyle((ResolverStyle.STRICT)));
        int EmployeeID = Integer.parseInt(txtEmployeeID.getText());
        String Gender = cmbGender.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum.getText();
        String EmailAdd = txtEmailAdd.getText();
        String Department = txtDepartment.getText();
        int Level = Integer.parseInt(txtLevel.getText());
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Department.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Level < 0){
            JOptionPane.showMessageDialog(this, "Invalid Level.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){
        admin ei = communityadminset.addNewCommunityAdmin();
        person ps = new person();
        ps.setPhoneNum(PhoneNum);
        ps.setEmailAdd(EmailAdd);
        ei.setEmployeeID(EmployeeID);
        ei.setDepartment(Department);
        ei.setLevel(Level);
        ei.setUsername(Username);
        ei.setPassword(Password);
        ps.setGender(Gender);
        ps.setName(Name);
        ps.setDOB(DOB);
        ei.setPerson(ps);
        JOptionPane.showMessageDialog(this, "Admin Account Created.");
        
        txtCreateUsername.setText("");
        txtCreatePassword.setText("");
        txtName.setText("");
        txtDOB.setText("");
        txtEmployeeID.setText("");
        cmbGender.setSelectedIndex(0);
        txtPhoneNum.setText("");
        txtEmailAdd.setText("");
        txtEmployeeID.setText("-1");
        txtDepartment.setText("");
        txtLevel.setText("-1");
        
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(true);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
        
        Action ac = actionhistory.addNewAction();
        ac.setPerson("Community Administrator");
        ac.setName(Name);
        ac.setModification("Create Community Administrator Account");
        }
        
        
        
        
        
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String password = pwdPassword.getText();
        int flag = 0;
        int i = 0;
        for (admin ei : communityadminset.getHistory()){
            if (ei.getUsername().equals(username) & (ei.getPassword().equals(password))){
                flag = 1;
                index = i;
                CommunityAdminCreateJPanel.setVisible(false);
                CommunityAdminProfileJPanel.setVisible(false);
                CommunityAdminWorkAreaJPanel.setVisible(true);
                CommunityAdminLoginJPanel.setVisible(false);
                ResidentProfileJPanel.setVisible(false);
                AddHouseJPanel.setVisible(false);
                AddCommunityJPanel.setVisible(false);
                AddCityJPanel.setVisible(false);
                AddResidentJPanel.setVisible(false);
                
                populateResidentsTable();
            }
            else{
                i += 1;
            }
        }
        if(flag == 0){
            JOptionPane.showMessageDialog(this, "Wrong Username or Password.");
        }
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtCreateUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsernameActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(true);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
        
        admin sa = communityadminset.getHistory().get(index);
//        
        txtShowUsername.setText(sa.getUsername());
        txtShowUsername.setEditable(false);
//        
        txtShowPassword.setText(sa.getPassword());
        txtShowPassword.setEditable(false);
//        
        txtName1.setText(sa.getPerson().getName());
        txtName1.setEditable(false);
//        
        txtDOB1.setText(String.valueOf(sa.getPerson().getDOB()));
        txtDOB1.setEditable(false);
//        
        txtPhoneNum1.setText(sa.getPerson().getPhoneNum());
        txtPhoneNum1.setEditable(false);
//        
        txtEmailAdd1.setText(sa.getPerson().getEmailAdd());
        txtEmailAdd1.setEditable(false);
//        
        cmbGender1.setSelectedItem(sa.getPerson().getGender());
        cmbGender1.setEnabled(false);
//        
        txtEmployeeID1.setText(String.valueOf(sa.getEmployeeID()));
        txtEmployeeID1.setEditable(false);
//        
        txtDepartment1.setText(sa.getDepartment());
        txtDepartment1.setEditable(false);
//        
        txtLevel1.setText(String.valueOf(sa.getLevel()));
        txtLevel1.setEditable(false);
    }//GEN-LAST:event_btnProfileActionPerformed

    private void txtShowUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowUsernameActionPerformed

    private void cmbGender1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGender1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGender1ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Action ac = actionhistory.addNewAction();

        if (txtEmployeeID1.getText().contains("[a-zA-Z]+")){
            txtEmployeeID1.setText("-1");
        }
        if (txtLevel1.getText().contains("[a-zA-Z]+")){
            txtLevel1.setText("-1");
        }

        String Username = txtShowUsername.getText();
        String Password = txtShowPassword.getText();
        String Name = txtName1.getText();
        LocalDate DOB = LocalDate.parse(txtDOB1.getText());
//        LocalDate DOB;// Define a formatting pattern to match your input string.
//        DOB = LocalDate.parse(txtDOB1.getText(),// Input string.
//                DateTimeFormatter.ofPattern("yyyy-mm-dd").withResolverStyle((ResolverStyle.STRICT)));
        int EmployeeID = Integer.parseInt(txtEmployeeID1.getText());
        String Gender = cmbGender1.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum1.getText();
        String EmailAdd = txtEmailAdd1.getText();
        String Department = txtDepartment1.getText();
        int Level = Integer.parseInt(txtLevel1.getText());

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Department.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Level < 0){
            JOptionPane.showMessageDialog(this, "Invalid Level.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){
            admin sa = communityadminset.getHistory().get(index);
            person ps = new person();
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            sa.setEmployeeID(EmployeeID);
            sa.setDepartment(Department);
            sa.setLevel(Level);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB(DOB);
            sa.setPerson(ps);

            ac.setPerson("Community Administrator");
            ac.setName(Name);
            ac.setModification("Update Profile");
            JOptionPane.showMessageDialog(this, "Community Admin Profile Updated");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtDOB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB1ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        txtShowUsername.setEditable(true);
        txtShowPassword.setEditable(true);
        txtName1.setEditable(true);
        txtDOB1.setEditable(true);
        txtPhoneNum1.setEditable(true);
        txtEmailAdd1.setEditable(true);
        cmbGender1.setEnabled(true);
        txtEmployeeID1.setEditable(true);
        txtDepartment1.setEditable(true);
        txtLevel1.setEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnViewResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewResidentActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblResidents.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(true);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
        
        DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
        person selectedResident = (person) model.getValueAt(selectedRowIndex, 0); 
        
        
       
        txtName2.setText(selectedResident.getName());
        txtDOB2.setText(String.valueOf(selectedResident.getDOB()));
        txtPhoneNum2.setText(selectedResident.getPhoneNum());
        txtEmailAdd2.setText(selectedResident.getEmailAdd());
        cmbGender2.setSelectedItem(selectedResident.getGender());
        txtHomeAdd.setText(String.valueOf(selectedResident.getHouse().getAddress()));
        
        txtName2.setEditable(false);
        txtDOB2.setEditable(false);
        txtPhoneNum2.setEditable(false);
        txtEmailAdd2.setEditable(false);
        cmbGender2.setEnabled(false);
        txtHomeAdd.setEditable(false);
    }//GEN-LAST:event_btnViewResidentActionPerformed

    private void btnDeleteResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteResidentActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblResidents.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }
        
        DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
        person selectedResident = (person) model.getValueAt(selectedRowIndex, 0);
        
        personset.deletePerson(selectedResident);
        
        JOptionPane.showMessageDialog(this, "Successfully Deleted.");
        
        populateResidentsTable();
        
        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Community Administrator");
        ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
        ah.setModification("Delete A Resident");
    }//GEN-LAST:event_btnDeleteResidentActionPerformed

    private void cmbGender2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGender2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGender2ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        String Name = txtName2.getText();
        LocalDate DOB = LocalDate.parse(txtDOB2.getText());
        String PhoneNum = txtPhoneNum2.getText();
        String EmailAdd = txtEmailAdd2.getText();
        String Gender = (String) cmbGender2.getSelectedItem();
        String HomeAdd = txtHomeAdd.getText();
        
        

        int phonenumflag = 0;
        char[] phonenumArray = PhoneNum.toCharArray();
        for(char c:phonenumArray)
        {
            if (!Character.isDigit(c))
            phonenumflag = 1;
        }

        int nameflag = 0;
        char[] nameArray = Name.toCharArray();
        for(char c:nameArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int saveflag = 1;
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (DOB.equals(null)){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phonenumflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || (!EmailAdd.contains("@"))){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");
            saveflag = 0;
        }
            
        else if (saveflag == 1){
            int selectedRowIndex = tblResidents.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
                return;
            }
//            VitalSigns vitalsigns = new VitalSigns();
            DefaultTableModel model = (DefaultTableModel) tblResidents.getModel();
            person selectedResident = (person) model.getValueAt(selectedRowIndex, 0);
            house hs = new house();
            hs.setAddress(HomeAdd);
            selectedResident.setDOB(DOB);
            selectedResident.setEmailAdd(EmailAdd);
            selectedResident.setGender(Gender);
            selectedResident.setName(Name);
            selectedResident.setHouse(hs);
            selectedResident.setPhoneNum(PhoneNum);
            
            populateResidentsTable();
            
            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Community Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Update Resident");
            JOptionPane.showMessageDialog(this, "Resident Profile Updated.");
        }
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void txtDOB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB2ActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        txtName2.setEditable(true);
        txtDOB2.setEditable(true);
        txtPhoneNum2.setEditable(true);
        txtEmailAdd2.setEditable(true);
        cmbGender2.setEnabled(true);
        txtHomeAdd.setEditable(true);
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void txtPhoneNum2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNum2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNum2ActionPerformed

    private void btnAddHouseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddHouseActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(true);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
        
        populateViewHouseTable();
    }//GEN-LAST:event_btnAddHouseActionPerformed

    private void txtPostalCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPostalCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPostalCodeActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (txtArea.getText().equals("")){
//            float Area = -1;
            JOptionPane.showMessageDialog(this, "Invalid Area.");
        }
        else{
            float Area = Float.parseFloat(txtArea.getText());
            int areaflag = 0;

            char[] areaArray = String.valueOf(Area).toCharArray();
            for(char c:areaArray)
            {
                if (Character.isLetter(c))
                areaflag = 1;
            }
            String HomeAdd = txtAddress.getText();
            String PostalCode = txtPostalCode.getText();
            String Community = txtCommunity.getText();
        
        
        
            int saveflag = 1;

            if (HomeAdd.equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Home Address.");
                saveflag = 0;
            }
            for (city ct : citylist.getHistory()){
                for (community cm : ct.getCommunities()){
                    for (house hs : cm.getHouses()){
                        if (hs.getAddress().equals(HomeAdd)){
                            JOptionPane.showMessageDialog(this, "House Already Exists.");
                            saveflag = 0;
                        }
                    }
                }
            }
            if (Area < 0 || areaflag == 1 || txtArea.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Area.");
                saveflag = 0;
            }
            if (PostalCode.equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Postal Code.");
                saveflag = 0;
            }
            if (Community.equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Community.");
                saveflag = 0;
            }
            else if (saveflag == 1){
                int addflag = 0;
                for (city ct: citylist.getHistory()){
                    for (community cm : ct.getCommunities()){
                        if (cm.getName().equals(Community)){
                            house hs = cm.addNewHouse();
                            hs.setAddress(HomeAdd);
                            hs.setArea(Area);
                            hs.setPostalCode(PostalCode);
                            hs.setCommunity(cm);

                            populateViewHouseTable();
                            addflag = 1;
                            Action ah  = actionhistory.addNewAction();
                            ah.setPerson("Community Administrator");
                            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
                            ah.setModification("Add New House");
                            JOptionPane.showMessageDialog(this, "New House Added.");

                            txtArea.setText("");
                            txtAddress.setText("");
                            txtPostalCode.setText("");
                            txtCommunity.setText("");
                        }
                }
                }
                if (addflag == 0){
                   JOptionPane.showMessageDialog(this, "Community doesn't Exist."); 
                }
              
                }        
            }
            
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void txtPopulationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPopulationActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPopulationActionPerformed

    private void btnSave1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave1ActionPerformed
        // TODO add your handling code here:
        if (txtCommunityArea.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Area.");
        }
        if (txtPopulation.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Population.");
        }
        else{
            float Area = Float.parseFloat(txtCommunityArea.getText());
            int areaflag = 0;

            char[] areaArray = String.valueOf(Area).toCharArray();
            for(char c:areaArray)
            {
                if (Character.isLetter(c))
                areaflag = 1;
            }
            
            int Population = Integer.parseInt(txtPopulation.getText());
            int popuflag = 0;

            char[] popuArray = String.valueOf(Population).toCharArray();
            for(char c:popuArray)
            {
                if (Character.isLetter(c))
                popuflag = 1;
            }
            
            String Name = txtCommunityName.getText();
            
            int nameflag = 0;

            char[] nameArray = Name.toCharArray();
            for(char c:nameArray)
            {
                if (!Character.isLetter(c)){
                nameflag = 1;
                }
            }
            
            String City = txtCity.getText();
        
            int cityflag = 0;

            char[] cityArray = City.toCharArray();
            for(char c:cityArray)
            {
                if (Character.isDigit(c)){
                cityflag = 1;
            }
            }
//        
        
            int saveflag = 1;

            if (Population < 0 || popuflag == 1 || txtPopulation.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Population.");
                saveflag = 0;
            }
            if (Area < 0 || areaflag == 1 || txtCommunityArea.getText().equals("")){
                JOptionPane.showMessageDialog(this, "Invalid Area.");
                saveflag = 0;
            }
            for (city ct : citylist.getHistory()){
                for (community cm : ct.getCommunities()){
                    
                    if (cm.getName().equals(Name)){
                        JOptionPane.showMessageDialog(this, "Community Already Exists.");
                        saveflag = 0;
                    }
                    
                }
            }
            if (Name.equals("") || nameflag == 1){
                JOptionPane.showMessageDialog(this, "Invalid Community Name.");
                saveflag = 0;
            }
            if (City.equals("") || cityflag == 1){
                JOptionPane.showMessageDialog(this, "Invalid City.");
                saveflag = 0;
            }
            else if (saveflag == 1){
                int addflag = 0;
                for (city ct : citylist.getHistory()){
                    if (ct.getName().equals(City)){
                        community cm = ct.addNewCommunity();
                        cm.setCity(ct);
                        cm.setArea(Area);
                        cm.setName(Name);
                        cm.setPopulation(Population);
                        ArrayList<house> houses = new ArrayList<>(); 
                        cm.setHouses(houses);

                        populateViewCommunityTable();
                        addflag = 1;
                        Action ah  = actionhistory.addNewAction();
                        ah.setPerson("Community Administrator");
                        ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
                        ah.setModification("Add New Community");
                        JOptionPane.showMessageDialog(this, "New Community Added.");
                        
                        txtCommunityArea.setText("");
                        txtCommunityName.setText("");
                        txtPopulation.setText("");
                        txtCity.setText("");
                    }
                }
                if (addflag == 0){
                    JOptionPane.showMessageDialog(this, "City doesn't Exist.");
                }       
            }
            }
    }//GEN-LAST:event_btnSave1ActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnAddCommunityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCommunityActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(true);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
        
        populateViewCommunityTable();
    }//GEN-LAST:event_btnAddCommunityActionPerformed

    private void btnAddCityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCityActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(true);
        AddResidentJPanel.setVisible(false);
        
        populateCityTable();
        
    }//GEN-LAST:event_btnAddCityActionPerformed

    private void txtPopulation1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPopulation1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPopulation1ActionPerformed

    private void btnSave2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSave2ActionPerformed
        // TODO add your handling code here:
        String Name = txtCityName.getText();
        float Area = Float.parseFloat(txtCityArea.getText());
        int Population = Integer.parseInt(txtPopulation1.getText());
        String State = txtState.getText();
        
        int areaflag = 0;
        char[] areaArray = String.valueOf(Area).toCharArray();
        for(char c:areaArray)
        {
            if (Character.isLetter(c))
            areaflag = 1;
        }
        
        int popuflag = 0;
        char[] popuArray = String.valueOf(Population).toCharArray();
        for(char c:popuArray)
        {
            if (!Character.isDigit(c))
            popuflag = 1;
        }
        
        int nameflag = 0;
        char[] nameArray = Name.toCharArray();
        for(char c:nameArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int stateflag = 0;
        char[] stateArray = State.toCharArray();
        for(char c:stateArray)
        {
            if (!Character.isLetter(c))
            stateflag = 1;
        }
        
        int saveflag = 1;
        
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Community Name.");
            saveflag = 0;
        }
        if (Area < 0 || areaflag == 1 || txtCityArea.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Area.");
            saveflag = 0;
        }
        if (Population < 0 || popuflag == 1 || txtPopulation1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Population.");
            saveflag = 0;
        }
        for (city ct : citylist.getHistory()){   
            if (ct.getName().equals(Name)){
                JOptionPane.showMessageDialog(this, "City Already Exists.");
                saveflag = 0;
            }
            }
        if (State.equals("") || stateflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid City.");
            saveflag = 0;
        }
        else if (saveflag == 1){
            city ct = citylist.addNewCity();
            ct.setName(Name);
            ct.setPopulation(Population);
            ct.setState(State);
            ct.setArea(Area);
            ArrayList<community> community = new ArrayList<>(); 
            ct.setCommunities(community);
            
            
            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Community Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Add New City");
            populateCityTable();
            JOptionPane.showMessageDialog(this, "New City Added.");
        }
    }//GEN-LAST:event_btnSave2ActionPerformed

    private void btnBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack4ActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack4ActionPerformed

    private void btnAddResidentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddResidentActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(false);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(true);
    }//GEN-LAST:event_btnAddResidentActionPerformed

    private void txtPhoneNum3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneNum3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneNum3ActionPerformed

    private void cmbGender3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGender3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGender3ActionPerformed

    private void btnUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate2ActionPerformed
        // TODO add your handling code here:
        String Name = txtName3.getText();
        LocalDate DOB = LocalDate.parse(txtDOB3.getText());
        String PhoneNum = txtPhoneNum3.getText();
        String EmailAdd = txtEmailAdd3.getText();
        String Gender = (String) cmbGender3.getSelectedItem();
        String HomeAdd = txtHomeAdd1.getText();
        
        

        int phonenumflag = 0;
        char[] phonenumArray = PhoneNum.toCharArray();
        for(char c:phonenumArray)
        {
            if (!Character.isDigit(c))
            phonenumflag = 1;
        }

        int nameflag = 0;
        char[] nameArray = Name.toCharArray();
        for(char c:nameArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int saveflag = 1;
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (DOB.equals(null)){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phonenumflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || (!EmailAdd.contains("@"))){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");
            saveflag = 0;
        }
            
        else if (saveflag == 1){
            
            person ps = personset.addNewPerson();
            house hs = new house();
            hs.setAddress(HomeAdd);
            ps.setDOB(DOB);
            ps.setEmailAdd(EmailAdd);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setHouse(hs);
            ps.setPhoneNum(PhoneNum);
            
            populateResidentsTable();
            
            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Community Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Add Resident");
            JOptionPane.showMessageDialog(this, "New Resident Added.");
        }
    }//GEN-LAST:event_btnUpdate2ActionPerformed

    private void txtDOB3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB3ActionPerformed

    private void btnBack5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack5ActionPerformed
        // TODO add your handling code here:
        CommunityAdminCreateJPanel.setVisible(false);
        CommunityAdminProfileJPanel.setVisible(false);
        CommunityAdminWorkAreaJPanel.setVisible(true);
        CommunityAdminLoginJPanel.setVisible(false);
        ResidentProfileJPanel.setVisible(false);
        AddHouseJPanel.setVisible(false);
        AddCommunityJPanel.setVisible(false);
        AddCityJPanel.setVisible(false);
        AddResidentJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack5ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddCityJPanel;
    private javax.swing.JPanel AddCommunityJPanel;
    private javax.swing.JPanel AddHouseJPanel;
    private javax.swing.JPanel AddResidentJPanel;
    private javax.swing.JPanel CommunityAdminCreateJPanel;
    private javax.swing.JPanel CommunityAdminLoginJPanel;
    private javax.swing.JPanel CommunityAdminProfileJPanel;
    private javax.swing.JPanel CommunityAdminWorkAreaJPanel;
    private javax.swing.JPanel ResidentProfileJPanel;
    private javax.swing.JButton btnAddCity;
    private javax.swing.JButton btnAddCommunity;
    private javax.swing.JButton btnAddHouse;
    private javax.swing.JButton btnAddResident;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBack5;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnDeleteResident;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSave1;
    private javax.swing.JButton btnSave2;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnUpdate2;
    private javax.swing.JButton btnViewResident;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbGender1;
    private javax.swing.JComboBox<String> cmbGender2;
    private javax.swing.JComboBox<String> cmbGender3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblAdminInfo;
    private javax.swing.JLabel lblAdminLogin;
    private javax.swing.JLabel lblArea;
    private javax.swing.JLabel lblArea1;
    private javax.swing.JLabel lblArea2;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCityName;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunityName;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JLabel lblCreatePassword;
    private javax.swing.JLabel lblCreateUsername;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDOB1;
    private javax.swing.JLabel lblDOB2;
    private javax.swing.JLabel lblDOB3;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblDepartment1;
    private javax.swing.JLabel lblEmailAdd;
    private javax.swing.JLabel lblEmailAdd1;
    private javax.swing.JLabel lblEmailAdd2;
    private javax.swing.JLabel lblEmailAdd3;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblEmployeeID1;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender1;
    private javax.swing.JLabel lblGender2;
    private javax.swing.JLabel lblGender3;
    private javax.swing.JLabel lblHomeAdd;
    private javax.swing.JLabel lblHomeAdd1;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblLevel1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName1;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName3;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblPhoneNum1;
    private javax.swing.JLabel lblPhoneNum2;
    private javax.swing.JLabel lblPhoneNum3;
    private javax.swing.JLabel lblPopulation;
    private javax.swing.JLabel lblPopulation1;
    private javax.swing.JLabel lblPostalCode;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblProfile1;
    private javax.swing.JLabel lblProfile2;
    private javax.swing.JLabel lblResidents;
    private javax.swing.JLabel lblShowPassword;
    private javax.swing.JLabel lblShowUsername;
    private javax.swing.JLabel lblState;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lbladdhouse;
    private javax.swing.JLabel lbladdhouse1;
    private javax.swing.JLabel lbladdhouse2;
    private javax.swing.JLabel lbladdhouse3;
    private javax.swing.JLabel lbladdhouse4;
    private javax.swing.JLabel lbladdhouse5;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTable tblResidents;
    private javax.swing.JTable tblViewCity;
    private javax.swing.JTable tblViewCommunity;
    private javax.swing.JTable tblViewHouses;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtArea;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCityArea;
    private javax.swing.JTextField txtCityName;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtCommunityArea;
    private javax.swing.JTextField txtCommunityName;
    private javax.swing.JPasswordField txtCreatePassword;
    private javax.swing.JTextField txtCreateUsername;
    private javax.swing.JFormattedTextField txtDOB;
    private javax.swing.JFormattedTextField txtDOB1;
    private javax.swing.JFormattedTextField txtDOB2;
    private javax.swing.JFormattedTextField txtDOB3;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtDepartment1;
    private javax.swing.JTextField txtEmailAdd;
    private javax.swing.JTextField txtEmailAdd1;
    private javax.swing.JTextField txtEmailAdd2;
    private javax.swing.JTextField txtEmailAdd3;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeID1;
    private javax.swing.JTextField txtHomeAdd;
    private javax.swing.JTextField txtHomeAdd1;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtLevel1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName1;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtName3;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtPhoneNum1;
    private javax.swing.JTextField txtPhoneNum2;
    private javax.swing.JTextField txtPhoneNum3;
    private javax.swing.JTextField txtPopulation;
    private javax.swing.JTextField txtPopulation1;
    private javax.swing.JTextField txtPostalCode;
    private javax.swing.JPasswordField txtShowPassword;
    private javax.swing.JTextField txtShowUsername;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateResidentsTable() {
        DefaultTableModel model = (DefaultTableModel)tblResidents.getModel();
        model.setRowCount(0);
        
        for (person ps : personset.getHistory()){
            Object[] row = new Object[4];
            row[0] = ps;
            row[1] = ps.getName();
            row[2] = ps.getHouse().getAddress();
            row[3] = ps.getGender();
            
            model.addRow(row);
        }  
    }

    private void populateViewHouseTable() {
        DefaultTableModel model = (DefaultTableModel)tblViewHouses.getModel();
        model.setRowCount(0);
//        community cm = community;
        for(city ct: citylist.getHistory()){
            for (community cm : ct.getCommunities()){
                for (house hs : cm.getHouses()){
                    Object[] row = new Object[4];
                    row[0] = hs;
                    row[1] = hs.getArea();
                    row[2] = hs.getPostalCode();
                    row[3] = hs.getCommunity().getName();

                    model.addRow(row);
                }  
                }
        }
    }

    private void populateViewCommunityTable() {
        DefaultTableModel model = (DefaultTableModel)tblViewCommunity.getModel();
        model.setRowCount(0);
//        community cm = community;
    
        for (city ct: citylist.getHistory()){
        for (community cm : ct.getCommunities()){
            Object[] row = new Object[4];
            row[0] = cm;
            row[1] = cm.getArea();
            row[2] = cm.getPopulation();
            row[3] = cm.getCity().getName();
            
            model.addRow(row);
        }  
    }
    }

    private void populateCityTable() {
        DefaultTableModel model = (DefaultTableModel)tblViewCity.getModel();
        model.setRowCount(0);
        for (city ct: citylist.getHistory()){
        
            Object[] row = new Object[4];
            row[0] = ct;
            row[1] = ct.getArea();
            row[2] = ct.getPopulation();
            row[3] = ct.getState();
            
            model.addRow(row);  
        }
    }
}
