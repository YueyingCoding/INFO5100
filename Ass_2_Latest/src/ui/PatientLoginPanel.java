/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import static java.lang.reflect.Array.set;
import java.time.LocalDate;
import java.util.Date;
import static javax.management.Query.or;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import model.admin;
import model.adminset;
import model.patient;
import model.patientset;
import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;
import model.Action;
import model.ActionHistory;
import model.VitalSigns;
import model.appointment;
import model.appointmentlist;
import model.city;
import model.citylist;
import model.community;
import model.communityadminset;
import model.doctor;
import model.doctorset;
import model.encounter;
import model.encounterhistory;
import model.hospital;
import model.hospitaladminset;
import model.hospitallist;
import model.house;
import model.person;
import model.personset;

/**
 *
 * @author yueyingliang
 */
public class PatientLoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form AdminLoginPanel
     */
    adminset systemadminset;
    communityadminset communityadminset;
    hospitaladminset hospitaladminset;
    appointmentlist appointmentlist;
    doctorset doctorset;
    encounterhistory encounterhistory;
    hospitallist hospitallist;
    patientset patientset;
    personset personset;
    ActionHistory actionhistory;
    community community;
    city city;
    citylist citylist;
    
    public int index;
    public PatientLoginPanel(adminset systemadminset, communityadminset communityadminset, 
            hospitaladminset hospitaladminset, appointmentlist appointmentlist, doctorset doctorset,
            encounterhistory encounterhistory, hospitallist hospitallist, patientset patientset, 
            personset personset, ActionHistory actionhistory, community community, city city, citylist citylist) {
        initComponents();
        this.systemadminset = systemadminset;
        this.communityadminset = communityadminset;
        this.hospitaladminset = hospitaladminset;
        this.appointmentlist = appointmentlist;
        this.doctorset = doctorset;
        this.encounterhistory = encounterhistory;
        this.hospitallist = hospitallist;
        this.patientset = patientset;
        this.personset = personset;
        this.actionhistory = actionhistory;
        this.community = community;
        this.city = city;
        this.citylist = citylist;
        
        PatientProfileJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        
        
        
        populateTable();
        
//        encounter eh = history.addNewEncounter();
//        Date ed = new Date(99, 3, 10);
//        eh.setDoctorName("ABCD");
//        eh.setPatientName("ABCDE");
//        eh.setEncounterDate(ed);
//        eh.setBloodPressure(100);
//        eh.setHeartRate(90);
//        eh.setTemperature((float) 36.5);
//        eh.setDiagnosis("Diabetes");
//        eh.setNotes("Eat Less Sugar");
        
        this.appointmentlist = appointmentlist;
        
        this.doctorset = doctorset;
        this.hospitallist = new hospitallist();
//        populatedoctorTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        PatientLoginJPanel = new javax.swing.JPanel();
        lblPatientLogin = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        PatientProfileJPanel = new javax.swing.JPanel();
        lblCreatePassword = new javax.swing.JLabel();
        lblCreateUsername = new javax.swing.JLabel();
        txtShowUsername = new javax.swing.JTextField();
        txtShowPassword = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblEmailAdd = new javax.swing.JLabel();
        txtEmailAdd = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        lblHomeAdd = new javax.swing.JLabel();
        txtHomeAdd = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtDOB = new javax.swing.JFormattedTextField();
        lblCity = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        lblCommunity = new javax.swing.JLabel();
        txtCommunity = new javax.swing.JTextField();
        lblPostalCode = new javax.swing.JLabel();
        txtPostalCode = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        cbInsurance1 = new javax.swing.JCheckBox();
        PatientWorkAreaJPanel = new javax.swing.JPanel();
        btnProfile = new javax.swing.JButton();
        btnEncounterHistory = new javax.swing.JButton();
        lblUpcomingEvents = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblUpcomingEvents = new javax.swing.JTable();
        btnFindDoctor = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnViewEvent = new javax.swing.JButton();
        PatientCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount4 = new javax.swing.JLabel();
        lblCreatePassword4 = new javax.swing.JLabel();
        lblCreateUsername4 = new javax.swing.JLabel();
        txtCreateUsername4 = new javax.swing.JTextField();
        txtCreatePassword4 = new javax.swing.JPasswordField();
        lblName4 = new javax.swing.JLabel();
        lblAdminInfo4 = new javax.swing.JLabel();
        lblDOB4 = new javax.swing.JLabel();
        txtName4 = new javax.swing.JTextField();
        lblPhoneNum4 = new javax.swing.JLabel();
        txtPhoneNum4 = new javax.swing.JTextField();
        lblEmailAdd4 = new javax.swing.JLabel();
        txtEmailAdd4 = new javax.swing.JTextField();
        lblGender4 = new javax.swing.JLabel();
        cmbGender4 = new javax.swing.JComboBox<>();
        lblHomeAdd4 = new javax.swing.JLabel();
        txtHomeAdd4 = new javax.swing.JTextField();
        btnCreate4 = new javax.swing.JButton();
        txtDOB4 = new javax.swing.JFormattedTextField();
        lblCity4 = new javax.swing.JLabel();
        txtCity4 = new javax.swing.JTextField();
        lblCommunity4 = new javax.swing.JLabel();
        txtCommunity4 = new javax.swing.JTextField();
        lblPostalCode4 = new javax.swing.JLabel();
        txtPostalCode4 = new javax.swing.JTextField();
        cbInsurance = new javax.swing.JCheckBox();
        PatientEncounterHistoryJPanel = new javax.swing.JPanel();
        lblEncounterHistory = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        cmbSearch = new javax.swing.JComboBox<>();
        btnSearch2 = new javax.swing.JButton();
        txtSearch2 = new javax.swing.JTextField();
        btnView = new javax.swing.JButton();
        btnBack1 = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        ViewEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblEncounterDate = new javax.swing.JLabel();
        lblDiagnosis = new javax.swing.JLabel();
        txtDiagnosis = new javax.swing.JTextField();
        lblBloodPressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        lblHeartRate = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        txtEncounterDate = new javax.swing.JFormattedTextField();
        txtTemperature = new javax.swing.JTextField();
        lblTemperature = new javax.swing.JLabel();
        btnBack2 = new javax.swing.JButton();
        txtPatientName = new javax.swing.JTextField();
        lblNotes = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        btnEdit1 = new javax.swing.JButton();
        btnUpdate1 = new javax.swing.JButton();
        FindADoctorJPanel = new javax.swing.JPanel();
        lblFindADoctor = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblAppointments = new javax.swing.JTable();
        cmbSearchDoctor = new javax.swing.JComboBox<>();
        btnSearchDoctor = new javax.swing.JButton();
        txtSearchDoctor = new javax.swing.JTextField();
        btnBook = new javax.swing.JButton();
        btnBack3 = new javax.swing.JButton();
        ViewAppointmentJPanel = new javax.swing.JPanel();
        lblAppointment = new javax.swing.JLabel();
        lblPatientName1 = new javax.swing.JLabel();
        lblDoctorName1 = new javax.swing.JLabel();
        txtDoctorName1 = new javax.swing.JTextField();
        lblAppointmentDate = new javax.swing.JLabel();
        lblHospital = new javax.swing.JLabel();
        txtHospital = new javax.swing.JTextField();
        lblHospitalCommunity = new javax.swing.JLabel();
        txtHospitalCommunity = new javax.swing.JTextField();
        lblHospitalAdd = new javax.swing.JLabel();
        txtHospitalAdd = new javax.swing.JTextField();
        txtAppointmentDate = new javax.swing.JFormattedTextField();
        txtHospitalNum = new javax.swing.JTextField();
        lblHospitalNum = new javax.swing.JLabel();
        btnBack4 = new javax.swing.JButton();
        txtPatientName1 = new javax.swing.JTextField();
        lblHospitalPostalCode = new javax.swing.JLabel();
        lblHospitalEmail = new javax.swing.JLabel();
        txtHospitalEmail = new javax.swing.JTextField();
        txtHospitalPostalCode = new javax.swing.JTextField();
        BookAppointmentJPanel = new javax.swing.JPanel();
        lblAppointment1 = new javax.swing.JLabel();
        lblPatientName2 = new javax.swing.JLabel();
        lblDoctorName2 = new javax.swing.JLabel();
        txtDoctorName2 = new javax.swing.JTextField();
        lblAppointmentDate1 = new javax.swing.JLabel();
        lblHospital1 = new javax.swing.JLabel();
        txtHospital1 = new javax.swing.JTextField();
        lblHospitalCommunity1 = new javax.swing.JLabel();
        txtHospitalCommunity1 = new javax.swing.JTextField();
        lblHospitalAdd1 = new javax.swing.JLabel();
        txtHospitalAdd1 = new javax.swing.JTextField();
        txtAppointmentDate1 = new javax.swing.JFormattedTextField();
        txtHospitalNum1 = new javax.swing.JTextField();
        lblHospitalNum1 = new javax.swing.JLabel();
        btnBack5 = new javax.swing.JButton();
        txtPatientName2 = new javax.swing.JTextField();
        lblHospitalPostalCode1 = new javax.swing.JLabel();
        lblHospitalEmail1 = new javax.swing.JLabel();
        txtHospitalEmail1 = new javax.swing.JTextField();
        txtHospitalPostalCode1 = new javax.swing.JTextField();
        btnConfirm = new javax.swing.JButton();
        AddEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail1 = new javax.swing.JLabel();
        lblPatientName3 = new javax.swing.JLabel();
        lblDoctorName3 = new javax.swing.JLabel();
        txtDoctorName3 = new javax.swing.JTextField();
        lblEncounterDate1 = new javax.swing.JLabel();
        lblDiagnosis1 = new javax.swing.JLabel();
        txtDiagnosis1 = new javax.swing.JTextField();
        lblBloodPressure1 = new javax.swing.JLabel();
        txtBloodPressure1 = new javax.swing.JTextField();
        lblHeartRate1 = new javax.swing.JLabel();
        txtHeartRate1 = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtEncounterDate1 = new javax.swing.JFormattedTextField();
        txtTemperature1 = new javax.swing.JTextField();
        lblTemperature1 = new javax.swing.JLabel();
        btnBack6 = new javax.swing.JButton();
        txtPatientName3 = new javax.swing.JTextField();
        lblNotes1 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtNotes1 = new javax.swing.JTextArea();

        setBackground(new java.awt.Color(153, 153, 255));
        setToolTipText("");
        setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        PatientLoginJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblPatientLogin.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblPatientLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblPatientLogin.setText("Patient Login");

        lblUsername.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblPassword.setText("Password:");

        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Log in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientLoginJPanelLayout = new javax.swing.GroupLayout(PatientLoginJPanel);
        PatientLoginJPanel.setLayout(PatientLoginJPanelLayout);
        PatientLoginJPanelLayout.setHorizontalGroup(
            PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblPatientLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PatientLoginJPanelLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin)
                    .addGroup(PatientLoginJPanelLayout.createSequentialGroup()
                        .addGroup(PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword))
                        .addGap(19, 19, 19)
                        .addGroup(PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUsername)
                            .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(323, Short.MAX_VALUE))
        );
        PatientLoginJPanelLayout.setVerticalGroup(
            PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientLoginJPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(lblPatientLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(PatientLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnLogin)
                .addContainerGap(237, Short.MAX_VALUE))
        );

        jLayeredPane1.add(PatientLoginJPanel, "card2");

        PatientProfileJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblCreatePassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword.setText("Password:");

        lblCreateUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername.setText("Username:");

        txtShowUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsernameActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName.setText("Name:");

        lblDOB.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB.setText("Date of Birth:");

        lblPhoneNum.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum.setText("Phone Number:");

        lblEmailAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd.setText("Email Address:");

        lblGender.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender.setText("Gender:");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblHomeAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd.setText("Home Address:");

        txtHomeAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHomeAddActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtDOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        lblCity.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCity.setText("City:");

        lblCommunity.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunity.setText("Community:");

        lblPostalCode.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPostalCode.setText("Postal Code:");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        cbInsurance1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        cbInsurance1.setText("Insurance");

        javax.swing.GroupLayout PatientProfileJPanelLayout = new javax.swing.GroupLayout(PatientProfileJPanel);
        PatientProfileJPanel.setLayout(PatientProfileJPanelLayout);
        PatientProfileJPanelLayout.setHorizontalGroup(
            PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(64, 64, 64)
                        .addComponent(btnUpdate)
                        .addGap(52, 52, 52)
                        .addComponent(btnBack))
                    .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientProfileJPanelLayout.createSequentialGroup()
                            .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblGender))
                                    .addGap(18, 18, 18)
                                    .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(87, 87, 87)
                            .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDOB))))
                        .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                            .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(87, 87, 87)
                            .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(cbInsurance1)
                                .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                            .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(136, Short.MAX_VALUE))
        );

        PatientProfileJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnBack, btnEdit, btnUpdate});

        PatientProfileJPanelLayout.setVerticalGroup(
            PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInsurance1))
                .addGap(52, 52, 52)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(btnEdit)
                    .addComponent(btnUpdate))
                .addGap(38, 38, 38))
        );

        jLayeredPane1.add(PatientProfileJPanel, "card3");

        PatientWorkAreaJPanel.setBackground(new java.awt.Color(255, 153, 0));

        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        btnEncounterHistory.setText("Encounter History");
        btnEncounterHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncounterHistoryActionPerformed(evt);
            }
        });

        lblUpcomingEvents.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblUpcomingEvents.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUpcomingEvents.setText("Upcoming Events");

        tblUpcomingEvents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Doctor", "Hospital", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblUpcomingEvents);

        btnFindDoctor.setText("Find A Doctor");
        btnFindDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindDoctorActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnViewEvent.setText("View");
        btnViewEvent.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEventActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientWorkAreaJPanelLayout = new javax.swing.GroupLayout(PatientWorkAreaJPanel);
        PatientWorkAreaJPanel.setLayout(PatientWorkAreaJPanelLayout);
        PatientWorkAreaJPanelLayout.setHorizontalGroup(
            PatientWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientWorkAreaJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFindDoctor)
                .addGap(61, 61, 61)
                .addComponent(btnEncounterHistory)
                .addGap(56, 56, 56)
                .addComponent(btnProfile)
                .addGap(60, 60, 60))
            .addComponent(lblUpcomingEvents, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PatientWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(PatientWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(PatientWorkAreaJPanelLayout.createSequentialGroup()
                        .addComponent(btnViewEvent)
                        .addGap(30, 30, 30)
                        .addComponent(btnCancel))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 716, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(40, Short.MAX_VALUE))
        );

        PatientWorkAreaJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnViewEvent});

        PatientWorkAreaJPanelLayout.setVerticalGroup(
            PatientWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(PatientWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProfile)
                    .addComponent(btnEncounterHistory)
                    .addComponent(btnFindDoctor))
                .addGap(18, 18, 18)
                .addComponent(lblUpcomingEvents)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PatientWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnViewEvent))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jLayeredPane1.add(PatientWorkAreaJPanel, "card4");

        PatientCreateJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblCreateAccount4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount4.setText("Create a Patient Account");

        lblCreatePassword4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword4.setText("Password:");

        lblCreateUsername4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername4.setText("Username:");

        txtCreateUsername4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsername4ActionPerformed(evt);
            }
        });

        lblName4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName4.setText("Name:");

        lblAdminInfo4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminInfo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminInfo4.setText("New Patient Info");

        lblDOB4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB4.setText("Date of Birth:");

        lblPhoneNum4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum4.setText("Phone Number:");

        lblEmailAdd4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd4.setText("Email Address:");

        lblGender4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender4.setText("Gender:");

        cmbGender4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblHomeAdd4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd4.setText("Home Address:");

        txtHomeAdd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHomeAdd4ActionPerformed(evt);
            }
        });

        btnCreate4.setText("Create Account");
        btnCreate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate4ActionPerformed(evt);
            }
        });

        txtDOB4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtDOB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB4ActionPerformed(evt);
            }
        });

        lblCity4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCity4.setText("City:");

        lblCommunity4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunity4.setText("Community:");

        lblPostalCode4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPostalCode4.setText("Postal Code:");

        cbInsurance.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        cbInsurance.setText("Insurance");

        javax.swing.GroupLayout PatientCreateJPanelLayout = new javax.swing.GroupLayout(PatientCreateJPanel);
        PatientCreateJPanel.setLayout(PatientCreateJPanelLayout);
        PatientCreateJPanelLayout.setHorizontalGroup(
            PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblAdminInfo4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblName4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGender4))
                                        .addGap(18, 18, 18)
                                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbGender4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(87, 87, 87)
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDOB4)))))
                        .addContainerGap(136, Short.MAX_VALUE))
                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnCreate4)
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(87, 87, 87)
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cbInsurance)
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        PatientCreateJPanelLayout.setVerticalGroup(
            PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblAdminInfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender4)
                    .addComponent(cmbGender4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInsurance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(btnCreate4)
                .addContainerGap())
        );

        jLayeredPane1.add(PatientCreateJPanel, "card5");

        PatientEncounterHistoryJPanel.setBackground(new java.awt.Color(255, 153, 0));
        PatientEncounterHistoryJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        lblEncounterHistory.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterHistory.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterHistory.setText("Encounters");

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Doctor", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblEncounters);
        if (tblEncounters.getColumnModel().getColumnCount() > 0) {
            tblEncounters.getColumnModel().getColumn(0).setHeaderValue("Date");
            tblEncounters.getColumnModel().getColumn(2).setHeaderValue("Diagnosis");
        }

        cmbSearch.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Date", "Doctor", "Diagnosis" }));
        cmbSearch.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cmbSearchComponentAdded(evt);
            }
        });
        cmbSearch.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cmbSearchComponentShown(evt);
            }
        });
        cmbSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchActionPerformed(evt);
            }
        });

        btnSearch2.setText("Search");
        btnSearch2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearch2ActionPerformed(evt);
            }
        });

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnBack1.setText("Back");
        btnBack1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack1ActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientEncounterHistoryJPanelLayout = new javax.swing.GroupLayout(PatientEncounterHistoryJPanel);
        PatientEncounterHistoryJPanel.setLayout(PatientEncounterHistoryJPanelLayout);
        PatientEncounterHistoryJPanelLayout.setHorizontalGroup(
            PatientEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientEncounterHistoryJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterHistory, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(PatientEncounterHistoryJPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(PatientEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(PatientEncounterHistoryJPanelLayout.createSequentialGroup()
                        .addComponent(btnView)
                        .addGap(135, 135, 135)
                        .addComponent(btnAdd)
                        .addGap(161, 161, 161)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack1))
                    .addGroup(PatientEncounterHistoryJPanelLayout.createSequentialGroup()
                        .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSearch2)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch2))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 730, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        PatientEncounterHistoryJPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnAdd, btnBack1, btnDelete, btnSearch2, btnView});

        PatientEncounterHistoryJPanelLayout.setVerticalGroup(
            PatientEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientEncounterHistoryJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblEncounterHistory)
                .addGap(20, 20, 20)
                .addGroup(PatientEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearch2)
                    .addComponent(txtSearch2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PatientEncounterHistoryJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnView)
                    .addComponent(btnBack1)
                    .addComponent(btnAdd)
                    .addComponent(btnDelete))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jLayeredPane1.add(PatientEncounterHistoryJPanel, "card6");

        ViewEncounterJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblEncounterDetail.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail.setText("Encounter Detail");

        lblPatientName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName.setText("Patient:");

        lblDoctorName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName.setText("Doctor:");

        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });

        lblEncounterDate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate.setText("Encounter Date:");

        lblDiagnosis.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis.setText("Diagnosis:");

        lblBloodPressure.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure.setText("Blood Pressure:");

        lblHeartRate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate.setText("Heart Rate:");

        txtEncounterDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtEncounterDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDateActionPerformed(evt);
            }
        });

        lblTemperature.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature.setText("Temperature:");

        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        lblNotes.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes.setText("Notes:");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane3.setViewportView(txtNotes);

        btnEdit1.setText("Edit");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewEncounterJPanelLayout = new javax.swing.GroupLayout(ViewEncounterJPanel);
        ViewEncounterJPanel.setLayout(ViewEncounterJPanelLayout);
        ViewEncounterJPanelLayout.setHorizontalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEncounterDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtEncounterDate)
                                .addGap(86, 86, 86))
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(87, 87, 87)))
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblNotes)
                        .addGap(78, 78, 78)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnEdit1)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate1)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack2)))))
                .addContainerGap(136, Short.MAX_VALUE))
        );
        ViewEncounterJPanelLayout.setVerticalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotes)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnUpdate1)
                        .addComponent(btnEdit1))
                    .addComponent(btnBack2))
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(ViewEncounterJPanel, "card7");

        FindADoctorJPanel.setBackground(new java.awt.Color(255, 153, 0));
        FindADoctorJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        lblFindADoctor.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblFindADoctor.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblFindADoctor.setText("Find A Doctor");

        tblAppointments.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Doctor", "Hospital", "Community"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblAppointments);

        cmbSearchDoctor.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Doctor", "Hospital", "Community" }));
        cmbSearchDoctor.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                cmbSearchDoctorComponentAdded(evt);
            }
        });
        cmbSearchDoctor.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                cmbSearchDoctorComponentShown(evt);
            }
        });
        cmbSearchDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSearchDoctorActionPerformed(evt);
            }
        });

        btnSearchDoctor.setText("Search");
        btnSearchDoctor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchDoctorActionPerformed(evt);
            }
        });

        btnBook.setText("Book");
        btnBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookActionPerformed(evt);
            }
        });

        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FindADoctorJPanelLayout = new javax.swing.GroupLayout(FindADoctorJPanel);
        FindADoctorJPanel.setLayout(FindADoctorJPanelLayout);
        FindADoctorJPanelLayout.setHorizontalGroup(
            FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindADoctorJPanelLayout.createSequentialGroup()
                .addComponent(lblFindADoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 796, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 4, Short.MAX_VALUE))
            .addGroup(FindADoctorJPanelLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, FindADoctorJPanelLayout.createSequentialGroup()
                            .addComponent(btnBook)
                            .addGap(37, 37, 37)
                            .addComponent(btnBack3))
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(FindADoctorJPanelLayout.createSequentialGroup()
                        .addComponent(cmbSearchDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(btnSearchDoctor)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearchDoctor)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        FindADoctorJPanelLayout.setVerticalGroup(
            FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FindADoctorJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblFindADoctor)
                .addGap(20, 20, 20)
                .addGroup(FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSearchDoctor)
                    .addComponent(txtSearchDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbSearchDoctor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FindADoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBook)
                    .addComponent(btnBack3))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jLayeredPane1.add(FindADoctorJPanel, "card6");

        ViewAppointmentJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblAppointment.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAppointment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAppointment.setText("Appointment Detail");

        lblPatientName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName1.setText("Patient:");

        lblDoctorName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName1.setText("Doctor:");

        txtDoctorName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName1ActionPerformed(evt);
            }
        });

        lblAppointmentDate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblAppointmentDate.setText("Appointment Date:");

        lblHospital.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital.setText("Hospital:");

        lblHospitalCommunity.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalCommunity.setText("Community:");

        lblHospitalAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalAdd.setText("Address:");

        txtAppointmentDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtAppointmentDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppointmentDateActionPerformed(evt);
            }
        });

        lblHospitalNum.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalNum.setText("Number:");

        btnBack4.setText("Back");
        btnBack4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack4ActionPerformed(evt);
            }
        });

        txtPatientName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName1ActionPerformed(evt);
            }
        });

        lblHospitalPostalCode.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalPostalCode.setText("Postal Code:");

        lblHospitalEmail.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalEmail.setText("Email:");

        javax.swing.GroupLayout ViewAppointmentJPanelLayout = new javax.swing.GroupLayout(ViewAppointmentJPanel);
        ViewAppointmentJPanel.setLayout(ViewAppointmentJPanelLayout);
        ViewAppointmentJPanelLayout.setHorizontalGroup(
            ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAppointment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAppointmentDate)
                                    .addComponent(lblHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHospitalNum, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHospitalPostalCode))
                                .addGap(18, 18, 18)
                                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHospitalCommunity, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(txtAppointmentDate)
                                    .addComponent(txtHospitalNum)
                                    .addComponent(txtHospitalPostalCode))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospitalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospitalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(250, 250, 250)
                                        .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnBack4)
                        .addGap(8, 8, 8)))
                .addGap(140, 140, 140))
        );
        ViewAppointmentJPanelLayout.setVerticalGroup(
            ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewAppointmentJPanelLayout.createSequentialGroup()
                .addComponent(lblAppointment, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAppointmentDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalCommunity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHospitalEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(lblHospitalNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtHospitalNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(41, 41, 41)
                .addGroup(ViewAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalPostalCode)
                    .addComponent(txtHospitalPostalCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130)
                .addComponent(btnBack4)
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(ViewAppointmentJPanel, "card7");

        BookAppointmentJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblAppointment1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAppointment1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAppointment1.setText("Book an Appointment");

        lblPatientName2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName2.setText("Patient:");

        lblDoctorName2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName2.setText("Doctor:");

        txtDoctorName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName2ActionPerformed(evt);
            }
        });

        lblAppointmentDate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblAppointmentDate1.setText("Appointment Date:");

        lblHospital1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital1.setText("Hospital:");

        lblHospitalCommunity1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalCommunity1.setText("Community:");

        lblHospitalAdd1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalAdd1.setText("Address:");

        txtAppointmentDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtAppointmentDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppointmentDate1ActionPerformed(evt);
            }
        });

        lblHospitalNum1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalNum1.setText("Number:");

        btnBack5.setText("Back");
        btnBack5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack5ActionPerformed(evt);
            }
        });

        txtPatientName2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName2ActionPerformed(evt);
            }
        });

        lblHospitalPostalCode1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalPostalCode1.setText("Postal Code:");

        lblHospitalEmail1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospitalEmail1.setText("Email:");

        btnConfirm.setText("Confirm");
        btnConfirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConfirmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookAppointmentJPanelLayout = new javax.swing.GroupLayout(BookAppointmentJPanel);
        BookAppointmentJPanel.setLayout(BookAppointmentJPanelLayout);
        BookAppointmentJPanelLayout.setHorizontalGroup(
            BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAppointment1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblAppointmentDate1)
                                    .addComponent(lblHospitalCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHospitalNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblHospitalPostalCode1))
                                .addGap(18, 18, 18)
                                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtHospitalCommunity1, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(txtAppointmentDate1)
                                    .addComponent(txtHospitalNum1)
                                    .addComponent(txtHospitalPostalCode1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospitalAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospitalAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHospitalEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHospitalEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDoctorName2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(250, 250, 250)
                                        .addComponent(lblPatientName2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtPatientName2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                                        .addGap(142, 142, 142)
                                        .addComponent(txtDoctorName2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnConfirm)
                        .addGap(54, 54, 54)
                        .addComponent(btnBack5)
                        .addGap(8, 8, 8)))
                .addGap(140, 140, 140))
        );
        BookAppointmentJPanelLayout.setVerticalGroup(
            BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookAppointmentJPanelLayout.createSequentialGroup()
                .addComponent(lblAppointment1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblAppointmentDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAppointmentDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalCommunity1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalAdd1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHospitalEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospitalEmail1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospitalPostalCode1)
                    .addComponent(txtHospitalPostalCode1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(130, 130, 130)
                .addGroup(BookAppointmentJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack5)
                    .addComponent(btnConfirm))
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(BookAppointmentJPanel, "card7");

        AddEncounterJPanel.setBackground(new java.awt.Color(255, 153, 0));

        lblEncounterDetail1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail1.setText("Encounter Detail");

        lblPatientName3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName3.setText("Patient:");

        lblDoctorName3.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName3.setText("Doctor:");

        txtDoctorName3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName3ActionPerformed(evt);
            }
        });

        lblEncounterDate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate1.setText("Encounter Date:");

        lblDiagnosis1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis1.setText("Diagnosis:");

        lblBloodPressure1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure1.setText("Blood Pressure:");

        lblHeartRate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate1.setText("Heart Rate:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtEncounterDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-mm-dd"))));
        txtEncounterDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDate1ActionPerformed(evt);
            }
        });

        lblTemperature1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature1.setText("Temperature:");

        btnBack6.setText("Back");
        btnBack6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack6ActionPerformed(evt);
            }
        });

        txtPatientName3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName3ActionPerformed(evt);
            }
        });

        lblNotes1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes1.setText("Notes:");

        txtNotes1.setColumns(20);
        txtNotes1.setRows(5);
        jScrollPane5.setViewportView(txtNotes1);

        javax.swing.GroupLayout AddEncounterJPanelLayout = new javax.swing.GroupLayout(AddEncounterJPanel);
        AddEncounterJPanel.setLayout(AddEncounterJPanelLayout);
        AddEncounterJPanelLayout.setHorizontalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblDoctorName3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDoctorName3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblPatientName3, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtPatientName3, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(87, 87, 87))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEncounterDate1)
                                        .addGap(86, 86, 86)))
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack6)))
                        .addContainerGap(136, Short.MAX_VALUE))
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotes1))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
        );
        AddEncounterJPanelLayout.setVerticalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotes1)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack6)
                    .addComponent(btnSave))
                .addGap(72, 72, 72))
        );

        jLayeredPane1.add(AddEncounterJPanel, "card7");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdPasswordActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
//        if (txtHomeAdd.getText().contains("[a-zA-Z]+")){
//            txtHomeAdd.setText("-1");
//        }
        
//        Date nonedate = new Date();

//        if (!txtDOB.getValue().equals(nonedate)){
//            Date DOB = (Date)txtDOB.getValue();
//
//        }
        String Username = txtShowUsername.getText();
        String Password = txtShowPassword.getText();
        String Name = txtName.getText();
        LocalDate DOB = LocalDate.parse(txtDOB.getText());
//        int EmployeeID = Integer.parseInt(txtHomeAdd.getText());
        String Gender = cmbGender.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum.getText();
        String EmailAdd = txtEmailAdd.getText();
        String HomeAdd = txtHomeAdd.getText();
        String City = txtCity.getText();
        String Community = txtCommunity.getText();
        String PostalCode = txtPostalCode.getText();
        Boolean Insurance = cbInsurance.isSelected();
        
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int postalflag = 0;
        char[] PostalArray = PostalCode.toCharArray();
        for(char c:PostalArray)
        {
        if (!Character.isDigit(c))
            postalflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");   
            saveflag = 0;
        }
        if (City.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid City.");   
            saveflag = 0;
        }
        if (Community.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Community.");   
            saveflag = 0;
        }
        if (PostalCode.equals("") || postalflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Postal Code.");   
            saveflag = 0;
        }
        else if (saveflag == 1){
            
        patient ei = patientset.getHistory().get(index);
        person ps = new person();
        city ct = new city();
        house hs = new house();
        hs.setAddress(HomeAdd);
            
        community cm = new community();
        ei.setUsername(Username);
        ei.setPassword(Password);
        ps.setPhoneNum(PhoneNum);
        ps.setEmailAdd(EmailAdd);
        ps.setGender(Gender);
        ps.setName(Name);
        ps.setDOB(DOB);
        ct.setName(City);
        cm.setName(Community);
        ei.setCity(ct);
        ei.setCommunity(cm);
        ei.setPostalCode(PostalCode);
        ei.setHomeAdd(hs);
        ei.setPerson(ps);
        ei.setInsurance(Insurance);
        JOptionPane.showMessageDialog(this, "Patient Information Updated.");
        
        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Patient");
        ah.setName(patientset.getHistory().get(index).getPerson().getName());
        ah.setModification("Update Profile");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String password = pwdPassword.getText();
        int flag = 0;
        int i = 0;
        
        for (patient ei : patientset.getHistory()){
            if (ei.getUsername().equals(username) & (ei.getPassword().equals(password))){
                flag = 1;
                index = i;
                PatientLoginJPanel.setVisible(false);
                PatientCreateJPanel.setVisible(false);
                PatientWorkAreaJPanel.setVisible(true);
                PatientProfileJPanel.setVisible(false);
                FindADoctorJPanel.setVisible(false);
                PatientEncounterHistoryJPanel.setVisible(false);
                ViewEncounterJPanel.setVisible(false);
                BookAppointmentJPanel.setVisible(false);
                ViewAppointmentJPanel.setVisible(false);
                AddEncounterJPanel.setVisible(false);
                populateappointmentTable();
            }
            else{
                i += 1;
            }
        }
        if(flag == 0){
            JOptionPane.showMessageDialog(this, "Wrong Username or Password.");
        }
        
//        admin ei = set.getHistory();
//        if (ei.getUsername().equals(username) & ei.getPassword().equals(password)){
//        
//    }
        
//        for(admin admin: this.set){
//            if (admin.getUsername().equals(username) and admin.getPassword().equals(password)){
//            
//        }
//        }
//        txtUsername.getText();
        
    }//GEN-LAST:event_btnLoginActionPerformed

    private void txtShowUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsernameActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_txtShowUsernameActionPerformed

    private void txtHomeAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHomeAddActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHomeAddActionPerformed

    private void txtCreateUsername4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsername4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsername4ActionPerformed

    private void txtHomeAdd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHomeAdd4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHomeAdd4ActionPerformed

    private void btnCreate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate4ActionPerformed
        // TODO add your handling code here:
        String Username = txtCreateUsername4.getText();
        String Password = txtCreatePassword4.getText();
        String Name = txtName4.getText();
        LocalDate DOB = LocalDate.parse(txtDOB4.getText());
        String Gender = cmbGender4.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum4.getText();
        String EmailAdd = txtEmailAdd4.getText();
        String HomeAdd = txtHomeAdd4.getText();
        String City = txtCity4.getText();
        String Community = txtCommunity4.getText();
        String PostalCode = txtPostalCode4.getText();
        Boolean Insurance = cbInsurance.isSelected();
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");   
            saveflag = 0;
        }
        
        if (Community.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Community.");   
            saveflag = 0;
        }
        
        if (City.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid City.");   
            saveflag = 0;
        }
        
        if (PostalCode.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Postal Code.");   
            saveflag = 0;
        }
        
        else if (saveflag == 1){
        patient cp = patientset.addNewPatient();
        person ps = new person();
        city ct = new city();
        community cm = new community();
        house hs = new house();
        hs.setAddress(HomeAdd);
            
        cp.setUsername(Username);
        cp.setPassword(Password);
        ps.setPhoneNum(PhoneNum);
        ps.setEmailAdd(EmailAdd);
        ps.setGender(Gender);
        ps.setName(Name);
        ps.setDOB(DOB);
        cp.setInsurance(Insurance);
        cp.setHomeAdd(hs);
        ct.setName(City);
        cm.setName(Community);
        cp.setCity(ct);
        cp.setCommunity(cm);
        cp.setPostalCode(PostalCode);
        cp.setPerson(ps);
        JOptionPane.showMessageDialog(this, "Patient Account Created.");
        
        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Patient");
        ah.setName(patientset.getHistory().get(index).getPerson().getName());
        ah.setModification("Create New Account");
        txtCreateUsername4.setText("");
        txtCreatePassword4.setText("");
        txtName4.setText("");
        txtDOB4.setText("");
        cmbGender4.setSelectedIndex(0);
        txtPhoneNum4.setText("");
        txtEmailAdd4.setText("");
        txtHomeAdd4.setText("");
        txtCity.setText("");
        txtCommunity.setText("");
        txtPostalCode.setText("");
        
        PatientLoginJPanel.setVisible(true);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        }    
        
    }//GEN-LAST:event_btnCreate4ActionPerformed

    private void txtDOB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB4ActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(true);
        BookAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        patient cp = patientset.getHistory().get(index);
        
        txtShowUsername.setText(cp.getUsername());
        txtShowUsername.setEditable(false);
        
        txtShowPassword.setText(cp.getPassword());
        txtShowPassword.setEditable(false);
        
        txtName.setText(cp.getPerson().getName());
        txtName.setEditable(false);
        
        txtDOB.setText(String.valueOf(cp.getPerson().getDOB()));
        txtDOB.setEditable(false);
        
        txtPhoneNum.setText(cp.getPerson().getPhoneNum());
        txtPhoneNum.setEditable(false);
        
        txtEmailAdd.setText(cp.getPerson().getEmailAdd());
        txtEmailAdd.setEditable(false);
        
        cmbGender.setSelectedItem(cp.getPerson().getGender());
        cmbGender.setEnabled(false);
        
        txtHomeAdd.setText(cp.getHomeAdd().getAddress());
        txtHomeAdd.setEditable(false);
        
        txtCity.setText(cp.getCity().getName());
        txtCity.setEditable(false);
        
        txtCommunity.setText(cp.getCommunity().getName());
        txtCommunity.setEditable(false);
        
        txtPostalCode.setText(cp.getPostalCode());
        txtPostalCode.setEditable(false);
        
        cbInsurance1.setSelected(cp.getInsurance());
        cbInsurance1.setEnabled(false);
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        txtShowUsername.setEditable(true);
        txtShowPassword.setEditable(true);
        txtName.setEditable(true);
        txtDOB.setEditable(true);
        txtPhoneNum.setEditable(true);
        txtEmailAdd.setEditable(true);
        cmbGender.setEnabled(true);
        txtHomeAdd.setEditable(true);
        txtCity.setEditable(true);
        txtCommunity.setEditable(true);
        txtPostalCode.setEditable(true);
        cbInsurance1.setEnabled(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed

    private void cmbSearchComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cmbSearchComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchComponentAdded

    private void cmbSearchComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmbSearchComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchComponentShown

    private void cmbSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchActionPerformed

    private void btnSearch2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearch2ActionPerformed
        // TODO add your handling code here:
        //        System.out.println(cmbSearch.getSelectedItem().toString());
        if (cmbSearch.getSelectedItem().toString().matches("All")) {
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim()));
        }
        //
        else if (cmbSearch.getSelectedItem().toString().matches("Date")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 0));
        }
        //
        else if (cmbSearch.getSelectedItem().toString().matches("Doctor")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 1));
        }

        else if (cmbSearch.getSelectedItem().toString().matches("Diagnosis")) {

            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblEncounters.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 2));
        }

        //
        //        else if (cmbSearch.getSelectedItem().toString().matches("Level")) {
            //
            //            DefaultTableModel model = (DefaultTableModel) tblOverview.getModel();
            //            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            //            tblOverview.setRowSorter(tr);
            //            tr.setRowFilter(RowFilter.regexFilter(txtSearch2.getText().trim(), 3));
            //        }
        ////            Vector rowVector = (Vector) rows;
        //            for (int j = 0; j < tblOverview.getColumnCount(); j++){
            //            }
        //            }
        //        }
        //
        //        if(cmbSearch.getSelectedItem().toString() != "All" && txtSearch2.getText().isBlank()){
            //            JOptionPane.showMessageDialog(null, "Please enter a keyword or select All items");
            //        }else{
            //            for(int i = 0; i < tblOverview.getRowCount(); i++){//For each row
                //                for(int j = 0; j < tblOverview.getColumnCount(); j++){//For each column in that row
                    //                    if(tblOverview.getModel().getValueAt(i, j).equals(txtSearch2.getText())){//Search the model
                        //                        System.out.println(tblOverview.getModel().getValueAt(i, j));//Print if found string
                        //                    }
                    //                }//For loop inner
                //}//For loop outer
            ////            List<EmployeeInfo> filteredList = history.Search(cmbSearch.getSelectedItem().toString(), txtSearch2.getText());
            ////            displayTable(filteredList);
            //        }
    }//GEN-LAST:event_btnSearch2ActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:

        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(true);
        BookAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

        txtDoctorName.setText(selectedEncounter.getDoctorName());
        txtDoctorName.setEditable(false);

        txtPatientName.setText(selectedEncounter.getPatientName());
        txtPatientName.setEditable(false);

        txtEncounterDate.setText(String.valueOf(selectedEncounter.getEncounterDate()));
        txtEncounterDate.setEditable(false);

        txtDiagnosis.setText(selectedEncounter.getDiagnosis());
        txtDiagnosis.setEditable(false);

        txtBloodPressure.setText(String.valueOf(selectedEncounter.getVitalSigns().getBloodPressure()));
        txtBloodPressure.setEditable(false);

        txtHeartRate.setText(String.valueOf(selectedEncounter.getVitalSigns().getHeartRate()));
        txtHeartRate.setEditable(false);

        txtTemperature.setText(String.valueOf(selectedEncounter.getVitalSigns().getTemperature()));
        txtTemperature.setEditable(false);

        txtNotes.setText(selectedEncounter.getNotes());
        txtNotes.setEditable(false);
    }//GEN-LAST:event_btnViewActionPerformed

    private void btnBack1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack1ActionPerformed
        // TODO add your handling code here:
        PatientProfileJPanel.setVisible(false);
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack1ActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void txtEncounterDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDateActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void btnEncounterHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncounterHistoryActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        
        populateTable();
    }//GEN-LAST:event_btnEncounterHistoryActionPerformed

    private void cmbSearchDoctorComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_cmbSearchDoctorComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchDoctorComponentAdded

    private void cmbSearchDoctorComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_cmbSearchDoctorComponentShown
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbSearchDoctorComponentShown

    private void cmbSearchDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSearchDoctorActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_cmbSearchDoctorActionPerformed

    private void btnSearchDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchDoctorActionPerformed
        // TODO add your handling code here:
        if (txtSearchDoctor.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Search Content Missing.");
        }
        if (cmbSearchDoctor.getSelectedItem().toString().matches("All")) {
            DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblAppointments.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearchDoctor.getText().trim()));
        }
        //
        else if (cmbSearchDoctor.getSelectedItem().toString().matches("Doctor")) {

            DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblAppointments.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearchDoctor.getText().trim(), 0));
        }
        //
        else if (cmbSearchDoctor.getSelectedItem().toString().matches("Hospital")) {

            DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblAppointments.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearchDoctor.getText().trim(), 1));
        }

        else if (cmbSearchDoctor.getSelectedItem().toString().matches("Community")) {

            DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
            TableRowSorter<DefaultTableModel> tr = new TableRowSorter<DefaultTableModel>(model);
            tblAppointments.setRowSorter(tr);
            tr.setRowFilter(RowFilter.regexFilter(txtSearchDoctor.getText().trim(), 2));
        }

    }//GEN-LAST:event_btnSearchDoctorActionPerformed

    private void btnBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblAppointments.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select an Appointment to Book.");
            return;
        }
        PatientLoginJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        
        txtAppointmentDate1.setText("");
        DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
        txtDoctorName2.setText(model.getValueAt(selectedRowIndex, 0).toString());
        txtDoctorName2.setEditable(false);

        patient cp = patientset.getHistory().get(index);
        txtPatientName2.setText(cp.getPerson().getName());
        txtPatientName2.setEditable(false);
        
        for (doctor cd : doctorset.getHistory()){
            if((cd.getPerson().getName()).equals(txtDoctorName2.getText())){
                for (hospital ch : hospitallist.getHistory()){
                    if ((cd.getHospital().getHospitalName()).equals(ch.getHospitalName())){
                        txtHospital1.setText(ch.getHospitalName());
                        txtHospital1.setEditable(false);

                        txtHospitalCommunity1.setText(ch.getCommunity().getName());
                        txtHospitalCommunity1.setEditable(false);

                        txtHospitalAdd1.setText(ch.getHospitalAdd());
                        txtHospitalAdd1.setEditable(false);

                        txtHospitalNum1.setText(ch.getHospitalNum());
                        txtHospitalNum1.setEditable(false);

                        txtHospitalEmail1.setText(ch.getHospitalEmail());
                        txtHospitalEmail1.setEditable(false);

                        txtHospitalPostalCode1.setText(ch.getPostalCode());
                        txtHospitalPostalCode1.setEditable(false);
                    }
        }
            }
        }
        
//        appointmentlist.addNewAppointment();
        
////        appointment selectedAppointment1 = (appointment) model.getValueAt(selectedRowIndex, 0); 
//        
//        
//        txtDoctorName2.setText(selecteddoctor.getName());
//        txtDoctorName2.setEditable(false);
////        

       

    }//GEN-LAST:event_btnBookActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(true);
        PatientProfileJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnFindDoctorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindDoctorActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        populatedoctorTable();
    }//GEN-LAST:event_btnFindDoctorActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblUpcomingEvents.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select an Appointment to Cancel.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblUpcomingEvents.getModel();
        appointment selectedAppointment = (appointment) model.getValueAt(selectedRowIndex, 0); 
        
        appointmentlist.cancelAppointment(selectedAppointment);
        
        JOptionPane.showMessageDialog(this, "Appointment Canceled.");
        
        populateappointmentTable();      

        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Patient");
        ah.setName(patientset.getHistory().get(index).getPerson().getName());
        ah.setModification("Cancel Appointment");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtDoctorName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName1ActionPerformed

    private void txtAppointmentDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppointmentDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppointmentDateActionPerformed

    private void btnBack4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack4ActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(true);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack4ActionPerformed

    private void txtPatientName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName1ActionPerformed

    private void btnViewEventActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEventActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblUpcomingEvents.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select an Appointment to View.");
            return;
        }
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        DefaultTableModel model = (DefaultTableModel) tblUpcomingEvents.getModel();
        appointment selectedAppointment = (appointment) model.getValueAt(selectedRowIndex, 0); 
        
        
        txtDoctorName1.setText(selectedAppointment.getDoctorName());
        txtDoctorName1.setEditable(false);
//        
        txtPatientName1.setText(selectedAppointment.getPatientName());
        txtPatientName1.setEditable(false);
//        
        txtAppointmentDate.setText(String.valueOf(selectedAppointment.getAppointmentDate()));
        txtAppointmentDate.setEditable(false);
//        
        txtHospital.setText(selectedAppointment.getHospital());
        txtHospital.setEditable(false);
//        
        txtHospitalCommunity.setText(selectedAppointment.getCommunity());
        txtHospitalCommunity.setEditable(false);
//        
        txtHospitalAdd.setText(selectedAppointment.getHospitalAdd());
        txtHospitalAdd.setEditable(false);
//      
        txtHospitalNum.setText(selectedAppointment.getHospitalNum());
        txtHospitalNum.setEditable(false);
        
        txtHospitalEmail.setText(selectedAppointment.getHospitalEmail());
        txtHospitalEmail.setEditable(false);
        
        txtHospitalPostalCode.setText(selectedAppointment.getPostalCode());
        txtHospitalPostalCode.setEditable(false);
//        txtTemperature.setText(String.valueOf(selectedEncounter.getTemperature()));
//        txtTemperature.setEditable(false);
//        
//        txtNotes.setText(selectedEncounter.getNotes());
//        txtNotes.setEditable(false);
    }//GEN-LAST:event_btnViewEventActionPerformed

    private void txtDoctorName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName2ActionPerformed

    private void txtAppointmentDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppointmentDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppointmentDate1ActionPerformed

    private void btnBack5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack5ActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(true);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack5ActionPerformed

    private void txtPatientName2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName2ActionPerformed

    private void btnConfirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConfirmActionPerformed
        // TODO add your handling code here:
        
        
        if (txtAppointmentDate1.getText().equals("")){
            JOptionPane.showMessageDialog(this, "Please Enter a valid date.");
        }
        else{
            appointment newAppointment = appointmentlist.addNewAppointment();
        
            newAppointment.setCommunity(txtHospitalCommunity1.getText());
            newAppointment.setDoctorName(txtDoctorName2.getText());
            newAppointment.setHospital(txtHospital1.getText());
            newAppointment.setHospitalAdd(txtHospitalAdd1.getText());
            newAppointment.setHospitalEmail(txtHospitalEmail1.getText());
            newAppointment.setHospitalNum(txtHospitalNum1.getText());
            newAppointment.setPatientName(txtPatientName2.getText());
            newAppointment.setPostalCode(txtHospitalPostalCode1.getText());
            newAppointment.setAppointmentDate(LocalDate.parse(txtAppointmentDate1.getText()));
            JOptionPane.showMessageDialog(this, "Appointment Booked.");
            populateappointmentTable();
            
            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Patient");
            ah.setName(patientset.getHistory().get(index).getPerson().getName());
            ah.setModification("Book New Appointment");
            
        }
        
        
        
    }//GEN-LAST:event_btnConfirmActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(true);
        
        txtPatientName3.setText(patientset.getHistory().get(index).getPerson().getName());
        txtPatientName3.setEditable(false);
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        System.out.println(model.getValueAt(selectedRowIndex, 0).getClass());
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0); 
        
        encounterhistory.deleteEncounter(selectedEncounter); 
        
        JOptionPane.showMessageDialog(this, "Successfully Deleted.");
        
        populateTable();
        
        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Patient");
        ah.setName(patientset.getHistory().get(index).getPerson().getName());
        ah.setModification("Delete Encounter History");
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void txtDoctorName3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName3ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String DoctorName = txtDoctorName3.getText();
        String PatientName = txtPatientName3.getText();
        LocalDate EncounterDate = LocalDate.parse(txtEncounterDate1.getText());
        String Diagnosis = txtDiagnosis1.getText();
        int BloodPressure = -1;
        int HeartRate = -1;
        float Temperature = -1;
        if (!txtBloodPressure1.getText().equals("")){
            BloodPressure = Integer.parseInt(txtBloodPressure1.getText());
        }
        if (!txtHeartRate1.getText().equals("")){
            HeartRate = Integer.parseInt(txtHeartRate1.getText());
        }

        if (!txtTemperature1.getText().equals("")){
            Temperature = Float.parseFloat(txtTemperature1.getText());
        }

        String Notes = txtNotes1.getText();

        int docnameflag = 0;
        char[] doccharArray = DoctorName.toCharArray();
        for(char c:doccharArray)
        {
            if (!Character.isLetter(c))
            docnameflag = 1;
        }

        int ptnameflag = 0;
        char[] ptcharArray = PatientName.toCharArray();
        for(char c:ptcharArray)
        {
            if (!Character.isLetter(c))
            ptnameflag = 1;
        }

        int saveflag = 1;
        if (DoctorName.equals("") || docnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Doctor Name.");
            saveflag = 0;
        }
        if (PatientName.equals("") || ptnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Patient Name.");
            saveflag = 0;
        }
        if (EncounterDate == null){
            JOptionPane.showMessageDialog(this, "Invalid Encounter Date.");
            saveflag = 0;
        }
        if (Diagnosis.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Diagnosis.");
            saveflag = 0;
        }
        if (txtBloodPressure1.getText().equals("") || BloodPressure < 0){
            JOptionPane.showMessageDialog(this, "Invalid Blood Pressure.");
            saveflag = 0;
        }
        if (txtHeartRate1.getText().equals("") || HeartRate < 0){
            JOptionPane.showMessageDialog(this, "Invalid Heart Rate.");
            saveflag = 0;
        }
        if (txtTemperature1.getText().equals("") ||Temperature < 0){
            JOptionPane.showMessageDialog(this, "Invalid Temperature.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            encounter ce = encounterhistory.addNewEncounter();
            VitalSigns vs = new VitalSigns();
            vs.setBloodPressure(BloodPressure);
            vs.setHeartRate(HeartRate);
            vs.setTemperature(Temperature);
            ce.setDoctorName(DoctorName);
            ce.setPatientName(PatientName);
            ce.setEncounterDate(EncounterDate);
            ce.setVitalSigns(vs);
            ce.setDiagnosis(Diagnosis);
            ce.setNotes(Notes);

            populateTable();

            JOptionPane.showMessageDialog(this, "New Encounter Saved.");

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Patient");
            ah.setName(patientset.getHistory().get(index).getPerson().getName());
            ah.setModification("Add New Encounter");
        }
        //        System.out.println(saveflag);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtEncounterDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDate1ActionPerformed

    private void btnBack6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack6ActionPerformed
        // TODO add your handling code here:
        PatientLoginJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        PatientWorkAreaJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        FindADoctorJPanel.setVisible(false);
        PatientEncounterHistoryJPanel.setVisible(true);
        ViewEncounterJPanel.setVisible(false);
        BookAppointmentJPanel.setVisible(false);
        ViewAppointmentJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack6ActionPerformed

    private void txtPatientName3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName3ActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        txtDoctorName.setEditable(true);
        txtPatientName.setEditable(true);
        txtEncounterDate.setEditable(true);
        txtDiagnosis.setEditable(true);
        txtBloodPressure.setEditable(true);
        txtHeartRate.setEditable(true);
        txtTemperature.setEditable(true);
        txtNotes.setEditable(true);
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        String DoctorName = txtDoctorName.getText();
        String PatientName = txtPatientName.getText();
        LocalDate EncounterDate = LocalDate.parse(txtEncounterDate.getText());
        String Diagnosis = txtDiagnosis.getText();
        int BloodPressure = -1;
        int HeartRate = -1;
        float Temperature = -1;
        if (!txtBloodPressure.getText().equals("")){
            BloodPressure = Integer.parseInt(txtBloodPressure.getText());
        }
        if (!txtHeartRate.getText().equals("")){
            HeartRate = Integer.parseInt(txtHeartRate.getText());
        }

        if (!txtTemperature.getText().equals("")){
            Temperature = Float.parseFloat(txtTemperature.getText());
        }
        String Notes = txtNotes.getText();

        int docnameflag = 0;
        char[] doccharArray = DoctorName.toCharArray();
        for(char c:doccharArray)
        {
            if (!Character.isLetter(c))
            docnameflag = 1;
        }

        int ptnameflag = 0;
        char[] ptcharArray = PatientName.toCharArray();
        for(char c:ptcharArray)
        {
            if (!Character.isLetter(c))
            ptnameflag = 1;
        }

        int saveflag = 1;
        if (DoctorName.equals("") || docnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Doctor Name.");
            saveflag = 0;
        }
        if (PatientName.equals("") || ptnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Patient Name.");
            saveflag = 0;
        }
        if (EncounterDate == null){
            JOptionPane.showMessageDialog(this, "Invalid Encounter Date.");
            saveflag = 0;
        }
        if (Diagnosis.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Diagnosis.");
            saveflag = 0;
        }
        if (txtBloodPressure.getText().equals("") || BloodPressure < 0){
            JOptionPane.showMessageDialog(this, "Invalid Blood Pressure.");
            saveflag = 0;
        }
        if (txtHeartRate.getText().equals("") || HeartRate < 0){
            JOptionPane.showMessageDialog(this, "Invalid Heart Rate.");
            saveflag = 0;
        }
        if (txtTemperature.getText().equals("") || Temperature < 0){
            JOptionPane.showMessageDialog(this, "Invalid Temperature.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            int selectedRowIndex = tblEncounters.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
                return;
            }
            VitalSigns vitalsigns = new VitalSigns();
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

            vitalsigns.setBloodPressure(BloodPressure);
            vitalsigns.setHeartRate(HeartRate);
            vitalsigns.setTemperature(Temperature);
            selectedEncounter.setDoctorName(DoctorName);
            selectedEncounter.setPatientName(PatientName);
            selectedEncounter.setEncounterDate(EncounterDate);
            selectedEncounter.setDiagnosis(Diagnosis);
            selectedEncounter.setNotes(Notes);
            selectedEncounter.setVitalSigns(vitalsigns);

            JOptionPane.showMessageDialog(this, "Encounter Detail Updated.");
        }

        //        doctor ei = set.addNewDoctor();
        //        doctor ei = set.getHistory().get(index);
        //        ei.setUsername(Username);
        //        ei.setPassword(Password);
        //        ei.setPhoneNum(PhoneNum);
        //        ei.setEmailAdd(EmailAdd);
        //        ei.setEmployeeID(EmployeeID);
        //        ei.setGender(Gender);
        //        ei.setName(Name);
        //        ei.setDOB((Date)txtDOB.getValue());
        //        JOptionPane.showMessageDialog(this, "Doctor Profile Updated.");
        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Patient");
        ah.setName(patientset.getHistory().get(index).getPerson().getName());
        ah.setModification("Update Encounter History");
    }//GEN-LAST:event_btnUpdate1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddEncounterJPanel;
    private javax.swing.JPanel BookAppointmentJPanel;
    private javax.swing.JPanel FindADoctorJPanel;
    private javax.swing.JPanel PatientCreateJPanel;
    private javax.swing.JPanel PatientEncounterHistoryJPanel;
    private javax.swing.JPanel PatientLoginJPanel;
    private javax.swing.JPanel PatientProfileJPanel;
    private javax.swing.JPanel PatientWorkAreaJPanel;
    private javax.swing.JPanel ViewAppointmentJPanel;
    private javax.swing.JPanel ViewEncounterJPanel;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack1;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack4;
    private javax.swing.JButton btnBack5;
    private javax.swing.JButton btnBack6;
    private javax.swing.JButton btnBook;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnConfirm;
    private javax.swing.JButton btnCreate4;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnEncounterHistory;
    private javax.swing.JButton btnFindDoctor;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSearch2;
    private javax.swing.JButton btnSearchDoctor;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewEvent;
    private javax.swing.JCheckBox cbInsurance;
    private javax.swing.JCheckBox cbInsurance1;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbGender4;
    private javax.swing.JComboBox<String> cmbSearch;
    private javax.swing.JComboBox<String> cmbSearchDoctor;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblAdminInfo4;
    private javax.swing.JLabel lblAppointment;
    private javax.swing.JLabel lblAppointment1;
    private javax.swing.JLabel lblAppointmentDate;
    private javax.swing.JLabel lblAppointmentDate1;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBloodPressure1;
    private javax.swing.JLabel lblCity;
    private javax.swing.JLabel lblCity4;
    private javax.swing.JLabel lblCommunity;
    private javax.swing.JLabel lblCommunity4;
    private javax.swing.JLabel lblCreateAccount4;
    private javax.swing.JLabel lblCreatePassword;
    private javax.swing.JLabel lblCreatePassword4;
    private javax.swing.JLabel lblCreateUsername;
    private javax.swing.JLabel lblCreateUsername4;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDOB4;
    private javax.swing.JLabel lblDiagnosis;
    private javax.swing.JLabel lblDiagnosis1;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorName1;
    private javax.swing.JLabel lblDoctorName2;
    private javax.swing.JLabel lblDoctorName3;
    private javax.swing.JLabel lblEmailAdd;
    private javax.swing.JLabel lblEmailAdd4;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblEncounterDate1;
    private javax.swing.JLabel lblEncounterDetail;
    private javax.swing.JLabel lblEncounterDetail1;
    private javax.swing.JLabel lblEncounterHistory;
    private javax.swing.JLabel lblFindADoctor;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender4;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHeartRate1;
    private javax.swing.JLabel lblHomeAdd;
    private javax.swing.JLabel lblHomeAdd4;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblHospital1;
    private javax.swing.JLabel lblHospitalAdd;
    private javax.swing.JLabel lblHospitalAdd1;
    private javax.swing.JLabel lblHospitalCommunity;
    private javax.swing.JLabel lblHospitalCommunity1;
    private javax.swing.JLabel lblHospitalEmail;
    private javax.swing.JLabel lblHospitalEmail1;
    private javax.swing.JLabel lblHospitalNum;
    private javax.swing.JLabel lblHospitalNum1;
    private javax.swing.JLabel lblHospitalPostalCode;
    private javax.swing.JLabel lblHospitalPostalCode1;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblNotes1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatientLogin;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientName1;
    private javax.swing.JLabel lblPatientName2;
    private javax.swing.JLabel lblPatientName3;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblPhoneNum4;
    private javax.swing.JLabel lblPostalCode;
    private javax.swing.JLabel lblPostalCode4;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTemperature1;
    private javax.swing.JLabel lblUpcomingEvents;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTable tblAppointments;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTable tblUpcomingEvents;
    private javax.swing.JFormattedTextField txtAppointmentDate;
    private javax.swing.JFormattedTextField txtAppointmentDate1;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtBloodPressure1;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtCity4;
    private javax.swing.JTextField txtCommunity;
    private javax.swing.JTextField txtCommunity4;
    private javax.swing.JPasswordField txtCreatePassword4;
    private javax.swing.JTextField txtCreateUsername4;
    private javax.swing.JFormattedTextField txtDOB;
    private javax.swing.JFormattedTextField txtDOB4;
    private javax.swing.JTextField txtDiagnosis;
    private javax.swing.JTextField txtDiagnosis1;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorName1;
    private javax.swing.JTextField txtDoctorName2;
    private javax.swing.JTextField txtDoctorName3;
    private javax.swing.JTextField txtEmailAdd;
    private javax.swing.JTextField txtEmailAdd4;
    private javax.swing.JFormattedTextField txtEncounterDate;
    private javax.swing.JFormattedTextField txtEncounterDate1;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHeartRate1;
    private javax.swing.JTextField txtHomeAdd;
    private javax.swing.JTextField txtHomeAdd4;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtHospital1;
    private javax.swing.JTextField txtHospitalAdd;
    private javax.swing.JTextField txtHospitalAdd1;
    private javax.swing.JTextField txtHospitalCommunity;
    private javax.swing.JTextField txtHospitalCommunity1;
    private javax.swing.JTextField txtHospitalEmail;
    private javax.swing.JTextField txtHospitalEmail1;
    private javax.swing.JTextField txtHospitalNum;
    private javax.swing.JTextField txtHospitalNum1;
    private javax.swing.JTextField txtHospitalPostalCode;
    private javax.swing.JTextField txtHospitalPostalCode1;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName4;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextArea txtNotes1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    private javax.swing.JTextField txtPatientName2;
    private javax.swing.JTextField txtPatientName3;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtPhoneNum4;
    private javax.swing.JTextField txtPostalCode;
    private javax.swing.JTextField txtPostalCode4;
    private javax.swing.JTextField txtSearch2;
    private javax.swing.JTextField txtSearchDoctor;
    private javax.swing.JPasswordField txtShowPassword;
    private javax.swing.JTextField txtShowUsername;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTemperature1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        model.setRowCount(0);
        patient cp = patientset.getHistory().get(index);
        
        for (encounter eh : encounterhistory.getHistory()){
            if (eh.getPatientName().equals(cp.getPerson().getName())) {
                Object[] row = new Object[3];
                row[0] = eh;
                row[1] = eh.getPatientName();
                row[2] = eh.getDiagnosis();

                model.addRow(row); 
            }
        }
        
    }

    private void populateappointmentTable() {
        DefaultTableModel model = (DefaultTableModel) tblUpcomingEvents.getModel();
        model.setRowCount(0);
        patient cp = patientset.getHistory().get(index);
//        appointment ca = appointmentlist.getHistory().get(index);
        
        for (appointment ca : appointmentlist.getHistory()){
            if (ca.getPatientName().equals(cp.getPerson().getName())) {
                Object[] row = new Object[4];
                row[0] = ca;
                row[1] = ca.getDoctorName();
                row[2] = ca.getHospital();
                row[3] = ca.getCommunity();
                model.addRow(row); 
            }
        }
    }

    private void populatedoctorTable() {
        DefaultTableModel model = (DefaultTableModel) tblAppointments.getModel();
        model.setRowCount(0);
        
        for (doctor cd : doctorset.getHistory()){
            Object[] row = new Object[3];
            row[0] = cd.getPerson().getName();
            row[1] = cd.getHospital().getHospitalName();
            for (hospital ch : hospitallist.getHistory()){
                if ((ch.getHospitalName()).equals(cd.getHospital().getHospitalName())){
                    row[2] = ch.getCommunity().getName();
                    }
                    }
            model.addRow(row); 
//            }
        }
    }
}
