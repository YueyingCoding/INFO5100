/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Action;
import model.ActionHistory;
import model.VitalSigns;
import model.admin;
import model.adminset;
import model.appointmentlist;
import model.city;
import model.citylist;
import model.community;
import model.communityadminset;
import model.doctor;
import model.doctorset;
import model.encounter;
import model.encounterhistory;
import model.hospital;
import model.hospitaladminset;
import model.hospitallist;
import model.house;
import model.patient;
import model.patientset;
import model.person;
import model.personset;

/**
 *
 * @author chengzhishi
 */
public class HospitalAdminLoginPanel extends javax.swing.JPanel {

    /**
     * Creates new form SystemAdminLoginPanel
     */
    adminset systemadminset;
    communityadminset communityadminset;
    hospitaladminset hospitaladminset;
    appointmentlist appointmentlist;
    doctorset doctorset;
    encounterhistory encounterhistory;
    hospitallist hospitallist;
    patientset patientset;
    personset personset;
    ActionHistory actionhistory;
    community community;
    city city;
    citylist citylist;
    public int index;
    public HospitalAdminLoginPanel(adminset systemadminset, communityadminset communityadminset, 
            hospitaladminset hospitaladminset, appointmentlist appointmentlist, doctorset doctorset,
            encounterhistory encounterhistory, hospitallist hospitallist, patientset patientset, 
            personset personset, ActionHistory actionhistory, community community, city city, citylist citylist) {
        initComponents();
        this.systemadminset = systemadminset;
        this.communityadminset = communityadminset;
        this.hospitaladminset = hospitaladminset;
        this.appointmentlist = appointmentlist;
        this.doctorset = doctorset;
        this.encounterhistory = encounterhistory;
        this.hospitallist = hospitallist;
        this.patientset = patientset;
        this.personset = personset;
        this.actionhistory = actionhistory;
        this.community = community;
        this.city = city;
        this.citylist = citylist;
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
//        Date dl = new Date(11,11,2000);
//        admin ei = set.addNewAdmin();
//        ei.setUsername("ABC");
//        ei.setPassword("123");
//        ei.setPhoneNum("123456789");
//        ei.setEmailAdd("sjwkeu@slk.com");
//        ei.setEmployeeID(1);
//        ei.setGender("Male");
//        ei.setName("ABC");
//        ei.setDOB(dl);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        HospitalAdminLoginJPanel = new javax.swing.JPanel();
        lblAdminLogin = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        lblPassword = new javax.swing.JLabel();
        txtUsername = new javax.swing.JTextField();
        pwdPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lblNewUser = new javax.swing.JLabel();
        btnCreateAccount = new javax.swing.JButton();
        HospitalAdminCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount = new javax.swing.JLabel();
        lblCreatePassword = new javax.swing.JLabel();
        lblCreateUsername = new javax.swing.JLabel();
        txtCreateUsername = new javax.swing.JTextField();
        txtCreatePassword = new javax.swing.JPasswordField();
        lblName = new javax.swing.JLabel();
        lblAdminInfo = new javax.swing.JLabel();
        lblDOB = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblPhoneNum = new javax.swing.JLabel();
        txtPhoneNum = new javax.swing.JTextField();
        lblEmailAdd = new javax.swing.JLabel();
        txtEmailAdd = new javax.swing.JTextField();
        lblGender = new javax.swing.JLabel();
        cmbGender = new javax.swing.JComboBox<>();
        lblEmployeeID = new javax.swing.JLabel();
        txtEmployeeID = new javax.swing.JTextField();
        btnCreate = new javax.swing.JButton();
        txtDOB = new javax.swing.JFormattedTextField();
        lblDepartment = new javax.swing.JLabel();
        txtDepartment = new javax.swing.JTextField();
        lblLevel = new javax.swing.JLabel();
        txtLevel = new javax.swing.JTextField();
        HospitalAdminWorkAreaJPanel = new javax.swing.JPanel();
        btnProfile = new javax.swing.JButton();
        lblManageEncounter = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblEncounters = new javax.swing.JTable();
        btnViewEncounter = new javax.swing.JButton();
        btnAddEncounter = new javax.swing.JButton();
        btnDeleteEncounter = new javax.swing.JButton();
        lblCreateNew1 = new javax.swing.JLabel();
        btnView = new javax.swing.JButton();
        btnCreateNew = new javax.swing.JButton();
        cmbUser = new javax.swing.JComboBox<>();
        ViewEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail = new javax.swing.JLabel();
        lblPatientName = new javax.swing.JLabel();
        lblDoctorName = new javax.swing.JLabel();
        txtDoctorName = new javax.swing.JTextField();
        lblEncounterDate = new javax.swing.JLabel();
        lblDiagnosis = new javax.swing.JLabel();
        txtDiagnosis = new javax.swing.JTextField();
        lblBloodPressure = new javax.swing.JLabel();
        txtBloodPressure = new javax.swing.JTextField();
        lblHeartRate = new javax.swing.JLabel();
        txtHeartRate = new javax.swing.JTextField();
        btnUpdate1 = new javax.swing.JButton();
        txtEncounterDate = new javax.swing.JFormattedTextField();
        txtTemperature = new javax.swing.JTextField();
        lblTemperature = new javax.swing.JLabel();
        btnEdit1 = new javax.swing.JButton();
        btnBack2 = new javax.swing.JButton();
        txtPatientName = new javax.swing.JTextField();
        lblNotes = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        txtNotes = new javax.swing.JTextArea();
        AddEncounterJPanel = new javax.swing.JPanel();
        lblEncounterDetail1 = new javax.swing.JLabel();
        lblPatientName1 = new javax.swing.JLabel();
        lblDoctorName1 = new javax.swing.JLabel();
        txtDoctorName1 = new javax.swing.JTextField();
        lblEncounterDate1 = new javax.swing.JLabel();
        lblDiagnosis1 = new javax.swing.JLabel();
        txtDiagnosis1 = new javax.swing.JTextField();
        lblBloodPressure1 = new javax.swing.JLabel();
        txtBloodPressure1 = new javax.swing.JTextField();
        lblHeartRate1 = new javax.swing.JLabel();
        txtHeartRate1 = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        txtEncounterDate1 = new javax.swing.JFormattedTextField();
        txtTemperature1 = new javax.swing.JTextField();
        lblTemperature1 = new javax.swing.JLabel();
        btnBack3 = new javax.swing.JButton();
        txtPatientName1 = new javax.swing.JTextField();
        lblNotes1 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtNotes1 = new javax.swing.JTextArea();
        DoctorCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount4 = new javax.swing.JLabel();
        lblCreatePassword4 = new javax.swing.JLabel();
        lblCreateUsername4 = new javax.swing.JLabel();
        txtCreateUsername4 = new javax.swing.JTextField();
        txtCreatePassword4 = new javax.swing.JPasswordField();
        lblName5 = new javax.swing.JLabel();
        lblDoctorInfo = new javax.swing.JLabel();
        lblDOB5 = new javax.swing.JLabel();
        txtName5 = new javax.swing.JTextField();
        lblPhoneNum5 = new javax.swing.JLabel();
        txtPhoneNum5 = new javax.swing.JTextField();
        lblEmailAdd5 = new javax.swing.JLabel();
        txtEmailAdd5 = new javax.swing.JTextField();
        lblGender5 = new javax.swing.JLabel();
        cmbGender5 = new javax.swing.JComboBox<>();
        lblEmployeeID5 = new javax.swing.JLabel();
        txtEmployeeID5 = new javax.swing.JTextField();
        btnCreate4 = new javax.swing.JButton();
        txtDOB5 = new javax.swing.JFormattedTextField();
        txtHospital = new javax.swing.JTextField();
        lblHospital = new javax.swing.JLabel();
        lblMajor = new javax.swing.JLabel();
        txtMajor = new javax.swing.JTextField();
        btnBacktoWorkArea3 = new javax.swing.JButton();
        PatientCreateJPanel = new javax.swing.JPanel();
        lblCreateAccount5 = new javax.swing.JLabel();
        lblCreatePassword5 = new javax.swing.JLabel();
        lblCreateUsername5 = new javax.swing.JLabel();
        txtCreateUsername5 = new javax.swing.JTextField();
        txtCreatePassword5 = new javax.swing.JPasswordField();
        lblName4 = new javax.swing.JLabel();
        lblAdminInfo4 = new javax.swing.JLabel();
        lblDOB4 = new javax.swing.JLabel();
        txtName4 = new javax.swing.JTextField();
        lblPhoneNum4 = new javax.swing.JLabel();
        txtPhoneNum4 = new javax.swing.JTextField();
        lblEmailAdd4 = new javax.swing.JLabel();
        txtEmailAdd4 = new javax.swing.JTextField();
        lblGender4 = new javax.swing.JLabel();
        cmbGender4 = new javax.swing.JComboBox<>();
        lblHomeAdd4 = new javax.swing.JLabel();
        txtHomeAdd4 = new javax.swing.JTextField();
        btnCreate5 = new javax.swing.JButton();
        txtDOB4 = new javax.swing.JFormattedTextField();
        lblCity4 = new javax.swing.JLabel();
        txtCity4 = new javax.swing.JTextField();
        lblCommunity4 = new javax.swing.JLabel();
        txtCommunity4 = new javax.swing.JTextField();
        lblPostalCode4 = new javax.swing.JLabel();
        txtPostalCode4 = new javax.swing.JTextField();
        cbInsurance = new javax.swing.JCheckBox();
        btnBacktoWorkArea4 = new javax.swing.JButton();
        ViewDoctorJPanel = new javax.swing.JPanel();
        lblManageEncounter3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblDoctors = new javax.swing.JTable();
        btnDeleteEncounter3 = new javax.swing.JButton();
        btnViewEncounter3 = new javax.swing.JButton();
        btnBack9 = new javax.swing.JButton();
        ViewPatientJPanel = new javax.swing.JPanel();
        lblManageEncounter4 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblPatients = new javax.swing.JTable();
        btnDeleteEncounter4 = new javax.swing.JButton();
        btnViewEncounter4 = new javax.swing.JButton();
        btnBack11 = new javax.swing.JButton();
        DoctorProfileJPanel = new javax.swing.JPanel();
        lblCreateAccount7 = new javax.swing.JLabel();
        lblCreatePassword7 = new javax.swing.JLabel();
        lblCreateUsername7 = new javax.swing.JLabel();
        txtShowUsername5 = new javax.swing.JTextField();
        txtShowPassword5 = new javax.swing.JPasswordField();
        lblName8 = new javax.swing.JLabel();
        lblDOB8 = new javax.swing.JLabel();
        txtName8 = new javax.swing.JTextField();
        lblPhoneNum8 = new javax.swing.JLabel();
        txtPhoneNum8 = new javax.swing.JTextField();
        lblEmailAdd8 = new javax.swing.JLabel();
        txtEmailAdd8 = new javax.swing.JTextField();
        lblGender8 = new javax.swing.JLabel();
        cmbGender8 = new javax.swing.JComboBox<>();
        lblEmployeeID7 = new javax.swing.JLabel();
        txtEmployeeID7 = new javax.swing.JTextField();
        btnEditCommunityadmin2 = new javax.swing.JButton();
        txtDOB8 = new javax.swing.JFormattedTextField();
        lblHospital6 = new javax.swing.JLabel();
        txtHospital6 = new javax.swing.JTextField();
        lblMajor6 = new javax.swing.JLabel();
        txtMajor6 = new javax.swing.JTextField();
        btnCommunityAdminUpdate2 = new javax.swing.JButton();
        btnBack10 = new javax.swing.JButton();
        PatientProfileJPanel = new javax.swing.JPanel();
        lblCreateAccount8 = new javax.swing.JLabel();
        lblCreatePassword8 = new javax.swing.JLabel();
        lblCreateUsername8 = new javax.swing.JLabel();
        txtShowUsername6 = new javax.swing.JTextField();
        txtShowPassword6 = new javax.swing.JPasswordField();
        lblName9 = new javax.swing.JLabel();
        lblDOB9 = new javax.swing.JLabel();
        txtName9 = new javax.swing.JTextField();
        lblPhoneNum9 = new javax.swing.JLabel();
        txtPhoneNum9 = new javax.swing.JTextField();
        lblEmailAdd9 = new javax.swing.JLabel();
        txtEmailAdd9 = new javax.swing.JTextField();
        lblGender9 = new javax.swing.JLabel();
        cmbGender9 = new javax.swing.JComboBox<>();
        lblHomeAdd5 = new javax.swing.JLabel();
        txtHomeAdd5 = new javax.swing.JTextField();
        btnUpdate5 = new javax.swing.JButton();
        txtDOB9 = new javax.swing.JFormattedTextField();
        lblCity5 = new javax.swing.JLabel();
        txtCity5 = new javax.swing.JTextField();
        lblCommunity5 = new javax.swing.JLabel();
        txtCommunity5 = new javax.swing.JTextField();
        lblPostalCode5 = new javax.swing.JLabel();
        txtPostalCode5 = new javax.swing.JTextField();
        cbInsurance1 = new javax.swing.JCheckBox();
        btnBacktoWorkArea5 = new javax.swing.JButton();
        btnEdit5 = new javax.swing.JButton();
        HospitalAdminProfileJPanel = new javax.swing.JPanel();
        lblProfile = new javax.swing.JLabel();
        lblShowPassword = new javax.swing.JLabel();
        lblShowUsername = new javax.swing.JLabel();
        txtShowUsername = new javax.swing.JTextField();
        txtShowPassword = new javax.swing.JPasswordField();
        lblName2 = new javax.swing.JLabel();
        lblDOB2 = new javax.swing.JLabel();
        txtName2 = new javax.swing.JTextField();
        lblPhoneNum2 = new javax.swing.JLabel();
        txtPhoneNum2 = new javax.swing.JTextField();
        lblEmailAdd2 = new javax.swing.JLabel();
        txtEmailAdd2 = new javax.swing.JTextField();
        lblGender2 = new javax.swing.JLabel();
        cmbGender2 = new javax.swing.JComboBox<>();
        lblEmployeeID2 = new javax.swing.JLabel();
        txtEmployeeID2 = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        txtDOB2 = new javax.swing.JFormattedTextField();
        lblDepartment2 = new javax.swing.JLabel();
        txtDepartment2 = new javax.swing.JTextField();
        lblLevel2 = new javax.swing.JLabel();
        txtLevel2 = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(800, 600));

        jLayeredPane1.setPreferredSize(new java.awt.Dimension(800, 600));
        jLayeredPane1.setLayout(new java.awt.CardLayout());

        HospitalAdminLoginJPanel.setBackground(new java.awt.Color(255, 153, 255));

        lblAdminLogin.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminLogin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminLogin.setText("Hospital Admin Login");

        lblUsername.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblUsername.setText("Username:");

        lblPassword.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblPassword.setText("Password:");

        pwdPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pwdPasswordActionPerformed(evt);
            }
        });

        btnLogin.setText("Log in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lblNewUser.setFont(new java.awt.Font("Klee", 1, 18)); // NOI18N
        lblNewUser.setText("New User?");

        btnCreateAccount.setText("Create Account");
        btnCreateAccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateAccountActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HospitalAdminLoginJPanelLayout = new javax.swing.GroupLayout(HospitalAdminLoginJPanel);
        HospitalAdminLoginJPanel.setLayout(HospitalAdminLoginJPanelLayout);
        HospitalAdminLoginJPanelLayout.setHorizontalGroup(
            HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblAdminLogin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(HospitalAdminLoginJPanelLayout.createSequentialGroup()
                .addGap(227, 227, 227)
                .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnLogin)
                    .addGroup(HospitalAdminLoginJPanelLayout.createSequentialGroup()
                        .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblUsername)
                            .addComponent(lblPassword)
                            .addComponent(lblNewUser))
                        .addGap(18, 18, 18)
                        .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtUsername)
                                .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnCreateAccount, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        HospitalAdminLoginJPanelLayout.setVerticalGroup(
            HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminLoginJPanelLayout.createSequentialGroup()
                .addGap(106, 106, 106)
                .addComponent(lblAdminLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(txtUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPassword)
                    .addComponent(pwdPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addComponent(btnLogin)
                .addGap(34, 34, 34)
                .addGroup(HospitalAdminLoginJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNewUser)
                    .addComponent(btnCreateAccount))
                .addContainerGap(175, Short.MAX_VALUE))
        );

        jLayeredPane1.add(HospitalAdminLoginJPanel, "card2");

        HospitalAdminCreateJPanel.setBackground(new java.awt.Color(255, 153, 255));
        HospitalAdminCreateJPanel.setPreferredSize(new java.awt.Dimension(1000, 800));
        HospitalAdminCreateJPanel.setRequestFocusEnabled(false);

        lblCreateAccount.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount.setText("Create an Admin Account");
        lblCreateAccount.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCreatePassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword.setText("Password:");

        lblCreateUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername.setText("Username:");

        txtCreateUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsernameActionPerformed(evt);
            }
        });

        lblName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName.setText("Name:");

        lblAdminInfo.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminInfo.setText("New Admin Info");

        lblDOB.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB.setText("Date of Birth:");

        lblPhoneNum.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum.setText("Phone Number:");

        lblEmailAdd.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd.setText("Email Address:");

        lblGender.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender.setText("Gender:");

        cmbGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGenderActionPerformed(evt);
            }
        });

        lblEmployeeID.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID.setText("Employee ID:");

        txtEmployeeID.setText("-1");

        btnCreate.setText("Create Account");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });

        txtDOB.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOBActionPerformed(evt);
            }
        });

        lblDepartment.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDepartment.setText("Department:");

        lblLevel.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblLevel.setText("Level:");

        txtLevel.setText("-1");

        javax.swing.GroupLayout HospitalAdminCreateJPanelLayout = new javax.swing.GroupLayout(HospitalAdminCreateJPanel);
        HospitalAdminCreateJPanel.setLayout(HospitalAdminCreateJPanelLayout);
        HospitalAdminCreateJPanelLayout.setHorizontalGroup(
            HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblAdminInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                        .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnCreate)
                        .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                            .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                                    .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblGender))
                                    .addGap(18, 18, 18)
                                    .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(87, 87, 87)
                            .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDOB))))
                        .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                            .addComponent(lblDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        HospitalAdminCreateJPanelLayout.setVerticalGroup(
            HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblAdminInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender)
                    .addComponent(cmbGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(HospitalAdminCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartment, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLevel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(btnCreate)
                .addGap(35, 35, 35))
        );

        jLayeredPane1.add(HospitalAdminCreateJPanel, "card3");

        HospitalAdminWorkAreaJPanel.setBackground(new java.awt.Color(255, 153, 255));
        HospitalAdminWorkAreaJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        btnProfile.setText("Profile");
        btnProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProfileActionPerformed(evt);
            }
        });

        lblManageEncounter.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblManageEncounter.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageEncounter.setText("Manage Encounters");

        tblEncounters.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Date", "Doctor", "Patient", "Diagnosis"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblEncounters);

        btnViewEncounter.setText("View");
        btnViewEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncounterActionPerformed(evt);
            }
        });

        btnAddEncounter.setText("Add");
        btnAddEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddEncounterActionPerformed(evt);
            }
        });

        btnDeleteEncounter.setText("Delete");
        btnDeleteEncounter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncounterActionPerformed(evt);
            }
        });

        lblCreateNew1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateNew1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateNew1.setText("Manage Users");

        btnView.setText("View");
        btnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewActionPerformed(evt);
            }
        });

        btnCreateNew.setText("Create");
        btnCreateNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateNewActionPerformed(evt);
            }
        });

        cmbUser.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        cmbUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Doctor", "Patient" }));
        cmbUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HospitalAdminWorkAreaJPanelLayout = new javax.swing.GroupLayout(HospitalAdminWorkAreaJPanel);
        HospitalAdminWorkAreaJPanel.setLayout(HospitalAdminWorkAreaJPanelLayout);
        HospitalAdminWorkAreaJPanelLayout.setHorizontalGroup(
            HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnProfile)
                .addGap(31, 31, 31))
            .addGroup(HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManageEncounter, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                                .addComponent(btnViewEncounter)
                                .addGap(18, 18, 18)
                                .addComponent(btnAddEncounter)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteEncounter))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                        .addGap(185, 185, 185)
                        .addComponent(cmbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(100, 100, 100)
                        .addComponent(btnCreateNew)
                        .addGap(18, 18, 18)
                        .addComponent(btnView))
                    .addComponent(lblCreateNew1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        HospitalAdminWorkAreaJPanelLayout.setVerticalGroup(
            HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminWorkAreaJPanelLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(btnProfile)
                .addGap(30, 30, 30)
                .addComponent(lblCreateNew1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCreateNew)
                    .addComponent(btnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(lblManageEncounter)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HospitalAdminWorkAreaJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteEncounter)
                    .addComponent(btnAddEncounter)
                    .addComponent(btnViewEncounter))
                .addGap(33, 33, 33))
        );

        jLayeredPane1.add(HospitalAdminWorkAreaJPanel, "card4");

        ViewEncounterJPanel.setBackground(new java.awt.Color(255, 153, 255));
        ViewEncounterJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        lblEncounterDetail.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail.setText("Encounter Detail");

        lblPatientName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName.setText("Patient:");

        lblDoctorName.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName.setText("Doctor:");

        txtDoctorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorNameActionPerformed(evt);
            }
        });

        lblEncounterDate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate.setText("Encounter Date:");

        lblDiagnosis.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis.setText("Diagnosis:");

        lblBloodPressure.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure.setText("Blood Pressure:");

        lblHeartRate.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate.setText("Heart Rate:");

        btnUpdate1.setText("Update");
        btnUpdate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate1ActionPerformed(evt);
            }
        });

        txtEncounterDate.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtEncounterDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDateActionPerformed(evt);
            }
        });

        lblTemperature.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature.setText("Temperature:");

        btnEdit1.setText("Edit");
        btnEdit1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit1ActionPerformed(evt);
            }
        });

        btnBack2.setText("Back");
        btnBack2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack2ActionPerformed(evt);
            }
        });

        txtPatientName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientNameActionPerformed(evt);
            }
        });

        lblNotes.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes.setText("Notes:");

        txtNotes.setColumns(20);
        txtNotes.setRows(5);
        jScrollPane6.setViewportView(txtNotes);

        javax.swing.GroupLayout ViewEncounterJPanelLayout = new javax.swing.GroupLayout(ViewEncounterJPanel);
        ViewEncounterJPanel.setLayout(ViewEncounterJPanelLayout);
        ViewEncounterJPanelLayout.setHorizontalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblNotes)
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewEncounterJPanelLayout.createSequentialGroup()
                            .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtDoctorName))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewEncounterJPanelLayout.createSequentialGroup()
                            .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, ViewEncounterJPanelLayout.createSequentialGroup()
                            .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtEncounterDate)))
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(45, 45, 45)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit1)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate1)
                        .addGap(18, 18, 18)
                        .addComponent(btnBack2))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ViewEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        ViewEncounterJPanelLayout.setVerticalGroup(
            ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDoctorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEncounterDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBloodPressure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTemperature, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNotes)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(161, 161, 161))
                    .addGroup(ViewEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPatientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDiagnosis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(50, 50, 50)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtHeartRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(298, 298, 298)
                        .addGroup(ViewEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnBack2)
                            .addComponent(btnEdit1)
                            .addComponent(btnUpdate1))
                        .addContainerGap(39, Short.MAX_VALUE))))
        );

        jLayeredPane1.add(ViewEncounterJPanel, "card7");

        AddEncounterJPanel.setBackground(new java.awt.Color(255, 153, 255));

        lblEncounterDetail1.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblEncounterDetail1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblEncounterDetail1.setText("Encounter Detail");

        lblPatientName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPatientName1.setText("Patient:");

        lblDoctorName1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDoctorName1.setText("Doctor:");

        txtDoctorName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDoctorName1ActionPerformed(evt);
            }
        });

        lblEncounterDate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEncounterDate1.setText("Encounter Date:");

        lblDiagnosis1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDiagnosis1.setText("Diagnosis:");

        lblBloodPressure1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblBloodPressure1.setText("Blood Pressure:");

        lblHeartRate1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHeartRate1.setText("Heart Rate:");

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        txtEncounterDate1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtEncounterDate1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEncounterDate1ActionPerformed(evt);
            }
        });

        lblTemperature1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblTemperature1.setText("Temperature:");

        btnBack3.setText("Back");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        txtPatientName1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPatientName1ActionPerformed(evt);
            }
        });

        lblNotes1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblNotes1.setText("Notes:");

        txtNotes1.setColumns(20);
        txtNotes1.setRows(5);
        jScrollPane7.setViewportView(txtNotes1);

        javax.swing.GroupLayout AddEncounterJPanelLayout = new javax.swing.GroupLayout(AddEncounterJPanel);
        AddEncounterJPanel.setLayout(AddEncounterJPanelLayout);
        AddEncounterJPanelLayout.setHorizontalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNotes1))
                        .addGap(18, 18, 18)
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                        .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtEncounterDate1)))
                                .addGap(85, 85, 85)
                                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AddEncounterJPanelLayout.createSequentialGroup()
                                .addComponent(btnSave)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack3)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        AddEncounterJPanelLayout.setVerticalGroup(
            AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddEncounterJPanelLayout.createSequentialGroup()
                .addComponent(lblEncounterDetail1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDoctorName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPatientName1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDiagnosis1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEncounterDate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBloodPressure1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHeartRate1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTemperature1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNotes1)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(66, 66, 66)
                .addGroup(AddEncounterJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack3)
                    .addComponent(btnSave))
                .addGap(78, 78, 78))
        );

        jLayeredPane1.add(AddEncounterJPanel, "card7");

        DoctorCreateJPanel.setBackground(new java.awt.Color(255, 153, 255));

        lblCreateAccount4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount4.setText("Create a Doctor Account");

        lblCreatePassword4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword4.setText("Password:");

        lblCreateUsername4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername4.setText("Username:");

        txtCreateUsername4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsername4ActionPerformed(evt);
            }
        });

        lblName5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName5.setText("Name:");

        lblDoctorInfo.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblDoctorInfo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblDoctorInfo.setText("New Doctor Info");

        lblDOB5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB5.setText("Date of Birth:");

        lblPhoneNum5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum5.setText("Phone Number:");

        lblEmailAdd5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd5.setText("Email Address:");

        lblGender5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender5.setText("Gender:");

        cmbGender5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblEmployeeID5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID5.setText("Employee ID:");

        txtEmployeeID5.setText("-1");

        btnCreate4.setText("Create Account");
        btnCreate4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate4ActionPerformed(evt);
            }
        });

        txtDOB5.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB5ActionPerformed(evt);
            }
        });

        lblHospital.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital.setText("Hospital:");

        lblMajor.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblMajor.setText("Major:");

        btnBacktoWorkArea3.setText("Back");
        btnBacktoWorkArea3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktoWorkArea3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorCreateJPanelLayout = new javax.swing.GroupLayout(DoctorCreateJPanel);
        DoctorCreateJPanel.setLayout(DoctorCreateJPanelLayout);
        DoctorCreateJPanelLayout.setHorizontalGroup(
            DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount4, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(lblDoctorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                        .addComponent(lblCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                        .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblName5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender5))
                                .addGap(18, 18, 18)
                                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGender5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmailAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmployeeID5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmployeeID5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblDOB5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDOB5))))
                    .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                            .addComponent(btnCreate4)
                            .addGap(18, 18, 18)
                            .addComponent(btnBacktoWorkArea3))
                        .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                            .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        DoctorCreateJPanelLayout.setVerticalGroup(
            DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblDoctorInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender5)
                    .addComponent(cmbGender5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMajor, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMajor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(DoctorCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate4)
                    .addComponent(btnBacktoWorkArea3))
                .addGap(70, 70, 70))
        );

        jLayeredPane1.add(DoctorCreateJPanel, "card3");

        PatientCreateJPanel.setBackground(new java.awt.Color(255, 153, 255));

        lblCreateAccount5.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount5.setText("Create a Patient Account");

        lblCreatePassword5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword5.setText("Password:");

        lblCreateUsername5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername5.setText("Username:");

        txtCreateUsername5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCreateUsername5ActionPerformed(evt);
            }
        });

        lblName4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName4.setText("Name:");

        lblAdminInfo4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblAdminInfo4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAdminInfo4.setText("New Patient Info");

        lblDOB4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB4.setText("Date of Birth:");

        lblPhoneNum4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum4.setText("Phone Number:");

        lblEmailAdd4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd4.setText("Email Address:");

        lblGender4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender4.setText("Gender:");

        cmbGender4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblHomeAdd4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd4.setText("Home Address:");

        txtHomeAdd4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHomeAdd4ActionPerformed(evt);
            }
        });

        btnCreate5.setText("Create Account");
        btnCreate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreate5ActionPerformed(evt);
            }
        });

        txtDOB4.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB4ActionPerformed(evt);
            }
        });

        lblCity4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCity4.setText("City:");

        lblCommunity4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunity4.setText("Community:");

        lblPostalCode4.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPostalCode4.setText("Postal Code:");

        cbInsurance.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        cbInsurance.setText("Insurance");

        btnBacktoWorkArea4.setText("Back");
        btnBacktoWorkArea4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktoWorkArea4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientCreateJPanelLayout = new javax.swing.GroupLayout(PatientCreateJPanel);
        PatientCreateJPanel.setLayout(PatientCreateJPanelLayout);
        PatientCreateJPanelLayout.setHorizontalGroup(
            PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(lblAdminInfo4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreateUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblCreatePassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCreatePassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblName4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGender4))
                                        .addGap(18, 18, 18)
                                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbGender4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(87, 87, 87)
                                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDOB4)))))
                        .addContainerGap(148, Short.MAX_VALUE))
                    .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(87, 87, 87)
                        .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(btnCreate5)
                                .addGap(18, 18, 18)
                                .addComponent(btnBacktoWorkArea4))
                            .addComponent(cbInsurance)
                            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                                .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        PatientCreateJPanelLayout.setVerticalGroup(
            PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientCreateJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount5, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreateUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCreatePassword5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(lblAdminInfo4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender4)
                    .addComponent(cmbGender4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunity4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPostalCode4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInsurance))
                .addGap(18, 18, 18)
                .addGroup(PatientCreateJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCreate5)
                    .addComponent(btnBacktoWorkArea4))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jLayeredPane1.add(PatientCreateJPanel, "card5");

        ViewDoctorJPanel.setBackground(new java.awt.Color(255, 153, 255));
        ViewDoctorJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        lblManageEncounter3.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblManageEncounter3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageEncounter3.setText("Manage Doctors");

        tblDoctors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Hospital", "Employee ID", "Major"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblDoctors);

        btnDeleteEncounter3.setText("Delete");
        btnDeleteEncounter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncounter3ActionPerformed(evt);
            }
        });

        btnViewEncounter3.setText("View");
        btnViewEncounter3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncounter3ActionPerformed(evt);
            }
        });

        btnBack9.setText("Back");
        btnBack9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewDoctorJPanelLayout = new javax.swing.GroupLayout(ViewDoctorJPanel);
        ViewDoctorJPanel.setLayout(ViewDoctorJPanelLayout);
        ViewDoctorJPanelLayout.setHorizontalGroup(
            ViewDoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewDoctorJPanelLayout.createSequentialGroup()
                .addGroup(ViewDoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManageEncounter3, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ViewDoctorJPanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(ViewDoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewDoctorJPanelLayout.createSequentialGroup()
                                .addComponent(btnViewEncounter3)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteEncounter3)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack9))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ViewDoctorJPanelLayout.setVerticalGroup(
            ViewDoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewDoctorJPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblManageEncounter3)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewDoctorJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteEncounter3)
                    .addComponent(btnViewEncounter3)
                    .addComponent(btnBack9))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jLayeredPane1.add(ViewDoctorJPanel, "card4");

        ViewPatientJPanel.setBackground(new java.awt.Color(255, 153, 255));
        ViewPatientJPanel.setPreferredSize(new java.awt.Dimension(800, 600));

        lblManageEncounter4.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblManageEncounter4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblManageEncounter4.setText("Manage Patients");

        tblPatients.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Community", "Gender", "Insurance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tblPatients);

        btnDeleteEncounter4.setText("Delete");
        btnDeleteEncounter4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteEncounter4ActionPerformed(evt);
            }
        });

        btnViewEncounter4.setText("View");
        btnViewEncounter4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewEncounter4ActionPerformed(evt);
            }
        });

        btnBack11.setText("Back");
        btnBack11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack11ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ViewPatientJPanelLayout = new javax.swing.GroupLayout(ViewPatientJPanel);
        ViewPatientJPanel.setLayout(ViewPatientJPanelLayout);
        ViewPatientJPanelLayout.setHorizontalGroup(
            ViewPatientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewPatientJPanelLayout.createSequentialGroup()
                .addGroup(ViewPatientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblManageEncounter4, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(ViewPatientJPanelLayout.createSequentialGroup()
                        .addGap(79, 79, 79)
                        .addGroup(ViewPatientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ViewPatientJPanelLayout.createSequentialGroup()
                                .addComponent(btnViewEncounter4)
                                .addGap(18, 18, 18)
                                .addComponent(btnDeleteEncounter4)
                                .addGap(18, 18, 18)
                                .addComponent(btnBack11))
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        ViewPatientJPanelLayout.setVerticalGroup(
            ViewPatientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ViewPatientJPanelLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(lblManageEncounter4)
                .addGap(49, 49, 49)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(ViewPatientJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDeleteEncounter4)
                    .addComponent(btnViewEncounter4)
                    .addComponent(btnBack11))
                .addContainerGap(160, Short.MAX_VALUE))
        );

        jLayeredPane1.add(ViewPatientJPanel, "card4");

        DoctorProfileJPanel.setBackground(new java.awt.Color(255, 153, 255));
        DoctorProfileJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        DoctorProfileJPanel.setRequestFocusEnabled(false);

        lblCreateAccount7.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount7.setText("Doctor Profile");
        lblCreateAccount7.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblCreatePassword7.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword7.setText("Password:");

        lblCreateUsername7.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername7.setText("Username:");

        txtShowUsername5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsername5ActionPerformed(evt);
            }
        });

        lblName8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName8.setText("Name:");

        lblDOB8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB8.setText("Date of Birth:");

        lblPhoneNum8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum8.setText("Phone Number:");

        lblEmailAdd8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd8.setText("Email Address:");

        lblGender8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender8.setText("Gender:");

        cmbGender8.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGender8ActionPerformed(evt);
            }
        });

        lblEmployeeID7.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID7.setText("Employee ID:");

        txtEmployeeID7.setText("-1");

        btnEditCommunityadmin2.setText("Edit");
        btnEditCommunityadmin2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditCommunityadmin2ActionPerformed(evt);
            }
        });

        txtDOB8.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB8ActionPerformed(evt);
            }
        });

        lblHospital6.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHospital6.setText("Hospital:");

        lblMajor6.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblMajor6.setText("Major:");

        btnCommunityAdminUpdate2.setText("Update");
        btnCommunityAdminUpdate2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCommunityAdminUpdate2ActionPerformed(evt);
            }
        });

        btnBack10.setText("Back");
        btnBack10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout DoctorProfileJPanelLayout = new javax.swing.GroupLayout(DoctorProfileJPanel);
        DoctorProfileJPanel.setLayout(DoctorProfileJPanelLayout);
        DoctorProfileJPanelLayout.setHorizontalGroup(
            DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblCreateAccount7, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, DoctorProfileJPanelLayout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEditCommunityadmin2)
                    .addGap(18, 18, 18)
                    .addComponent(btnCommunityAdminUpdate2)
                    .addGap(18, 18, 18)
                    .addComponent(btnBack10))
                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                    .addGap(75, 75, 75)
                    .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                            .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblName8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtName8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                    .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(lblPhoneNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblGender8))
                                    .addGap(18, 18, 18)
                                    .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbGender8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(txtPhoneNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGap(87, 87, 87)
                            .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmailAdd8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmailAdd8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblEmployeeID7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtEmployeeID7, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(lblDOB8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(txtDOB8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                            .addComponent(lblHospital6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtHospital6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblMajor6, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtMajor6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                            .addComponent(lblCreateUsername7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtShowUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(87, 87, 87)
                            .addComponent(lblCreatePassword7, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(txtShowPassword5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        DoctorProfileJPanelLayout.setVerticalGroup(
            DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(DoctorProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount7, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender8)
                    .addComponent(cmbGender8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblHospital6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHospital6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMajor6, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMajor6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addGroup(DoctorProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditCommunityadmin2)
                    .addComponent(btnCommunityAdminUpdate2)
                    .addComponent(btnBack10))
                .addContainerGap(148, Short.MAX_VALUE))
        );

        jLayeredPane1.add(DoctorProfileJPanel, "card3");

        PatientProfileJPanel.setBackground(new java.awt.Color(255, 153, 255));

        lblCreateAccount8.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblCreateAccount8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCreateAccount8.setText("Patient Profile");

        lblCreatePassword8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreatePassword8.setText("Password:");

        lblCreateUsername8.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCreateUsername8.setText("Username:");

        txtShowUsername6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsername6ActionPerformed(evt);
            }
        });

        lblName9.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName9.setText("Name:");

        lblDOB9.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB9.setText("Date of Birth:");

        lblPhoneNum9.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum9.setText("Phone Number:");

        lblEmailAdd9.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd9.setText("Email Address:");

        lblGender9.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender9.setText("Gender:");

        cmbGender9.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));

        lblHomeAdd5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblHomeAdd5.setText("Home Address:");

        txtHomeAdd5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtHomeAdd5ActionPerformed(evt);
            }
        });

        btnUpdate5.setText("Update");
        btnUpdate5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdate5ActionPerformed(evt);
            }
        });

        txtDOB9.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB9ActionPerformed(evt);
            }
        });

        lblCity5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCity5.setText("City:");

        lblCommunity5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblCommunity5.setText("Community:");

        lblPostalCode5.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPostalCode5.setText("Postal Code:");

        cbInsurance1.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        cbInsurance1.setText("Insurance");

        btnBacktoWorkArea5.setText("Back");
        btnBacktoWorkArea5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBacktoWorkArea5ActionPerformed(evt);
            }
        });

        btnEdit5.setText("Edit");
        btnEdit5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEdit5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PatientProfileJPanelLayout = new javax.swing.GroupLayout(PatientProfileJPanel);
        PatientProfileJPanel.setLayout(PatientProfileJPanelLayout);
        PatientProfileJPanelLayout.setHorizontalGroup(
            PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblCreateAccount8, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblName9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtName9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                        .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblPhoneNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblGender9))
                                        .addGap(18, 18, 18)
                                        .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbGender9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtPhoneNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(87, 87, 87)
                                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblEmailAdd9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtEmailAdd9, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblHomeAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtHomeAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                        .addComponent(lblDOB9, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtDOB9))))
                            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblCreateUsername8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtShowUsername6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(87, 87, 87)
                                .addComponent(lblCreatePassword8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtShowPassword6, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                    .addComponent(btnEdit5)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnUpdate5)
                                    .addGap(18, 18, 18)
                                    .addComponent(btnBacktoWorkArea5))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, PatientProfileJPanelLayout.createSequentialGroup()
                                    .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PatientProfileJPanelLayout.createSequentialGroup()
                                            .addComponent(lblCity5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtCity5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                            .addComponent(lblPostalCode5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtPostalCode5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGap(87, 87, 87)
                                    .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cbInsurance1)
                                        .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                                            .addComponent(lblCommunity5, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(txtCommunity5, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PatientProfileJPanelLayout.setVerticalGroup(
            PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PatientProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblCreateAccount8, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCreatePassword8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateUsername8, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd9, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender9)
                    .addComponent(cmbGender9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblHomeAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtHomeAdd5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCity5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCity5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCommunity5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCommunity5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(46, 46, 46)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPostalCode5, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPostalCode5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbInsurance1))
                .addGap(54, 54, 54)
                .addGroup(PatientProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate5)
                    .addComponent(btnBacktoWorkArea5)
                    .addComponent(btnEdit5))
                .addContainerGap(60, Short.MAX_VALUE))
        );

        jLayeredPane1.add(PatientProfileJPanel, "card5");

        HospitalAdminProfileJPanel.setBackground(new java.awt.Color(255, 153, 255));
        HospitalAdminProfileJPanel.setPreferredSize(new java.awt.Dimension(800, 600));
        HospitalAdminProfileJPanel.setRequestFocusEnabled(false);

        lblProfile.setFont(new java.awt.Font("Klee", 1, 24)); // NOI18N
        lblProfile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblProfile.setText("Hospital Administrator Profile");
        lblProfile.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lblShowPassword.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblShowPassword.setText("Password:");

        lblShowUsername.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblShowUsername.setText("Username:");

        txtShowUsername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowUsernameActionPerformed(evt);
            }
        });

        lblName2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblName2.setText("Name:");

        lblDOB2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDOB2.setText("Date of Birth:");

        lblPhoneNum2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblPhoneNum2.setText("Phone Number:");

        lblEmailAdd2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmailAdd2.setText("Email Address:");

        lblGender2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblGender2.setText("Gender:");

        cmbGender2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "None", "Male", "Female", "Non-Binary", "Prefer Not to Say", " " }));
        cmbGender2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGender2ActionPerformed(evt);
            }
        });

        lblEmployeeID2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblEmployeeID2.setText("Employee ID:");

        txtEmployeeID2.setText("-1");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        txtDOB2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(java.text.DateFormat.getDateInstance(java.text.DateFormat.SHORT))));
        txtDOB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDOB2ActionPerformed(evt);
            }
        });

        lblDepartment2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblDepartment2.setText("Department:");

        lblLevel2.setFont(new java.awt.Font("Klee", 1, 14)); // NOI18N
        lblLevel2.setText("Level:");

        txtLevel2.setText("-1");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HospitalAdminProfileJPanelLayout = new javax.swing.GroupLayout(HospitalAdminProfileJPanel);
        HospitalAdminProfileJPanel.setLayout(HospitalAdminProfileJPanelLayout);
        HospitalAdminProfileJPanelLayout.setHorizontalGroup(
            HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 800, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(200, 200, 200))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, HospitalAdminProfileJPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack)
                    .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                        .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblName2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(lblGender2))
                                .addGap(18, 18, 18)
                                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cmbGender2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(87, 87, 87)
                        .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblEmployeeID2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtEmployeeID2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                                .addComponent(lblDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                        .addComponent(lblDepartment2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtDepartment2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(lblLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addGap(39, 39, 39)
                        .addComponent(btnUpdate)))
                .addGap(338, 338, 338))
        );
        HospitalAdminProfileJPanelLayout.setVerticalGroup(
            HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HospitalAdminProfileJPanelLayout.createSequentialGroup()
                .addComponent(lblProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtShowPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(51, 51, 51)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtName2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDOB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhoneNum2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmailAdd2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblGender2)
                    .addComponent(cmbGender2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblEmployeeID2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmployeeID2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(48, 48, 48)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDepartment2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDepartment2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLevel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(HospitalAdminProfileJPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdate)
                    .addComponent(btnEdit))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 65, Short.MAX_VALUE)
                .addComponent(btnBack)
                .addGap(36, 36, 36))
        );

        jLayeredPane1.add(HospitalAdminProfileJPanel, "card3");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 812, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void pwdPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pwdPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pwdPasswordActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        // TODO add your handling code here:
        String username = txtUsername.getText();
        String password = pwdPassword.getText();
        int flag = 0;
        int i = 0;
        for (admin ei : hospitaladminset.getHistory()){
            if (ei.getUsername().equals(username) & (ei.getPassword().equals(password))){
                flag = 1;
                index = i;
                HospitalAdminLoginJPanel.setVisible(false);
                HospitalAdminCreateJPanel.setVisible(false);
                HospitalAdminProfileJPanel.setVisible(false);
                HospitalAdminWorkAreaJPanel.setVisible(true);
                ViewEncounterJPanel.setVisible(false);
                AddEncounterJPanel.setVisible(false);
                DoctorCreateJPanel.setVisible(false);
                PatientCreateJPanel.setVisible(false);
                ViewDoctorJPanel.setVisible(false);
                ViewPatientJPanel.setVisible(false);
                DoctorProfileJPanel.setVisible(false);
                PatientProfileJPanel.setVisible(false);
                populateEncountersTable();
            }
            else{
                i += 1;
            }
        }
        if(flag == 0){
            JOptionPane.showMessageDialog(this, "Wrong Username or Password.");
        }
        //        admin ei = set.getHistory();
        //        if (ei.getUsername().equals(username) & ei.getPassword().equals(password)){
            //
            //    }

        //        for(admin admin: this.set){
            //            if (admin.getUsername().equals(username) and admin.getPassword().equals(password)){
                //
                //        }
            //        }
        //        txtUsername.getText();

    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnCreateAccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateAccountActionPerformed
        // TODO add your handling code here:
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminCreateJPanel.setVisible(true);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);

    }//GEN-LAST:event_btnCreateAccountActionPerformed

    private void txtCreateUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsernameActionPerformed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID.getText().contains("[a-zA-Z]+")){
            txtEmployeeID.setText("-1");
        }
        if (txtLevel.getText().contains("[a-zA-Z]+")){
            txtLevel.setText("-1");
        }
        
//        Date nonedate = new Date();

//        if (!txtDOB.getValue().equals(nonedate)){
//            Date DOB = (Date)txtDOB.getValue();
//
//        }
        String Username = txtCreateUsername.getText();
        String Password = txtCreatePassword.getText();
        String Name = txtName.getText();
        Date DOB = (Date)txtDOB.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID.getText());
        String Gender = cmbGender.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum.getText();
        String EmailAdd = txtEmailAdd.getText();
        String Department = txtDepartment.getText();
        int Level = Integer.parseInt(txtLevel.getText());
        
        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
        if (!Character.isLetter(c))
            nameflag = 1;
        }
        
        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
        if (!Character.isDigit(c))
            phoneflag = 1;
        }
        
        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");   
            saveflag = 0;
        }
        if (Department.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");   
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Level < 0){
            JOptionPane.showMessageDialog(this, "Invalid Level.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){
        admin ei = hospitaladminset.addNewAdmin();
        person ps = new person();
        ei.setUsername(Username);
        ei.setPassword(Password);
        ps.setPhoneNum(PhoneNum);
        ps.setEmailAdd(EmailAdd);
        ei.setEmployeeID(EmployeeID);
        ei.setDepartment(Department);
        ei.setLevel(Level);
        ps.setGender(Gender);
        ps.setName(Name);
        ps.setDOB((Date)txtDOB.getValue());
        ei.setPerson(ps);
        JOptionPane.showMessageDialog(this, "Admin Account Created.");
        
        txtCreateUsername.setText("");
        txtCreatePassword.setText("");
        txtName.setText("");
        txtDOB.setText("");
        txtEmployeeID.setText("");
        cmbGender.setSelectedIndex(0);
        txtPhoneNum.setText("");
        txtEmailAdd.setText("");
        txtEmployeeID.setText("-1");
        
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(true);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        }
        
        

    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtDOBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOBActionPerformed

    private void cmbGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGenderActionPerformed

    private void btnProfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProfileActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(true);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        
        admin sa = hospitaladminset.getHistory().get(index);
//        
        txtShowUsername.setText(sa.getUsername());
        txtShowUsername.setEditable(false);
//        
        txtShowPassword.setText(sa.getPassword());
        txtShowPassword.setEditable(false);
//        
        txtName2.setText(sa.getPerson().getName());
        txtName2.setEditable(false);
//        
        txtDOB2.setValue(sa.getPerson().getDOB());
        txtDOB2.setEditable(false);
//        
        txtPhoneNum2.setText(sa.getPerson().getPhoneNum());
        txtPhoneNum2.setEditable(false);
//        
        txtEmailAdd2.setText(sa.getPerson().getEmailAdd());
        txtEmailAdd2.setEditable(false);
//        
        cmbGender2.setSelectedItem(sa.getPerson().getGender());
        cmbGender2.setEnabled(false);
//        
        txtEmployeeID2.setText(String.valueOf(sa.getEmployeeID()));
        txtEmployeeID2.setEditable(false);
//        
        txtDepartment2.setText(sa.getDepartment());
        txtDepartment2.setEditable(false);
//        
        txtLevel2.setText(String.valueOf(sa.getLevel()));
        txtLevel2.setEditable(false);
    }//GEN-LAST:event_btnProfileActionPerformed

    private void btnViewEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }

        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(true);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
        

        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

        txtDoctorName.setText(selectedEncounter.getDoctorName());
        txtDoctorName.setEditable(false);

        txtPatientName.setText(selectedEncounter.getPatientName());
        txtPatientName.setEditable(false);

        txtEncounterDate.setValue(selectedEncounter.getEncounterDate());
        txtEncounterDate.setEditable(false);

        txtDiagnosis.setText(selectedEncounter.getDiagnosis());
        txtDiagnosis.setEditable(false);

        txtBloodPressure.setText(String.valueOf(selectedEncounter.getVitalSigns().getBloodPressure()));
        txtBloodPressure.setEditable(false);

        txtHeartRate.setText(String.valueOf(selectedEncounter.getVitalSigns().getHeartRate()));
        txtHeartRate.setEditable(false);

        txtTemperature.setText(String.valueOf(selectedEncounter.getVitalSigns().getTemperature()));
        txtTemperature.setEditable(false);

        txtNotes.setText(selectedEncounter.getNotes());
        txtNotes.setEditable(false);
    }//GEN-LAST:event_btnViewEncounterActionPerformed

    private void btnAddEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddEncounterActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(true);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnAddEncounterActionPerformed

    private void btnDeleteEncounterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncounterActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblEncounters.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
        encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

        encounterhistory.deleteEncounter(selectedEncounter);

        JOptionPane.showMessageDialog(this, "Successfully Deleted.");

        populateEncountersTable();

        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Hospital Administrator");
        ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
        ah.setModification("Delete An Encounter");
    }//GEN-LAST:event_btnDeleteEncounterActionPerformed

    private void btnCreateNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateNewActionPerformed
        // TODO add your handling code here:

        if (cmbUser.getSelectedItem().equals("Doctor")){
            HospitalAdminCreateJPanel.setVisible(false);
            HospitalAdminLoginJPanel.setVisible(false);
            HospitalAdminWorkAreaJPanel.setVisible(false);
            HospitalAdminProfileJPanel.setVisible(false);
            ViewEncounterJPanel.setVisible(false);
            AddEncounterJPanel.setVisible(false);
            DoctorCreateJPanel.setVisible(true);
            PatientCreateJPanel.setVisible(false);
            ViewDoctorJPanel.setVisible(false);
            ViewPatientJPanel.setVisible(false);
            DoctorProfileJPanel.setVisible(false);
            PatientProfileJPanel.setVisible(false);
        }

        if (cmbUser.getSelectedItem().equals("Patient")){
            HospitalAdminCreateJPanel.setVisible(false);
            HospitalAdminLoginJPanel.setVisible(false);
            HospitalAdminWorkAreaJPanel.setVisible(false);
            HospitalAdminProfileJPanel.setVisible(false);
            ViewEncounterJPanel.setVisible(false);
            AddEncounterJPanel.setVisible(false);
            DoctorCreateJPanel.setVisible(false);
            PatientCreateJPanel.setVisible(true);
            ViewDoctorJPanel.setVisible(false);
            ViewPatientJPanel.setVisible(false);
            DoctorProfileJPanel.setVisible(false);
            PatientProfileJPanel.setVisible(false);
        }
    }//GEN-LAST:event_btnCreateNewActionPerformed

    private void cmbUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUserActionPerformed

    private void btnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewActionPerformed
        // TODO add your handling code here:

        if (cmbUser.getSelectedItem().equals("Doctor")){
            HospitalAdminCreateJPanel.setVisible(false);
            HospitalAdminLoginJPanel.setVisible(false);
            HospitalAdminWorkAreaJPanel.setVisible(false);
            HospitalAdminProfileJPanel.setVisible(false);
            ViewEncounterJPanel.setVisible(false);
            AddEncounterJPanel.setVisible(false);
            DoctorCreateJPanel.setVisible(false);
            PatientCreateJPanel.setVisible(false);
            ViewDoctorJPanel.setVisible(true);
            ViewPatientJPanel.setVisible(false);
            DoctorProfileJPanel.setVisible(false);
            PatientProfileJPanel.setVisible(false);
            populateDoctorTable();
        }

        if (cmbUser.getSelectedItem().equals("Patient")){

            HospitalAdminCreateJPanel.setVisible(false);
            HospitalAdminLoginJPanel.setVisible(false);
            HospitalAdminWorkAreaJPanel.setVisible(false);
            HospitalAdminProfileJPanel.setVisible(false);
            ViewEncounterJPanel.setVisible(false);
            AddEncounterJPanel.setVisible(false);
            DoctorCreateJPanel.setVisible(false);
            PatientCreateJPanel.setVisible(false);
            ViewDoctorJPanel.setVisible(false);
            ViewPatientJPanel.setVisible(true);
            DoctorProfileJPanel.setVisible(false);
            PatientProfileJPanel.setVisible(false);
            populatePatientTable();
        }
    }//GEN-LAST:event_btnViewActionPerformed

    private void txtDoctorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorNameActionPerformed

    private void btnUpdate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate1ActionPerformed
        // TODO add your handling code here:
        String DoctorName = txtDoctorName.getText();
        String PatientName = txtPatientName.getText();
        Date EncounterDate = (Date)txtEncounterDate.getValue();
        String Diagnosis = txtDiagnosis.getText();
        int BloodPressure = -1;
        int HeartRate = -1;
        float Temperature = -1;
        if (!txtBloodPressure.getText().equals("")){
            BloodPressure = Integer.parseInt(txtBloodPressure.getText());
        }
        if (!txtHeartRate.getText().equals("")){
            HeartRate = Integer.parseInt(txtHeartRate.getText());
        }

        if (!txtTemperature.getText().equals("")){
            Temperature = Float.parseFloat(txtTemperature.getText());
        }
        String Notes = txtNotes.getText();

        int docnameflag = 0;
        char[] doccharArray = DoctorName.toCharArray();
        for(char c:doccharArray)
        {
            if (!Character.isLetter(c))
            docnameflag = 1;
        }

        int ptnameflag = 0;
        char[] ptcharArray = PatientName.toCharArray();
        for(char c:ptcharArray)
        {
            if (!Character.isLetter(c))
            ptnameflag = 1;
        }

        int saveflag = 1;
        if (DoctorName.equals("") || docnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Doctor Name.");
            saveflag = 0;
        }
        if (PatientName.equals("") || ptnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Patient Name.");
            saveflag = 0;
        }
        if (EncounterDate == null){
            JOptionPane.showMessageDialog(this, "Invalid Encounter Date.");
            saveflag = 0;
        }
        if (Diagnosis.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Diagnosis.");
            saveflag = 0;
        }
        if (txtBloodPressure.getText().equals("") || BloodPressure < 0){
            JOptionPane.showMessageDialog(this, "Invalid Blood Pressure.");
            saveflag = 0;
        }
        if (txtHeartRate.getText().equals("") || HeartRate < 0){
            JOptionPane.showMessageDialog(this, "Invalid Heart Rate.");
            saveflag = 0;
        }
        if (txtTemperature.getText().equals("") || Temperature < 0){
            JOptionPane.showMessageDialog(this, "Invalid Temperature.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            int selectedRowIndex = tblEncounters.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
                return;
            }
            VitalSigns vitalsigns = new VitalSigns();
            DefaultTableModel model = (DefaultTableModel) tblEncounters.getModel();
            encounter selectedEncounter = (encounter) model.getValueAt(selectedRowIndex, 0);

            vitalsigns.setBloodPressure(BloodPressure);
            vitalsigns.setHeartRate(HeartRate);
            vitalsigns.setTemperature(Temperature);
            selectedEncounter.setDoctorName(DoctorName);
            selectedEncounter.setPatientName(PatientName);
            selectedEncounter.setEncounterDate(EncounterDate);
            selectedEncounter.setDiagnosis(Diagnosis);
            selectedEncounter.setNotes(Notes);
            selectedEncounter.setVitalSigns(vitalsigns);

            populateEncountersTable();

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Update Encounter");
            JOptionPane.showMessageDialog(this, "Encounter Detail Updated.");
        }

        //        doctor ei = set.addNewDoctor();
        //        doctor ei = set.getHistory().get(index);
        //        ei.setUsername(Username);
        //        ei.setPassword(Password);
        //        ei.setPhoneNum(PhoneNum);
        //        ei.setEmailAdd(EmailAdd);
        //        ei.setEmployeeID(EmployeeID);
        //        ei.setGender(Gender);
        //        ei.setName(Name);
        //        ei.setDOB((Date)txtDOB.getValue());
        //        JOptionPane.showMessageDialog(this, "Doctor Profile Updated.");
    }//GEN-LAST:event_btnUpdate1ActionPerformed

    private void txtEncounterDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDateActionPerformed

    private void btnEdit1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit1ActionPerformed
        // TODO add your handling code here:
        txtDoctorName.setEditable(true);
        txtPatientName.setEditable(true);
        txtEncounterDate.setEditable(true);
        txtDiagnosis.setEditable(true);
        txtBloodPressure.setEditable(true);
        txtHeartRate.setEditable(true);
        txtTemperature.setEditable(true);
        txtNotes.setEditable(true);
    }//GEN-LAST:event_btnEdit1ActionPerformed

    private void btnBack2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack2ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack2ActionPerformed

    private void txtPatientNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientNameActionPerformed

    private void txtDoctorName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDoctorName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDoctorName1ActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:

        String DoctorName = txtDoctorName1.getText();
        String PatientName = txtPatientName1.getText();
        Date EncounterDate = (Date)txtEncounterDate1.getValue();
        String Diagnosis = txtDiagnosis1.getText();
        int BloodPressure = -1;
        int HeartRate = -1;
        float Temperature = -1;
        if (!txtBloodPressure1.getText().equals("")){
            BloodPressure = Integer.parseInt(txtBloodPressure1.getText());
        }
        if (!txtHeartRate1.getText().equals("")){
            HeartRate = Integer.parseInt(txtHeartRate1.getText());
        }

        if (!txtTemperature1.getText().equals("")){
            Temperature = Float.parseFloat(txtTemperature1.getText());
        }

        String Notes = txtNotes1.getText();

        int docnameflag = 0;
        char[] doccharArray = DoctorName.toCharArray();
        for(char c:doccharArray)
        {
            if (!Character.isLetter(c))
            docnameflag = 1;
        }

        int ptnameflag = 0;
        char[] ptcharArray = PatientName.toCharArray();
        for(char c:ptcharArray)
        {
            if (!Character.isLetter(c))
            ptnameflag = 1;
        }

        int saveflag = 1;
        if (DoctorName.equals("") || docnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Doctor Name.");
            saveflag = 0;
        }
        if (PatientName.equals("") || ptnameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Patient Name.");
            saveflag = 0;
        }
        if (EncounterDate == null){
            JOptionPane.showMessageDialog(this, "Invalid Encounter Date.");
            saveflag = 0;
        }
        if (Diagnosis.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Diagnosis.");
            saveflag = 0;
        }
        if (txtBloodPressure1.getText().equals("") || BloodPressure < 0){
            JOptionPane.showMessageDialog(this, "Invalid Blood Pressure.");
            saveflag = 0;
        }
        if (txtHeartRate1.getText().equals("") || HeartRate < 0){
            JOptionPane.showMessageDialog(this, "Invalid Heart Rate.");
            saveflag = 0;
        }
        if (txtTemperature1.getText().equals("") ||Temperature < 0){
            JOptionPane.showMessageDialog(this, "Invalid Temperature.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            encounter ce = encounterhistory.addNewEncounter();
            VitalSigns vs = new VitalSigns();
            vs.setBloodPressure(BloodPressure);
            vs.setHeartRate(HeartRate);
            vs.setTemperature(Temperature);
            ce.setDoctorName(DoctorName);
            ce.setPatientName(PatientName);
            ce.setEncounterDate(EncounterDate);
            ce.setVitalSigns(vs);
            ce.setDiagnosis(Diagnosis);
            ce.setNotes(Notes);

            populateEncountersTable();

            JOptionPane.showMessageDialog(this, "New Encounter Saved.");

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Add New Encounter");
        }
        //        System.out.println(saveflag);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void txtEncounterDate1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEncounterDate1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEncounterDate1ActionPerformed

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void txtPatientName1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPatientName1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPatientName1ActionPerformed

    private void txtCreateUsername4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsername4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsername4ActionPerformed

    private void btnCreate4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate4ActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID5.getText().contains("[a-zA-Z]+")){
            txtEmployeeID5.setText("-1");
        }
        String Username = txtCreateUsername4.getText();
        String Password = txtCreatePassword4.getText();
        String Name = txtName5.getText();
        Date DOB = (Date)txtDOB5.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID5.getText());
        String Gender = cmbGender5.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum5.getText();
        String EmailAdd = txtEmailAdd5.getText();
        String Hospital = txtHospital.getText();
        String Major = txtMajor.getText();

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (Hospital.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Hospital.");
            saveflag = 0;
        }
        if (Major.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Major.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            doctor ei = doctorset.addNewDoctor();
            person ps = new person();
            hospital hp = new hospital();
            hp.setHospitalName(Hospital);
            ei.setUsername(Username);
            ei.setPassword(Password);
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            ei.setHospital(hp);
            ei.setEmployeeID(EmployeeID);
            ei.setMajor(Major);
            ei.setPerson(ps);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB((Date)txtDOB.getValue());
            JOptionPane.showMessageDialog(this, "Doctor Account Created.");

            txtCreateUsername4.setText("");
            txtCreatePassword4.setText("");
            txtName5.setText("");
            txtDOB5.setText("");
            txtEmployeeID5.setText("");
            cmbGender5.setSelectedIndex(0);
            txtPhoneNum5.setText("");
            txtEmailAdd5.setText("");
            txtEmployeeID5.setText("-1");
            txtHospital.setText("");
            txtMajor.setText("");

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Create New Doctor Account.");
        }
    }//GEN-LAST:event_btnCreate4ActionPerformed

    private void txtDOB5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB5ActionPerformed

    private void btnBacktoWorkArea3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktoWorkArea3ActionPerformed
        // TODO add your handling code here:
            HospitalAdminCreateJPanel.setVisible(false);
            HospitalAdminLoginJPanel.setVisible(false);
            HospitalAdminWorkAreaJPanel.setVisible(true);
            HospitalAdminProfileJPanel.setVisible(false);
            ViewEncounterJPanel.setVisible(false);
            AddEncounterJPanel.setVisible(false);
            DoctorCreateJPanel.setVisible(false);
            PatientCreateJPanel.setVisible(false);
            ViewDoctorJPanel.setVisible(false);
            ViewPatientJPanel.setVisible(false);
            DoctorProfileJPanel.setVisible(false);
            PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBacktoWorkArea3ActionPerformed

    private void txtCreateUsername5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCreateUsername5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCreateUsername5ActionPerformed

    private void txtHomeAdd4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHomeAdd4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHomeAdd4ActionPerformed

    private void btnCreate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreate5ActionPerformed
        // TODO add your handling code here:
        String Username = txtCreateUsername5.getText();
        String Password = txtCreatePassword5.getText();
        String Name = txtName4.getText();
        Date DOB = (Date)txtDOB4.getValue();
        String Gender = cmbGender4.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum4.getText();
        String EmailAdd = txtEmailAdd4.getText();
        String HomeAdd = txtHomeAdd4.getText();
        String City = txtCity4.getText();
        String Community = txtCommunity4.getText();
        String PostalCode = txtPostalCode4.getText();
        Boolean Insurance = cbInsurance.isSelected();

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");
            saveflag = 0;
        }

        if (Community.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Community.");
            saveflag = 0;
        }

        if (City.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid City.");
            saveflag = 0;
        }

        if (PostalCode.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Postal Code.");
            saveflag = 0;
        }

        else if (saveflag == 1){
            patient cp = patientset.addNewPatient();
            person ps = new person();
            city ct = new city();
            house hs = new house();
            hs.setAddress(HomeAdd);
            community cm = new community();
            cp.setUsername(Username);
            cp.setPassword(Password);
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB((Date)txtDOB.getValue());
            cp.setInsurance(Insurance);
            cp.setHomeAdd(hs);
            ct.setName(City);
            cm.setName(Community);
            cp.setCity(ct);
            cp.setCommunity(cm);
            cp.setPostalCode(PostalCode);
            cp.setPerson(ps);
            JOptionPane.showMessageDialog(this, "Patient Account Created.");

            txtCreateUsername5.setText("");
            txtCreatePassword5.setText("");
            txtName4.setText("");
            txtDOB4.setText("");
            cmbGender4.setSelectedIndex(0);
            txtPhoneNum4.setText("");
            txtEmailAdd4.setText("");
            txtHomeAdd4.setText("");
            txtCity4.setText("");
            txtCommunity4.setText("");
            txtPostalCode4.setText("");
            cbInsurance.setSelected(false);

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Create New Patient Account.");
        }
    }//GEN-LAST:event_btnCreate5ActionPerformed

    private void txtDOB4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB4ActionPerformed

    private void btnBacktoWorkArea4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktoWorkArea4ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBacktoWorkArea4ActionPerformed

    private void btnDeleteEncounter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncounter3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctors.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
        doctor selectedDoctor = (doctor) model.getValueAt(selectedRowIndex, 0);

        doctorset.deleteEmployee(selectedDoctor);

        JOptionPane.showMessageDialog(this, "Successfully Deleted.");

        populateDoctorTable();

        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Hospital Administrator");
        ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
        ah.setModification("Delete A Doctor");
    }//GEN-LAST:event_btnDeleteEncounter3ActionPerformed

    private void btnViewEncounter3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncounter3ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblDoctors.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }

        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(true);
        PatientProfileJPanel.setVisible(false);

        DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
        doctor selectedDoctor = (doctor) model.getValueAt(selectedRowIndex, 0);

        txtShowUsername5.setText(selectedDoctor.getUsername());
        txtShowPassword5.setText(selectedDoctor.getPassword());
        txtName8.setText(selectedDoctor.getPerson().getName());
        txtDOB8.setValue(selectedDoctor.getPerson().getDOB());
        txtPhoneNum8.setText(selectedDoctor.getPerson().getPhoneNum());
        txtEmailAdd8.setText(selectedDoctor.getPerson().getEmailAdd());
        cmbGender8.setSelectedItem(selectedDoctor.getPerson().getGender());
        txtEmployeeID7.setText(String.valueOf(selectedDoctor.getEmployeeID()));
        txtHospital6.setText(selectedDoctor.getHospital().getHospitalName());
        txtMajor6.setText(selectedDoctor.getMajor());

        txtShowUsername5.setEditable(false);
        txtShowPassword5.setEditable(false);
        txtName8.setEditable(false);
        txtDOB8.setEditable(false);
        txtPhoneNum8.setEditable(false);
        txtEmailAdd8.setEditable(false);
        cmbGender8.setEnabled(false);
        txtEmployeeID7.setEditable(false);
        txtHospital6.setEditable(false);
        txtMajor6.setEditable(false);
    }//GEN-LAST:event_btnViewEncounter3ActionPerformed

    private void btnBack9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack9ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack9ActionPerformed

    private void btnDeleteEncounter4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteEncounter4ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to Delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        patient selectedPatient = (patient) model.getValueAt(selectedRowIndex, 0);

        patientset.deleteEmployee(selectedPatient);

        JOptionPane.showMessageDialog(this, "Successfully Deleted.");

        populatePatientTable();

        Action ah  = actionhistory.addNewAction();
        ah.setPerson("Hospital Administrator");
        ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
        ah.setModification("Delete A Patient");
    }//GEN-LAST:event_btnDeleteEncounter4ActionPerformed

    private void btnViewEncounter4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewEncounter4ActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblPatients.getSelectedRow();
        if (selectedRowIndex < 0){
            JOptionPane.showMessageDialog(this, "Please Select a Row to View.");
            return;
        }
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(true);
        

        DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
        patient selectedPatient = (patient) model.getValueAt(selectedRowIndex, 0);

        txtShowUsername6.setText(selectedPatient.getUsername());
        txtShowPassword6.setText(selectedPatient.getPassword());
        txtName9.setText(selectedPatient.getPerson().getName());
        txtDOB9.setValue(selectedPatient.getPerson().getDOB());
        txtPhoneNum9.setText(selectedPatient.getPerson().getPhoneNum());
        txtEmailAdd9.setText(selectedPatient.getPerson().getEmailAdd());
        cmbGender9.setSelectedItem(selectedPatient.getPerson().getGender());
        txtHomeAdd5.setText(selectedPatient.getHomeAdd().getAddress());
        txtCity5.setText(selectedPatient.getCity().getName());
        txtCommunity5.setText(selectedPatient.getCommunity().getName());
        txtPostalCode5.setText(selectedPatient.getPostalCode());
        cbInsurance1.setSelected(selectedPatient.getInsurance());

        txtShowUsername5.setEditable(false);
        txtShowPassword5.setEditable(false);
        txtName8.setEditable(false);
        txtDOB8.setEditable(false);
        txtPhoneNum8.setEditable(false);
        txtEmailAdd8.setEditable(false);
        cmbGender8.setEnabled(false);
        txtHomeAdd5.setEditable(false);
        txtCity5.setEditable(false);
        txtCommunity5.setEditable(false);
        txtPostalCode5.setEditable(false);
        cbInsurance1.setEnabled(false);

        //    private void btnBack9ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //    }
        //
        //    private void txtShowUsername5ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //    }
        //
        //    private void cmbGender8ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //    }
        //
        //    private void btnEditCommunityadmin2ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //        txtShowUsername5.setEditable(true);
            //        txtShowPassword5.setEditable(true);
            //        txtName8.setEditable(true);
            //        txtDOB8.setEditable(true);
            //        txtPhoneNum8.setEditable(true);
            //        txtEmailAdd8.setEditable(true);
            //        cmbGender8.setEnabled(true);
            //        txtEmployeeID7.setEditable(true);
            //        txtHospital6.setEditable(true);
            //        txtMajor6.setEditable(true);
            //    }
        //
        //    private void txtDOB8ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //    }
        //
        //    private void btnCommunityAdminUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {
            //        // TODO add your handling code here:
            //        if (txtEmployeeID7.getText().contains("[a-zA-Z]+")){
                //            txtEmployeeID7.setText("-1");
                //        }
            //        String Username = txtShowUsername5.getText();
            //        String Password = txtShowPassword5.getText();
            //        String Name = txtName8.getText();
            //        Date DOB = (Date)txtDOB8.getValue();
            //        int EmployeeID = Integer.parseInt(txtEmployeeID7.getText());
            //        String Gender = cmbGender8.getSelectedItem().toString();
            //        String PhoneNum = txtPhoneNum8.getText();
            //        String EmailAdd = txtEmailAdd8.getText();
            //        String Hospital = txtHospital6.getText();
            //        String Major = txtMajor6.getText();
            //
            //        int nameflag = 0;
            //        char[] charArray = Name.toCharArray();
            //        for(char c:charArray)
            //        {
                //        if (!Character.isLetter(c))
                //            nameflag = 1;
                //        }
            //
            //        int phoneflag = 0;
            //        char[] PhoneArray = PhoneNum.toCharArray();
            //        for(char c:PhoneArray)
            //        {
                //        if (!Character.isDigit(c))
                //            phoneflag = 1;
                //        }
            //
            //        int saveflag = 1;
            //        if (Username.equals("")){
                //            JOptionPane.showMessageDialog(this, "Invalid Username.");
                //            saveflag = 0;
                //        }
            //        if (Password.equals("")){
                //            JOptionPane.showMessageDialog(this, "Invalid Password.");
                //            saveflag = 0;
                //        }
            //        if (Hospital.equals("")){
                //            JOptionPane.showMessageDialog(this, "Invalid Department.");
                //            saveflag = 0;
                //        }
            //        if (Name.equals("") || nameflag == 1){
                //            JOptionPane.showMessageDialog(this, "Invalid Name.");
                //            saveflag = 0;
                //        }
            //        if (EmployeeID < 0){
                //            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
                //            saveflag = 0;
                //        }
            //        if (Major.equals("")){
                //            JOptionPane.showMessageDialog(this, "Invalid Department.");
                //            saveflag = 0;
                //        }
            //        if (Gender.equals("None")){
                //            JOptionPane.showMessageDialog(this, "Invalid Gender.");
                //            saveflag = 0;
                //        }
            //        if (DOB == null){
                //            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
                //            saveflag = 0;
                //        }
            //        if (PhoneNum.length() != 10 || phoneflag == 1){
                //            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
                //            saveflag = 0;
                //        }
            //        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
                //            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
                //            saveflag = 0;
                //        }
            //        else if (saveflag == 1){
                //
                //            int selectedRowIndex = tblDoctors.getSelectedRow();
                //            if (selectedRowIndex < 0){
                    //                JOptionPane.showMessageDialog(this, "Please Select a Row to Update.");
                    //                return;
                    //            }
                //
                //            DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
                //            doctor ei = (doctor) model.getValueAt(selectedRowIndex, 0);
                //            person ps = new person();
                //            hospital hp = new hospital();
                //            ps.setUsername(Username);
                //            ps.setPassword(Password);
                //            ps.setPhoneNum(PhoneNum);
                //            ps.setEmailAdd(EmailAdd);
                //            ei.setEmployeeID(EmployeeID);
                //            hp.setHospitalName(Hospital);
                //            ei.setHospital(hp);
                //            ei.setMajor(Major);
                //            ps.setGender(Gender);
                //            ps.setName(Name);
                //            ps.setDOB((Date)txtDOB.getValue());
                //            ei.setPerson(ps);
                //            JOptionPane.showMessageDialog(this, "Doctor Account Updated.");
                //
                //            Action ah  = actionhistory.addNewAction();
                //            ah.setPerson("System Administrator");
                //            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
                //            ah.setModification("Update A Doctor Profile");
                //        }
    }//GEN-LAST:event_btnViewEncounter4ActionPerformed

    private void btnBack11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack11ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack11ActionPerformed

    private void txtShowUsername5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsername5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowUsername5ActionPerformed

    private void cmbGender8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGender8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGender8ActionPerformed

    private void btnEditCommunityadmin2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditCommunityadmin2ActionPerformed
        // TODO add your handling code here:
        txtShowUsername5.setEditable(true);
        txtShowPassword5.setEditable(true);
        txtName8.setEditable(true);
        txtDOB8.setEditable(true);
        txtPhoneNum8.setEditable(true);
        txtEmailAdd8.setEditable(true);
        cmbGender8.setEnabled(true);
        txtEmployeeID7.setEditable(true);
        txtHospital6.setEditable(true);
        txtMajor6.setEditable(true);
    }//GEN-LAST:event_btnEditCommunityadmin2ActionPerformed

    private void txtDOB8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB8ActionPerformed

    private void btnCommunityAdminUpdate2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCommunityAdminUpdate2ActionPerformed
        // TODO add your handling code here:
        if (txtEmployeeID7.getText().contains("[a-zA-Z]+")){
            txtEmployeeID7.setText("-1");
        }
        String Username = txtShowUsername5.getText();
        String Password = txtShowPassword5.getText();
        String Name = txtName8.getText();
        Date DOB = (Date)txtDOB8.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID7.getText());
        String Gender = cmbGender8.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum8.getText();
        String EmailAdd = txtEmailAdd8.getText();
        String Hospital = txtHospital6.getText();
        String Major = txtMajor6.getText();

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Hospital.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Major.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){

            int selectedRowIndex = tblDoctors.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Update.");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblDoctors.getModel();
            doctor ei = (doctor) model.getValueAt(selectedRowIndex, 0);
            person ps = new person();
            hospital hp = new hospital();
            ei.setUsername(Username);
            ei.setPassword(Password);
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            ei.setEmployeeID(EmployeeID);
            hp.setHospitalName(Hospital);
            ei.setHospital(hp);
            ei.setMajor(Major);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB((Date)txtDOB.getValue());
            ei.setPerson(ps);
            populateDoctorTable();
            JOptionPane.showMessageDialog(this, "Doctor Account Updated.");

            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Update A Doctor Profile");
        }
    }//GEN-LAST:event_btnCommunityAdminUpdate2ActionPerformed

    private void btnBack10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack10ActionPerformed
        // TODO add your handling code here:
        
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(true);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBack10ActionPerformed

    private void txtShowUsername6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsername6ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowUsername6ActionPerformed

    private void txtHomeAdd5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtHomeAdd5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtHomeAdd5ActionPerformed

    private void btnUpdate5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdate5ActionPerformed
        // TODO add your handling code here:
        String Username = txtShowUsername6.getText();
        String Password = txtShowPassword6.getText();
        String Name = txtName9.getText();
        Date DOB = (Date)txtDOB9.getValue();
        String Gender = cmbGender9.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum9.getText();
        String EmailAdd = txtEmailAdd9.getText();
        String HomeAdd = txtHomeAdd5.getText();
        String City = txtCity5.getText();
        String Community = txtCommunity5.getText();
        String PostalCode = txtPostalCode5.getText();
        Boolean Insurance = cbInsurance1.isSelected();

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (HomeAdd.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Home Address.");
            saveflag = 0;
        }
        if (City.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid City.");
            saveflag = 0;
        }
        if (Community.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Community.");
            saveflag = 0;
        }
        if (PostalCode.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Postal Code.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){

            int selectedRowIndex = tblPatients.getSelectedRow();
            if (selectedRowIndex < 0){
                JOptionPane.showMessageDialog(this, "Please Select a Row to Update.");
                return;
            }

            DefaultTableModel model = (DefaultTableModel) tblPatients.getModel();
            patient ei = (patient) model.getValueAt(selectedRowIndex, 0);
            person ps = new person();
            city ct = new city();
            house hs = new house();
            community cm = new community();
            cm.setName(Community);
            ct.setName(City);
            hs.setAddress(HomeAdd);

            ei.setUsername(Username);
            ei.setPassword(Password);
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB((Date)txtDOB.getValue());
            ei.setHomeAdd(hs);
            ei.setCity(ct);
            ei.setCommunity(cm);
            ei.setInsurance(Insurance);
            ei.setPostalCode(PostalCode);
            ei.setPerson(ps);
            JOptionPane.showMessageDialog(this, "Patient Account Updated.");
            populatePatientTable();
            Action ah  = actionhistory.addNewAction();
            ah.setPerson("Hospital Administrator");
            ah.setName(systemadminset.getHistory().get(index).getPerson().getName());
            ah.setModification("Update A Patient Profile");
        }
    }//GEN-LAST:event_btnUpdate5ActionPerformed

    private void txtDOB9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB9ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB9ActionPerformed

    private void btnBacktoWorkArea5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBacktoWorkArea5ActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(false);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(true);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBacktoWorkArea5ActionPerformed

    private void btnEdit5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEdit5ActionPerformed
        // TODO add your handling code here:
        txtShowUsername5.setEditable(true);
        txtShowPassword5.setEditable(true);
        txtName8.setEditable(true);
        txtDOB8.setEditable(true);
        txtPhoneNum8.setEditable(true);
        txtEmailAdd8.setEditable(true);
        cmbGender8.setEnabled(true);
        txtHomeAdd5.setEditable(true);
        txtCity5.setEditable(true);
        txtCommunity5.setEditable(true);
        txtPostalCode5.setEditable(true);
        cbInsurance1.setEnabled(true);
    }//GEN-LAST:event_btnEdit5ActionPerformed

    private void txtShowUsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowUsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowUsernameActionPerformed

    private void cmbGender2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGender2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbGender2ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Action ac = actionhistory.addNewAction();

        if (txtEmployeeID2.getText().contains("[a-zA-Z]+")){
            txtEmployeeID2.setText("-1");
        }
        if (txtLevel2.getText().contains("[a-zA-Z]+")){
            txtLevel2.setText("-1");
        }

        String Username = txtShowUsername.getText();
        String Password = txtShowPassword.getText();
        String Name = txtName2.getText();
        Date DOB = (Date)txtDOB2.getValue();
        int EmployeeID = Integer.parseInt(txtEmployeeID2.getText());
        String Gender = cmbGender2.getSelectedItem().toString();
        String PhoneNum = txtPhoneNum2.getText();
        String EmailAdd = txtEmailAdd2.getText();
        String Department = txtDepartment2.getText();
        int Level = Integer.parseInt(txtLevel2.getText());

        int nameflag = 0;
        char[] charArray = Name.toCharArray();
        for(char c:charArray)
        {
            if (!Character.isLetter(c))
            nameflag = 1;
        }

        int phoneflag = 0;
        char[] PhoneArray = PhoneNum.toCharArray();
        for(char c:PhoneArray)
        {
            if (!Character.isDigit(c))
            phoneflag = 1;
        }

        int saveflag = 1;
        if (Username.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Username.");
            saveflag = 0;
        }
        if (Password.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Password.");
            saveflag = 0;
        }
        if (Department.equals("")){
            JOptionPane.showMessageDialog(this, "Invalid Department.");
            saveflag = 0;
        }
        if (Name.equals("") || nameflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Name.");
            saveflag = 0;
        }
        if (EmployeeID < 0){
            JOptionPane.showMessageDialog(this, "Invalid EmployeeID.");
            saveflag = 0;
        }
        if (Level < 0){
            JOptionPane.showMessageDialog(this, "Invalid Level.");
            saveflag = 0;
        }
        if (Gender.equals("None")){
            JOptionPane.showMessageDialog(this, "Invalid Gender.");
            saveflag = 0;
        }
        if (DOB == null){
            JOptionPane.showMessageDialog(this, "Invalid Date of Birth.");
            saveflag = 0;
        }
        if (PhoneNum.length() != 10 || phoneflag == 1){
            JOptionPane.showMessageDialog(this, "Invalid Phone Number.");
            saveflag = 0;
        }
        if (EmailAdd.equals("") || !EmailAdd.contains("@")){
            JOptionPane.showMessageDialog(this, "Invalid Email Address.");
            saveflag = 0;
        }
        else if (saveflag == 1){
            admin sa = hospitaladminset.getHistory().get(index);
            person ps = new person();
            sa.setUsername(Username);
            sa.setPassword(Password);
            ps.setPhoneNum(PhoneNum);
            ps.setEmailAdd(EmailAdd);
            sa.setEmployeeID(EmployeeID);
            sa.setDepartment(Department);
            sa.setLevel(Level);
            ps.setGender(Gender);
            ps.setName(Name);
            ps.setDOB((Date)txtDOB.getValue());
            sa.setPerson(ps);

            ac.setPerson("Hospital Administrator");
            ac.setName(Name);
            ac.setModification("Update Profile");
            JOptionPane.showMessageDialog(this, "Hospital Admin Profile Updated.");
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void txtDOB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDOB2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDOB2ActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        // TODO add your handling code here:
        txtShowUsername.setEditable(true);
        txtShowPassword.setEditable(true);
        txtName2.setEditable(true);
        txtDOB2.setEditable(true);
        txtPhoneNum2.setEditable(true);
        txtEmailAdd2.setEditable(true);
        cmbGender2.setEnabled(true);
        txtEmployeeID2.setEditable(true);
        txtDepartment2.setEditable(true);
        txtLevel2.setEditable(true);
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        HospitalAdminCreateJPanel.setVisible(false);
        HospitalAdminLoginJPanel.setVisible(false);
        HospitalAdminWorkAreaJPanel.setVisible(true);
        HospitalAdminProfileJPanel.setVisible(false);
        ViewEncounterJPanel.setVisible(false);
        AddEncounterJPanel.setVisible(false);
        DoctorCreateJPanel.setVisible(false);
        PatientCreateJPanel.setVisible(false);
        ViewDoctorJPanel.setVisible(false);
        ViewPatientJPanel.setVisible(false);
        DoctorProfileJPanel.setVisible(false);
        PatientProfileJPanel.setVisible(false);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddEncounterJPanel;
    private javax.swing.JPanel DoctorCreateJPanel;
    private javax.swing.JPanel DoctorProfileJPanel;
    private javax.swing.JPanel HospitalAdminCreateJPanel;
    private javax.swing.JPanel HospitalAdminLoginJPanel;
    private javax.swing.JPanel HospitalAdminProfileJPanel;
    private javax.swing.JPanel HospitalAdminWorkAreaJPanel;
    private javax.swing.JPanel PatientCreateJPanel;
    private javax.swing.JPanel PatientProfileJPanel;
    private javax.swing.JPanel ViewDoctorJPanel;
    private javax.swing.JPanel ViewEncounterJPanel;
    private javax.swing.JPanel ViewPatientJPanel;
    private javax.swing.JButton btnAddEncounter;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnBack10;
    private javax.swing.JButton btnBack11;
    private javax.swing.JButton btnBack2;
    private javax.swing.JButton btnBack3;
    private javax.swing.JButton btnBack9;
    private javax.swing.JButton btnBacktoWorkArea3;
    private javax.swing.JButton btnBacktoWorkArea4;
    private javax.swing.JButton btnBacktoWorkArea5;
    private javax.swing.JButton btnCommunityAdminUpdate2;
    private javax.swing.JButton btnCreate;
    private javax.swing.JButton btnCreate4;
    private javax.swing.JButton btnCreate5;
    private javax.swing.JButton btnCreateAccount;
    private javax.swing.JButton btnCreateNew;
    private javax.swing.JButton btnDeleteEncounter;
    private javax.swing.JButton btnDeleteEncounter3;
    private javax.swing.JButton btnDeleteEncounter4;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnEdit1;
    private javax.swing.JButton btnEdit5;
    private javax.swing.JButton btnEditCommunityadmin2;
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnProfile;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JButton btnUpdate1;
    private javax.swing.JButton btnUpdate5;
    private javax.swing.JButton btnView;
    private javax.swing.JButton btnViewEncounter;
    private javax.swing.JButton btnViewEncounter3;
    private javax.swing.JButton btnViewEncounter4;
    private javax.swing.JCheckBox cbInsurance;
    private javax.swing.JCheckBox cbInsurance1;
    private javax.swing.JComboBox<String> cmbGender;
    private javax.swing.JComboBox<String> cmbGender2;
    private javax.swing.JComboBox<String> cmbGender4;
    private javax.swing.JComboBox<String> cmbGender5;
    private javax.swing.JComboBox<String> cmbGender8;
    private javax.swing.JComboBox<String> cmbGender9;
    private javax.swing.JComboBox<String> cmbUser;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JLabel lblAdminInfo;
    private javax.swing.JLabel lblAdminInfo4;
    private javax.swing.JLabel lblAdminLogin;
    private javax.swing.JLabel lblBloodPressure;
    private javax.swing.JLabel lblBloodPressure1;
    private javax.swing.JLabel lblCity4;
    private javax.swing.JLabel lblCity5;
    private javax.swing.JLabel lblCommunity4;
    private javax.swing.JLabel lblCommunity5;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JLabel lblCreateAccount4;
    private javax.swing.JLabel lblCreateAccount5;
    private javax.swing.JLabel lblCreateAccount7;
    private javax.swing.JLabel lblCreateAccount8;
    private javax.swing.JLabel lblCreateNew1;
    private javax.swing.JLabel lblCreatePassword;
    private javax.swing.JLabel lblCreatePassword4;
    private javax.swing.JLabel lblCreatePassword5;
    private javax.swing.JLabel lblCreatePassword7;
    private javax.swing.JLabel lblCreatePassword8;
    private javax.swing.JLabel lblCreateUsername;
    private javax.swing.JLabel lblCreateUsername4;
    private javax.swing.JLabel lblCreateUsername5;
    private javax.swing.JLabel lblCreateUsername7;
    private javax.swing.JLabel lblCreateUsername8;
    private javax.swing.JLabel lblDOB;
    private javax.swing.JLabel lblDOB2;
    private javax.swing.JLabel lblDOB4;
    private javax.swing.JLabel lblDOB5;
    private javax.swing.JLabel lblDOB8;
    private javax.swing.JLabel lblDOB9;
    private javax.swing.JLabel lblDepartment;
    private javax.swing.JLabel lblDepartment2;
    private javax.swing.JLabel lblDiagnosis;
    private javax.swing.JLabel lblDiagnosis1;
    private javax.swing.JLabel lblDoctorInfo;
    private javax.swing.JLabel lblDoctorName;
    private javax.swing.JLabel lblDoctorName1;
    private javax.swing.JLabel lblEmailAdd;
    private javax.swing.JLabel lblEmailAdd2;
    private javax.swing.JLabel lblEmailAdd4;
    private javax.swing.JLabel lblEmailAdd5;
    private javax.swing.JLabel lblEmailAdd8;
    private javax.swing.JLabel lblEmailAdd9;
    private javax.swing.JLabel lblEmployeeID;
    private javax.swing.JLabel lblEmployeeID2;
    private javax.swing.JLabel lblEmployeeID5;
    private javax.swing.JLabel lblEmployeeID7;
    private javax.swing.JLabel lblEncounterDate;
    private javax.swing.JLabel lblEncounterDate1;
    private javax.swing.JLabel lblEncounterDetail;
    private javax.swing.JLabel lblEncounterDetail1;
    private javax.swing.JLabel lblGender;
    private javax.swing.JLabel lblGender2;
    private javax.swing.JLabel lblGender4;
    private javax.swing.JLabel lblGender5;
    private javax.swing.JLabel lblGender8;
    private javax.swing.JLabel lblGender9;
    private javax.swing.JLabel lblHeartRate;
    private javax.swing.JLabel lblHeartRate1;
    private javax.swing.JLabel lblHomeAdd4;
    private javax.swing.JLabel lblHomeAdd5;
    private javax.swing.JLabel lblHospital;
    private javax.swing.JLabel lblHospital6;
    private javax.swing.JLabel lblLevel;
    private javax.swing.JLabel lblLevel2;
    private javax.swing.JLabel lblMajor;
    private javax.swing.JLabel lblMajor6;
    private javax.swing.JLabel lblManageEncounter;
    private javax.swing.JLabel lblManageEncounter3;
    private javax.swing.JLabel lblManageEncounter4;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblName2;
    private javax.swing.JLabel lblName4;
    private javax.swing.JLabel lblName5;
    private javax.swing.JLabel lblName8;
    private javax.swing.JLabel lblName9;
    private javax.swing.JLabel lblNewUser;
    private javax.swing.JLabel lblNotes;
    private javax.swing.JLabel lblNotes1;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblPatientName;
    private javax.swing.JLabel lblPatientName1;
    private javax.swing.JLabel lblPhoneNum;
    private javax.swing.JLabel lblPhoneNum2;
    private javax.swing.JLabel lblPhoneNum4;
    private javax.swing.JLabel lblPhoneNum5;
    private javax.swing.JLabel lblPhoneNum8;
    private javax.swing.JLabel lblPhoneNum9;
    private javax.swing.JLabel lblPostalCode4;
    private javax.swing.JLabel lblPostalCode5;
    private javax.swing.JLabel lblProfile;
    private javax.swing.JLabel lblShowPassword;
    private javax.swing.JLabel lblShowUsername;
    private javax.swing.JLabel lblTemperature;
    private javax.swing.JLabel lblTemperature1;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPasswordField pwdPassword;
    private javax.swing.JTable tblDoctors;
    private javax.swing.JTable tblEncounters;
    private javax.swing.JTable tblPatients;
    private javax.swing.JTextField txtBloodPressure;
    private javax.swing.JTextField txtBloodPressure1;
    private javax.swing.JTextField txtCity4;
    private javax.swing.JTextField txtCity5;
    private javax.swing.JTextField txtCommunity4;
    private javax.swing.JTextField txtCommunity5;
    private javax.swing.JPasswordField txtCreatePassword;
    private javax.swing.JPasswordField txtCreatePassword4;
    private javax.swing.JPasswordField txtCreatePassword5;
    private javax.swing.JTextField txtCreateUsername;
    private javax.swing.JTextField txtCreateUsername4;
    private javax.swing.JTextField txtCreateUsername5;
    private javax.swing.JFormattedTextField txtDOB;
    private javax.swing.JFormattedTextField txtDOB2;
    private javax.swing.JFormattedTextField txtDOB4;
    private javax.swing.JFormattedTextField txtDOB5;
    private javax.swing.JFormattedTextField txtDOB8;
    private javax.swing.JFormattedTextField txtDOB9;
    private javax.swing.JTextField txtDepartment;
    private javax.swing.JTextField txtDepartment2;
    private javax.swing.JTextField txtDiagnosis;
    private javax.swing.JTextField txtDiagnosis1;
    private javax.swing.JTextField txtDoctorName;
    private javax.swing.JTextField txtDoctorName1;
    private javax.swing.JTextField txtEmailAdd;
    private javax.swing.JTextField txtEmailAdd2;
    private javax.swing.JTextField txtEmailAdd4;
    private javax.swing.JTextField txtEmailAdd5;
    private javax.swing.JTextField txtEmailAdd8;
    private javax.swing.JTextField txtEmailAdd9;
    private javax.swing.JTextField txtEmployeeID;
    private javax.swing.JTextField txtEmployeeID2;
    private javax.swing.JTextField txtEmployeeID5;
    private javax.swing.JTextField txtEmployeeID7;
    private javax.swing.JFormattedTextField txtEncounterDate;
    private javax.swing.JFormattedTextField txtEncounterDate1;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtHeartRate1;
    private javax.swing.JTextField txtHomeAdd4;
    private javax.swing.JTextField txtHomeAdd5;
    private javax.swing.JTextField txtHospital;
    private javax.swing.JTextField txtHospital6;
    private javax.swing.JTextField txtLevel;
    private javax.swing.JTextField txtLevel2;
    private javax.swing.JTextField txtMajor;
    private javax.swing.JTextField txtMajor6;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtName2;
    private javax.swing.JTextField txtName4;
    private javax.swing.JTextField txtName5;
    private javax.swing.JTextField txtName8;
    private javax.swing.JTextField txtName9;
    private javax.swing.JTextArea txtNotes;
    private javax.swing.JTextArea txtNotes1;
    private javax.swing.JTextField txtPatientName;
    private javax.swing.JTextField txtPatientName1;
    private javax.swing.JTextField txtPhoneNum;
    private javax.swing.JTextField txtPhoneNum2;
    private javax.swing.JTextField txtPhoneNum4;
    private javax.swing.JTextField txtPhoneNum5;
    private javax.swing.JTextField txtPhoneNum8;
    private javax.swing.JTextField txtPhoneNum9;
    private javax.swing.JTextField txtPostalCode4;
    private javax.swing.JTextField txtPostalCode5;
    private javax.swing.JPasswordField txtShowPassword;
    private javax.swing.JPasswordField txtShowPassword5;
    private javax.swing.JPasswordField txtShowPassword6;
    private javax.swing.JTextField txtShowUsername;
    private javax.swing.JTextField txtShowUsername5;
    private javax.swing.JTextField txtShowUsername6;
    private javax.swing.JTextField txtTemperature;
    private javax.swing.JTextField txtTemperature1;
    private javax.swing.JTextField txtUsername;
    // End of variables declaration//GEN-END:variables

    private void populateDoctorTable() {
        DefaultTableModel model = (DefaultTableModel)tblDoctors.getModel();
        model.setRowCount(0);
        
        for (doctor dr : doctorset.getHistory()){
            Object[] row = new Object[4];
            row[0] = dr;
            row[1] = dr.getHospital().getHospitalName();
            row[2] = dr.getEmployeeID();
            row[3] = dr.getMajor();
            
            model.addRow(row);
        }
    }

    private void populatePatientTable() {
        DefaultTableModel model = (DefaultTableModel)tblPatients.getModel();
        model.setRowCount(0);
        
        for (patient pt : patientset.getHistory()){
            Object[] row = new Object[4];
            row[0] = pt;
            row[1] = pt.getCommunity().getName();
            row[2] = pt.getPerson().getGender();
            row[3] = pt.getInsurance();
            
            model.addRow(row);
        }   
    }

    private void populateEncountersTable() {
        DefaultTableModel model = (DefaultTableModel)tblEncounters.getModel();
        model.setRowCount(0);
        
        for (encounter et : encounterhistory.getHistory()){
            Object[] row = new Object[4];
            row[0] = et;
            row[1] = et.getDoctorName();
            row[2] = et.getPatientName();
            row[3] = et.getDiagnosis();
            
            model.addRow(row);
        }  
    }
}
